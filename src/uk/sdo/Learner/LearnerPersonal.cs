// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.uk.Common;

namespace OpenADK.Library.uk.Learner{

/// <summary>This object contains personal information related to a learner. Compare with US/Canada object: StudentPersonal</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 2.0</para>
/// </remarks>
[Serializable]
public class LearnerPersonal : SifDataObject
{
	/// <summary>
	/// Creates an instance of a LearnerPersonal
	/// </summary>
	public LearnerPersonal() : base( Adk.SifVersion, LearnerDTD.LEARNERPERSONAL ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="refId">The ID (GUID) of the learner.</param>
	///<param name="personalInformation">Personal name, demographic, address, email, and phone information for this learner. CBDS: Mulitple</param>
	///<param name="inCare">Information relating to whether the learner is "looked after" as defined by the Children Act 1989, which refers to children who are subject to care orders and those who are accommodated.</param>
	///
	public LearnerPersonal( string refId, PersonalInformation personalInformation, InCare inCare ) : base( Adk.SifVersion, LearnerDTD.LEARNERPERSONAL )
	{
		this.RefId = refId;
		this.PersonalInformation = personalInformation;
		this.InCare = inCare;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected LearnerPersonal( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { LearnerDTD.LEARNERPERSONAL_REFID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>RefId</c> attribute.
	/// </summary>
	/// <value> The <c>RefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The ID (GUID) of the learner."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public override string RefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearnerDTD.LEARNERPERSONAL_REFID ) ;
		}
		set
		{
			SetFieldValue( LearnerDTD.LEARNERPERSONAL_REFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;LocalId&gt;</c> element.
	/// </summary>
	/// <value> The <c>LocalId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The locally-assigned identifier for this learner. This can be the internal pupil number or any other number as determined by the publishing agent."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string LocalId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearnerDTD.LEARNERPERSONAL_LOCALID ) ;
		}
		set
		{
			SetFieldValue( LearnerDTD.LEARNERPERSONAL_LOCALID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AlertMsgList&gt;</c> element.
	/// </summary>
	/// <value> An AlertMsgList </value>
	/// <remarks>
	/// <para>To remove the <c>AlertMsgList</c>, set <c>AlertMsgList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public AlertMsgList AlertMsgList
	{
		get
		{
			return (AlertMsgList)GetChild( LearnerDTD.LEARNERPERSONAL_ALERTMSGLIST);
		}
		set
		{
			RemoveChild( LearnerDTD.LEARNERPERSONAL_ALERTMSGLIST);
			if( value != null)
			{
				AddChild( LearnerDTD.LEARNERPERSONAL_ALERTMSGLIST, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;MedicalAlertMsgList&gt;</c> element.
	/// </summary>
	/// <value> A MedicalAlertMsgList </value>
	/// <remarks>
	/// <para>To remove the <c>MedicalAlertMsgList</c>, set <c>MedicalAlertMsgList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public MedicalAlertMsgList MedicalAlertMsgList
	{
		get
		{
			return (MedicalAlertMsgList)GetChild( LearnerDTD.LEARNERPERSONAL_MEDICALALERTMSGLIST);
		}
		set
		{
			RemoveChild( LearnerDTD.LEARNERPERSONAL_MEDICALALERTMSGLIST);
			if( value != null)
			{
				AddChild( LearnerDTD.LEARNERPERSONAL_MEDICALALERTMSGLIST, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;PersonalInformation&gt;</c> element.</summary>
	/// <param name="Name">Name information for this person. CBDS: Multiple</param>
	///<remarks>
	/// <para>This form of <c>setPersonalInformation</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>PersonalInformation</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetPersonalInformation( Name Name ) {
		RemoveChild( LearnerDTD.LEARNERPERSONAL_PERSONALINFORMATION);
		AddChild( LearnerDTD.LEARNERPERSONAL_PERSONALINFORMATION, new PersonalInformation( Name ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PersonalInformation&gt;</c> element.
	/// </summary>
	/// <value> A PersonalInformation </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Personal name, demographic, address, email, and phone information for this learner. CBDS: Mulitple"</para>
	/// <para>To remove the <c>PersonalInformation</c>, set <c>PersonalInformation</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public PersonalInformation PersonalInformation
	{
		get
		{
			return (PersonalInformation)GetChild( LearnerDTD.LEARNERPERSONAL_PERSONALINFORMATION);
		}
		set
		{
			RemoveChild( LearnerDTD.LEARNERPERSONAL_PERSONALINFORMATION);
			if( value != null)
			{
				AddChild( LearnerDTD.LEARNERPERSONAL_PERSONALINFORMATION, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;UIPI&gt;</c> element.
	/// </summary>
	/// <value> The <c>UIPI</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Unique Internal Pupil Number. CBDS: 100015"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string UIPI
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearnerDTD.LEARNERPERSONAL_UIPI ) ;
		}
		set
		{
			SetFieldValue( LearnerDTD.LEARNERPERSONAL_UIPI, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;UPN&gt;</c> element.
	/// </summary>
	/// <value> The <c>UPN</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Unique Pupil Number (UPN) allocated to each learner in maintained schools in England and Wales. It is an identifier for use in the educational context during a child's school career only and subject to Data Protection restrictions. CBDS: 100001"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string UPN
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearnerDTD.LEARNERPERSONAL_UPN ) ;
		}
		set
		{
			SetFieldValue( LearnerDTD.LEARNERPERSONAL_UPN, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;UPNAllocationDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>UPNAllocationDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Date UPN was allocated by the LA. CBDS: 100017"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public DateTime? UPNAllocationDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( LearnerDTD.LEARNERPERSONAL_UPNALLOCATIONDATE ) ;
		}
		set
		{
			SetFieldValue( LearnerDTD.LEARNERPERSONAL_UPNALLOCATIONDATE, new SifDate( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;FormerUPNList&gt;</c> element.</summary>
	/// <param name="Upn">A former UPN assigned to the pupil whilst at a school (eg temporary UPN was allocated when the pupil was first admitted to the school but subsequently replaced by the permanent UPN being retrieved from a previous school). CBDS: 100002</param>
	///<remarks>
	/// <para>This form of <c>setFormerUPNList</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>FormerUPNList</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetFormerUPNList( UPN Upn ) {
		RemoveChild( LearnerDTD.LEARNERPERSONAL_FORMERUPNLIST);
		AddChild( LearnerDTD.LEARNERPERSONAL_FORMERUPNLIST, new FormerUPNList( Upn ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;FormerUPNList&gt;</c> element.
	/// </summary>
	/// <value> A FormerUPNList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "A list of former UPN's assigned to the learner, since it is possible that a learner could have more than one assigned."</para>
	/// <para>To remove the <c>FormerUPNList</c>, set <c>FormerUPNList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public FormerUPNList FormerUPNList
	{
		get
		{
			return (FormerUPNList)GetChild( LearnerDTD.LEARNERPERSONAL_FORMERUPNLIST);
		}
		set
		{
			RemoveChild( LearnerDTD.LEARNERPERSONAL_FORMERUPNLIST);
			if( value != null)
			{
				AddChild( LearnerDTD.LEARNERPERSONAL_FORMERUPNLIST, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ULN&gt;</c> element.
	/// </summary>
	/// <value> The <c>ULN</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Unique Learner Number (ULN), a 10-digit number where zero is not allowed as the leading digit."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string ULN
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearnerDTD.LEARNERPERSONAL_ULN ) ;
		}
		set
		{
			SetFieldValue( LearnerDTD.LEARNERPERSONAL_ULN, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;FamilyStructure&gt;</c> element.
	/// </summary>
	/// <value> The <c>FamilyStructure</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Indicates type of family structure learner is living in. CBDS: 100053"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string FamilyStructure
	{
		get
		{ 
			return GetFieldValue( LearnerDTD.LEARNERPERSONAL_FAMILYSTRUCTURE );
		}
		set
		{
			SetField( LearnerDTD.LEARNERPERSONAL_FAMILYSTRUCTURE, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;FamilyStructure&gt;</c> element.
	/// </summary>
	/// <param name="val">A FamilyStructure object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Indicates type of family structure learner is living in. CBDS: 100053"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetFamilyStructure( FamilyStructure val )
	{
		SetField( LearnerDTD.LEARNERPERSONAL_FAMILYSTRUCTURE, val );
	}

	///<summary>Sets the value of the <c>&lt;InCare&gt;</c> element.</summary>
	/// <param name="Current">Indicates if the learner is "looked after" currently. CBDS: 100038</param>
	/// <param name="LaId">The 'originating' authority where the learner was originally placed in public care and which looks after the child for the purposes of the Children Act 1989. CBDS: 100039</param>
	///<remarks>
	/// <para>This form of <c>setInCare</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>InCare</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetInCare( YesNoUnknown Current, string LaId ) {
		RemoveChild( LearnerDTD.LEARNERPERSONAL_INCARE);
		AddChild( LearnerDTD.LEARNERPERSONAL_INCARE, new InCare( Current, LaId ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;InCare&gt;</c> element.
	/// </summary>
	/// <value> An InCare </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Information relating to whether the learner is "looked after" as defined by the Children Act 1989, which refers to children who are subject to care orders and those who are accommodated."</para>
	/// <para>To remove the <c>InCare</c>, set <c>InCare</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public InCare InCare
	{
		get
		{
			return (InCare)GetChild( LearnerDTD.LEARNERPERSONAL_INCARE);
		}
		set
		{
			RemoveChild( LearnerDTD.LEARNERPERSONAL_INCARE);
			if( value != null)
			{
				AddChild( LearnerDTD.LEARNERPERSONAL_INCARE, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ConnexionsAgreement&gt;</c> element.
	/// </summary>
	/// <value> The <c>ConnexionsAgreement</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Indicates if parents have consented to allow learner data to be shared with Connexions (Middle, Secondary and Special Schools only). "</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string ConnexionsAgreement
	{
		get
		{ 
			return GetFieldValue( LearnerDTD.LEARNERPERSONAL_CONNEXIONSAGREEMENT );
		}
		set
		{
			SetField( LearnerDTD.LEARNERPERSONAL_CONNEXIONSAGREEMENT, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;ConnexionsAgreement&gt;</c> element.
	/// </summary>
	/// <param name="val">A ConnexionsAgreement object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Indicates if parents have consented to allow learner data to be shared with Connexions (Middle, Secondary and Special Schools only). "</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetConnexionsAgreement( ConnexionsAgreement val )
	{
		SetField( LearnerDTD.LEARNERPERSONAL_CONNEXIONSAGREEMENT, val );
	}

	///<summary>Sets the value of the <c>&lt;ChildProtectionRegister&gt;</c> element.</summary>
	/// <param name="IsRegistered">Indicates if the learner has been registered on the Child Protection Register. CBDS: 100042</param>
	///<remarks>
	/// <para>This form of <c>setChildProtectionRegister</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ChildProtectionRegister</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetChildProtectionRegister( YesNoUnknown IsRegistered ) {
		RemoveChild( LearnerDTD.LEARNERPERSONAL_CHILDPROTECTIONREGISTER);
		AddChild( LearnerDTD.LEARNERPERSONAL_CHILDPROTECTIONREGISTER, new ChildProtectionRegister( IsRegistered ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ChildProtectionRegister&gt;</c> element.
	/// </summary>
	/// <value> A ChildProtectionRegister </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Information relating to the Child Protection Register as it pertains to this learner."</para>
	/// <para>To remove the <c>ChildProtectionRegister</c>, set <c>ChildProtectionRegister</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public ChildProtectionRegister ChildProtectionRegister
	{
		get
		{
			return (ChildProtectionRegister)GetChild( LearnerDTD.LEARNERPERSONAL_CHILDPROTECTIONREGISTER);
		}
		set
		{
			RemoveChild( LearnerDTD.LEARNERPERSONAL_CHILDPROTECTIONREGISTER);
			if( value != null)
			{
				AddChild( LearnerDTD.LEARNERPERSONAL_CHILDPROTECTIONREGISTER, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;GiftedTalented&gt;</c> element.
	/// </summary>
	/// <value> The <c>GiftedTalented</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Learner qualifies for Gifted/Talented status."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string GiftedTalented
	{
		get
		{ 
			return GetFieldValue( LearnerDTD.LEARNERPERSONAL_GIFTEDTALENTED );
		}
		set
		{
			SetField( LearnerDTD.LEARNERPERSONAL_GIFTEDTALENTED, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;GiftedTalented&gt;</c> element.
	/// </summary>
	/// <param name="val">A YesNo object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Learner qualifies for Gifted/Talented status."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetGiftedTalented( YesNo val )
	{
		SetField( LearnerDTD.LEARNERPERSONAL_GIFTEDTALENTED, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;HomeLA&gt;</c> element.
	/// </summary>
	/// <value> The <c>HomeLA</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The LA in which the learner lives but not necessarily the one in which they attend school. CBDS: 100032"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string HomeLA
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearnerDTD.LEARNERPERSONAL_HOMELA ) ;
		}
		set
		{
			SetFieldValue( LearnerDTD.LEARNERPERSONAL_HOMELA, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;LearnerIdentity&gt;</c> element.
	/// </summary>
	/// <value> The <c>LearnerIdentity</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Classification of national identity. (Wales) CBDS: 190001"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string LearnerIdentity
	{
		get
		{ 
			return GetFieldValue( LearnerDTD.LEARNERPERSONAL_LEARNERIDENTITY );
		}
		set
		{
			SetField( LearnerDTD.LEARNERPERSONAL_LEARNERIDENTITY, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;LearnerIdentity&gt;</c> element.
	/// </summary>
	/// <param name="val">A LearnerIdentity object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Classification of national identity. (Wales) CBDS: 190001"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetLearnerIdentity( LearnerIdentity val )
	{
		SetField( LearnerDTD.LEARNERPERSONAL_LEARNERIDENTITY, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ModeOfTravel&gt;</c> element.
	/// </summary>
	/// <value> The <c>ModeOfTravel</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The usual mode of travel normally used by the learner for the greater part (in distance) of the journey to and from school."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.1</para>
	/// </remarks>
	public string ModeOfTravel
	{
		get
		{ 
			return GetFieldValue( LearnerDTD.LEARNERPERSONAL_MODEOFTRAVEL );
		}
		set
		{
			SetField( LearnerDTD.LEARNERPERSONAL_MODEOFTRAVEL, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;ModeOfTravel&gt;</c> element.
	/// </summary>
	/// <param name="val">A UsualModeOfTravel object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The usual mode of travel normally used by the learner for the greater part (in distance) of the journey to and from school."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.1</para>
	/// </remarks>
	public void SetModeOfTravel( UsualModeOfTravel val )
	{
		SetField( LearnerDTD.LEARNERPERSONAL_MODEOFTRAVEL, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Pregnant&gt;</c> element.
	/// </summary>
	/// <value> The <c>Pregnant</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Learner is pregnant. CBDS: 100056"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Pregnant
	{
		get
		{ 
			return GetFieldValue( LearnerDTD.LEARNERPERSONAL_PREGNANT );
		}
		set
		{
			SetField( LearnerDTD.LEARNERPERSONAL_PREGNANT, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;Pregnant&gt;</c> element.
	/// </summary>
	/// <param name="val">A YesNo object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Learner is pregnant. CBDS: 100056"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetPregnant( YesNo val )
	{
		SetField( LearnerDTD.LEARNERPERSONAL_PREGNANT, val );
	}

	///<summary>Sets the value of the <c>&lt;SiblingList&gt;</c> element.</summary>
	/// <param name="Sibling">A sibling of this learner in the same school.</param>
	///<remarks>
	/// <para>This form of <c>setSiblingList</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>SiblingList</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetSiblingList( Sibling Sibling ) {
		RemoveChild( LearnerDTD.LEARNERPERSONAL_SIBLINGLIST);
		AddChild( LearnerDTD.LEARNERPERSONAL_SIBLINGLIST, new SiblingList( Sibling ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SiblingList&gt;</c> element.
	/// </summary>
	/// <value> A SiblingList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "List of siblings also in same school."</para>
	/// <para>To remove the <c>SiblingList</c>, set <c>SiblingList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public SiblingList SiblingList
	{
		get
		{
			return (SiblingList)GetChild( LearnerDTD.LEARNERPERSONAL_SIBLINGLIST);
		}
		set
		{
			RemoveChild( LearnerDTD.LEARNERPERSONAL_SIBLINGLIST);
			if( value != null)
			{
				AddChild( LearnerDTD.LEARNERPERSONAL_SIBLINGLIST, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;UniformAllowance&gt;</c> element.
	/// </summary>
	/// <value> The <c>UniformAllowance</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Learner is paid a uniform allowance."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string UniformAllowance
	{
		get
		{ 
			return GetFieldValue( LearnerDTD.LEARNERPERSONAL_UNIFORMALLOWANCE );
		}
		set
		{
			SetField( LearnerDTD.LEARNERPERSONAL_UNIFORMALLOWANCE, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;UniformAllowance&gt;</c> element.
	/// </summary>
	/// <param name="val">A YesNo object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Learner is paid a uniform allowance."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetUniformAllowance( YesNo val )
	{
		SetField( LearnerDTD.LEARNERPERSONAL_UNIFORMALLOWANCE, val );
	}

	///<summary>Sets the value of the <c>&lt;CurrentSchoolEnrolment&gt;</c> element.</summary>
	/// <param name="LearnerSchoolEnrolmentRefId">The ID (GUID) of the LearnerSchoolEnrolment record associated with this learner that is also designated as the current or current main enrolment.</param>
	/// <param name="LaId">The DfES assigned number for the LA in which the learner is currently enroled with respect to their current or current main (home) school. CBDS: 100013, 100032, 100162, 900009</param>
	/// <param name="EstablishmentId">The DfES assigned number for the school or establishment in which the learner is currently enroled with respect to their current or current main (home) school. CBDS: 100004, 100163, 900010</param>
	/// <param name="NcYearGroup">The current or most recent National Curriculum Year Group of the learner in the LA. </param>
	///<remarks>
	/// <para>This form of <c>setCurrentSchoolEnrolment</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>CurrentSchoolEnrolment</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetCurrentSchoolEnrolment( string LearnerSchoolEnrolmentRefId, string LaId, string EstablishmentId, NCYearGroup NcYearGroup ) {
		RemoveChild( LearnerDTD.LEARNERPERSONAL_CURRENTSCHOOLENROLMENT);
		AddChild( LearnerDTD.LEARNERPERSONAL_CURRENTSCHOOLENROLMENT, new CurrentSchoolEnrolment( LearnerSchoolEnrolmentRefId, LaId, EstablishmentId, NcYearGroup ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;CurrentSchoolEnrolment&gt;</c> element.
	/// </summary>
	/// <value> A CurrentSchoolEnrolment </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "This container reflects key enrolment data for the current or current main (home) school or establishment linked to a learner.  An agent may operate more efficiently if the data represented here is sufficient.  If the agent requires more data or needs to retrieve enrolment data from all enroled schools then it may still need to request some or all LearnerSchoolEnrolment objects for the learner.  This information should always be specified when there is an active enrolment.  It must also accurately reflect the data in the represented LearnerSchoolEnrolment object and generate change events for this object when change events are detected for LearnerSchoolEnrolment."</para>
	/// <para>To remove the <c>CurrentSchoolEnrolment</c>, set <c>CurrentSchoolEnrolment</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public CurrentSchoolEnrolment CurrentSchoolEnrolment
	{
		get
		{
			return (CurrentSchoolEnrolment)GetChild( LearnerDTD.LEARNERPERSONAL_CURRENTSCHOOLENROLMENT);
		}
		set
		{
			RemoveChild( LearnerDTD.LEARNERPERSONAL_CURRENTSCHOOLENROLMENT);
			if( value != null)
			{
				AddChild( LearnerDTD.LEARNERPERSONAL_CURRENTSCHOOLENROLMENT, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PreviousEstablishmentList&gt;</c> element.
	/// </summary>
	/// <value> A PreviousEstablishmentList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "A list of known previous schools or establishments."</para>
	/// <para>To remove the <c>PreviousEstablishmentList</c>, set <c>PreviousEstablishmentList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public PreviousEstablishmentList PreviousEstablishmentList
	{
		get
		{
			return (PreviousEstablishmentList)GetChild( LearnerDTD.LEARNERPERSONAL_PREVIOUSESTABLISHMENTLIST);
		}
		set
		{
			RemoveChild( LearnerDTD.LEARNERPERSONAL_PREVIOUSESTABLISHMENTLIST);
			if( value != null)
			{
				AddChild( LearnerDTD.LEARNERPERSONAL_PREVIOUSESTABLISHMENTLIST, value );
			}
		}
	}

}}
