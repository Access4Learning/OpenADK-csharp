// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using OpenADK.Library;

namespace OpenADK.Library.uk.Learner
{
	///<summary>
	/// Defines the set of values that can be specified whenever an ExclusionReason
	/// is used as a parameter to a method or constructor. 
	///</summary>
	/// <remarks>
	/// Alternatively, the static
	///  <see cref="Wrap"/> method can be called to encapsulate any string value in
	///  an ExclusionReason object.
	/// <para>Author: Generated by adkgen</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	[Serializable]
	public class ExclusionReason : SifEnum
	{
	/// <summary>Threatening or dangerous behaviour ("TB")</summary>
	public static readonly ExclusionReason THREATENING_OR_DANGEROUS = new ExclusionReason("TB");

	/// <summary>Defiance of rules/ discipline policy ("DR")</summary>
	public static readonly ExclusionReason DEFIANCE_OF_RULES_DISCIPLINE = new ExclusionReason("DR");

	/// <summary>Drug and alcohol related ("DA")</summary>
	public static readonly ExclusionReason DRUG_AND_ALCOHOL_RELATED = new ExclusionReason("DA");

	/// <summary>Racist abuse ("RA")</summary>
	public static readonly ExclusionReason RACIST_ABUSE = new ExclusionReason("RA");

	/// <summary>Other ("OT")</summary>
	public static readonly ExclusionReason OTHER = new ExclusionReason("OT");

	/// <summary>Bullying ("BU")</summary>
	public static readonly ExclusionReason BULLYING = new ExclusionReason("BU");

	/// <summary>Persistent disruptive behaviour ("DB")</summary>
	public static readonly ExclusionReason PERSISTENT_DISRUPTIVE = new ExclusionReason("DB");

	/// <summary>Damage ("DM")</summary>
	public static readonly ExclusionReason DAMAGE = new ExclusionReason("DM");

	/// <summary>Sexual misconduct ("SM")</summary>
	public static readonly ExclusionReason SEXUAL_MISCONDUCT = new ExclusionReason("SM");

	/// <summary>Verbal abuse/threatening behaviour against a pupil ("VP")</summary>
	public static readonly ExclusionReason VERBAL_ABUSE_PUPIL = new ExclusionReason("VP");

	/// <summary>Physical assault against a pupil ("PP")</summary>
	public static readonly ExclusionReason PHYSICAL_ASSAULT_PUPIL = new ExclusionReason("PP");

	/// <summary>Possession / use of weapon ("PW")</summary>
	public static readonly ExclusionReason PW_POSSESSION_WEAPON = new ExclusionReason("PW");

	/// <summary>Theft ("TH")</summary>
	public static readonly ExclusionReason THEFT = new ExclusionReason("TH");

	/// <summary>Verbal abuse/threatening behaviour against an adult ("VA")</summary>
	public static readonly ExclusionReason VERBAL_ABUSE_ADULT = new ExclusionReason("VA");

	/// <summary>Physical assault against an adult ("PA")</summary>
	public static readonly ExclusionReason PHYSICAL_ASSAULT_ADULT = new ExclusionReason("PA");

	///<summary>Wrap an arbitrary string value in an ExclusionReason object.</summary>
	///<param name="wrappedValue">The element/attribute value.</param>
	///<remarks>This method does not verify
	///that the value is valid according to the SIF Specification</remarks>
	public static ExclusionReason Wrap( String wrappedValue ) {
		return new ExclusionReason( wrappedValue );
	}

	private ExclusionReason( string enumDefValue ) : base( enumDefValue ) {}
	}
}
