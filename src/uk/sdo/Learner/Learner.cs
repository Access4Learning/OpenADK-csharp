// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.uk.Common;

namespace OpenADK.Library.uk.Learner{

/// <summary>A Learner</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.3</para>
/// </remarks>
[Serializable]
public class Learner : SifKeyedElement
{
	/// <summary>
	/// Creates an instance of a Learner
	/// </summary>
	public Learner() : base ( LearnerDTD.LEARNER ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="learnerPersonalRefId">The REFID of the learner</param>
	///<param name="participationTypes">A ParticipationTypes</param>
	///
	public Learner( string learnerPersonalRefId, ParticipationType participationTypes ) : base( LearnerDTD.LEARNER )
	{
		this.LearnerPersonalRefId = learnerPersonalRefId;
		this.ParticipationTypes =  new ParticipationTypes( participationTypes );
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected Learner( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { LearnerDTD.LEARNER_LEARNERPERSONALREFID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>LearnerPersonalRefId</c> attribute.
	/// </summary>
	/// <value> The <c>LearnerPersonalRefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The REFID of the learner"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string LearnerPersonalRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearnerDTD.LEARNER_LEARNERPERSONALREFID ) ;
		}
		set
		{
			SetFieldValue( LearnerDTD.LEARNER_LEARNERPERSONALREFID, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;ParticipationTypes&gt;</c> element.</summary>
	/// <param name="ParticipationType">The capacity of Involvement</param>
	///<remarks>
	/// <para>This form of <c>setParticipationTypes</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ParticipationTypes</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetParticipationTypes( ParticipationType ParticipationType ) {
		RemoveChild( LearnerDTD.LEARNER_PARTICIPATIONTYPES);
		AddChild( LearnerDTD.LEARNER_PARTICIPATIONTYPES, new ParticipationTypes( ParticipationType ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ParticipationTypes&gt;</c> element.
	/// </summary>
	/// <value> A ParticipationTypes </value>
	/// <remarks>
	/// <para>To remove the <c>ParticipationTypes</c>, set <c>ParticipationTypes</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public ParticipationTypes ParticipationTypes
	{
		get
		{
			return (ParticipationTypes)GetChild( LearnerDTD.LEARNER_PARTICIPATIONTYPES);
		}
		set
		{
			RemoveChild( LearnerDTD.LEARNER_PARTICIPATIONTYPES);
			if( value != null)
			{
				AddChild( LearnerDTD.LEARNER_PARTICIPATIONTYPES, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ParticipationComment&gt;</c> element.
	/// </summary>
	/// <value> The <c>ParticipationComment</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "free text comments about the individuals Involvement In the incident"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string ParticipationComment
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearnerDTD.LEARNER_PARTICIPATIONCOMMENT ) ;
		}
		set
		{
			SetFieldValue( LearnerDTD.LEARNER_PARTICIPATIONCOMMENT, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Motivation&gt;</c> element.
	/// </summary>
	/// <value> The <c>Motivation</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Any recorded Motivation for participation"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string Motivation
	{
		get
		{ 
			return GetFieldValue( LearnerDTD.LEARNER_MOTIVATION );
		}
		set
		{
			SetField( LearnerDTD.LEARNER_MOTIVATION, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;Motivation&gt;</c> element.
	/// </summary>
	/// <param name="val">A Motivation object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Any recorded Motivation for participation"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetMotivation( Motivation val )
	{
		SetField( LearnerDTD.LEARNER_MOTIVATION, val );
	}

	///<summary>Sets the value of the <c>&lt;Weighting&gt;</c> element.</summary>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;Weighting&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setWeighting</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Weighting</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetWeighting( string Value ) {
		RemoveChild( LearnerDTD.LEARNER_WEIGHTING);
		AddChild( LearnerDTD.LEARNER_WEIGHTING, new Weighting( Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Weighting&gt;</c> element.
	/// </summary>
	/// <value> A Weighting </value>
	/// <remarks>
	/// <para>To remove the <c>Weighting</c>, set <c>Weighting</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public Weighting Weighting
	{
		get
		{
			return (Weighting)GetChild( LearnerDTD.LEARNER_WEIGHTING);
		}
		set
		{
			RemoveChild( LearnerDTD.LEARNER_WEIGHTING);
			if( value != null)
			{
				AddChild( LearnerDTD.LEARNER_WEIGHTING, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Actions&gt;</c> element.</summary>
	/// <param name="Action">An Action</param>
	///<remarks>
	/// <para>This form of <c>setActions</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Actions</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetActions( Action Action ) {
		RemoveChild( LearnerDTD.LEARNER_ACTIONS);
		AddChild( LearnerDTD.LEARNER_ACTIONS, new Actions( Action ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Actions&gt;</c> element.
	/// </summary>
	/// <value> An Actions </value>
	/// <remarks>
	/// <para>To remove the <c>Actions</c>, set <c>Actions</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public Actions Actions
	{
		get
		{
			return (Actions)GetChild( LearnerDTD.LEARNER_ACTIONS);
		}
		set
		{
			RemoveChild( LearnerDTD.LEARNER_ACTIONS);
			if( value != null)
			{
				AddChild( LearnerDTD.LEARNER_ACTIONS, value );
			}
		}
	}

}}
