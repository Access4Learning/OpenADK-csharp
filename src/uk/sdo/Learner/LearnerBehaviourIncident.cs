// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.uk.Common;

namespace OpenADK.Library.uk.Learner{

/// <summary>A LearnerBehaviourIncident</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 2.3</para>
/// </remarks>
[Serializable]
public class LearnerBehaviourIncident : SifDataObject
{
	/// <summary>
	/// Creates an instance of a LearnerBehaviourIncident
	/// </summary>
	public LearnerBehaviourIncident() : base( Adk.SifVersion, LearnerDTD.LEARNERBEHAVIOURINCIDENT ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="refId">The ID (GUID) that uniquely identifies a particular incident</param>
	///<param name="schoolInfoRefId">The ID (GUID) of the school that the event takes place.</param>
	///<param name="behaviourType">A BehaviourType</param>
	///<param name="incident">An Incident</param>
	///<param name="participants">A Participants</param>
	///
	public LearnerBehaviourIncident( string refId, string schoolInfoRefId, BehaviourType behaviourType, Incident incident, Participants participants ) : base( Adk.SifVersion, LearnerDTD.LEARNERBEHAVIOURINCIDENT )
	{
		this.RefId = refId;
		this.SchoolInfoRefId = schoolInfoRefId;
		this.BehaviourType = behaviourType;
		this.Incident = incident;
		this.Participants = participants;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected LearnerBehaviourIncident( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { LearnerDTD.LEARNERBEHAVIOURINCIDENT_REFID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>RefId</c> attribute.
	/// </summary>
	/// <value> The <c>RefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The ID (GUID) that uniquely identifies a particular incident"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public override string RefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearnerDTD.LEARNERBEHAVIOURINCIDENT_REFID ) ;
		}
		set
		{
			SetFieldValue( LearnerDTD.LEARNERBEHAVIOURINCIDENT_REFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SchoolInfoRefId&gt;</c> element.
	/// </summary>
	/// <value> The <c>SchoolInfoRefId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The ID (GUID) of the school that the event takes place."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string SchoolInfoRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearnerDTD.LEARNERBEHAVIOURINCIDENT_SCHOOLINFOREFID ) ;
		}
		set
		{
			SetFieldValue( LearnerDTD.LEARNERBEHAVIOURINCIDENT_SCHOOLINFOREFID, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;BehaviourType&gt;</c> element.</summary>
	/// <param name="Weighting">A Weighting</param>
	/// <param name="Classification">Agreed Classification for this behaviour type</param>
	///<remarks>
	/// <para>This form of <c>setBehaviourType</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>BehaviourType</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetBehaviourType( int? Weighting, string Classification ) {
		RemoveChild( LearnerDTD.LEARNERBEHAVIOURINCIDENT_BEHAVIOURTYPE);
		AddChild( LearnerDTD.LEARNERBEHAVIOURINCIDENT_BEHAVIOURTYPE, new BehaviourType( Weighting, Classification ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;BehaviourType&gt;</c> element.
	/// </summary>
	/// <value> A BehaviourType </value>
	/// <remarks>
	/// <para>To remove the <c>BehaviourType</c>, set <c>BehaviourType</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public BehaviourType BehaviourType
	{
		get
		{
			return (BehaviourType)GetChild( LearnerDTD.LEARNERBEHAVIOURINCIDENT_BEHAVIOURTYPE);
		}
		set
		{
			RemoveChild( LearnerDTD.LEARNERBEHAVIOURINCIDENT_BEHAVIOURTYPE);
			if( value != null)
			{
				AddChild( LearnerDTD.LEARNERBEHAVIOURINCIDENT_BEHAVIOURTYPE, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Incident&gt;</c> element.</summary>
	/// <param name="Date">Date and time Incident took place (started to take place)</param>
	/// <param name="Location">The Location the Incident (mostly) took place</param>
	/// <param name="Confidentiality">May indicate the type of persons that this should be displayed to</param>
	///<remarks>
	/// <para>This form of <c>setIncident</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Incident</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetIncident( DateTime? Date, Location Location, Confidentiality Confidentiality ) {
		RemoveChild( LearnerDTD.LEARNERBEHAVIOURINCIDENT_INCIDENT);
		AddChild( LearnerDTD.LEARNERBEHAVIOURINCIDENT_INCIDENT, new Incident( Date, Location, Confidentiality ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Incident&gt;</c> element.
	/// </summary>
	/// <value> An Incident </value>
	/// <remarks>
	/// <para>To remove the <c>Incident</c>, set <c>Incident</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public Incident Incident
	{
		get
		{
			return (Incident)GetChild( LearnerDTD.LEARNERBEHAVIOURINCIDENT_INCIDENT);
		}
		set
		{
			RemoveChild( LearnerDTD.LEARNERBEHAVIOURINCIDENT_INCIDENT);
			if( value != null)
			{
				AddChild( LearnerDTD.LEARNERBEHAVIOURINCIDENT_INCIDENT, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Participants&gt;</c> element.</summary>
	/// <param name="Employees">An Employees</param>
	/// <param name="Learners">A Learners</param>
	///<remarks>
	/// <para>This form of <c>setParticipants</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Participants</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetParticipants( Employee Employees, Learner Learners ) {
		RemoveChild( LearnerDTD.LEARNERBEHAVIOURINCIDENT_PARTICIPANTS);
		AddChild( LearnerDTD.LEARNERBEHAVIOURINCIDENT_PARTICIPANTS, new Participants( Employees, Learners ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Participants&gt;</c> element.
	/// </summary>
	/// <value> A Participants </value>
	/// <remarks>
	/// <para>To remove the <c>Participants</c>, set <c>Participants</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public Participants Participants
	{
		get
		{
			return (Participants)GetChild( LearnerDTD.LEARNERBEHAVIOURINCIDENT_PARTICIPANTS);
		}
		set
		{
			RemoveChild( LearnerDTD.LEARNERBEHAVIOURINCIDENT_PARTICIPANTS);
			if( value != null)
			{
				AddChild( LearnerDTD.LEARNERBEHAVIOURINCIDENT_PARTICIPANTS, value );
			}
		}
	}

}}
