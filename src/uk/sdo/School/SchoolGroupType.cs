// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.uk.Common;

namespace OpenADK.Library.uk.School{

/// <summary>This object describes a high-level course or class grouping organised and/or taught within a school or establishment.  Note that not all courses are based upon a subject area.  One such course is "Class Group" which is the same as a homeroom or registration group. Compare with US/Canada object: SchoolCourseInfo</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 2.0</para>
/// </remarks>
[Serializable]
public class SchoolGroupType : SifDataObject
{
	/// <summary>
	/// Creates an instance of a SchoolGroupType
	/// </summary>
	public SchoolGroupType() : base( Adk.SifVersion, SchoolDTD.SCHOOLGROUPTYPE ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="refId">The GUID that uniquely identifies a school group type, such as a course. </param>
	///<param name="schoolInfoRefId">The ID (GUID) that references the school or establishment where the course is offered or the registration group exists. </param>
	///<param name="schoolYear">School year for which the information is applicable, expressed as the four-digit year in which the school year ends (e.g. 2007 for the 2006/07 school year). Where a group membership is valid across multiple years, the current year at the time of publication will be used. </param>
	///<param name="groupType">The group type.  Teaching groups are used to teach subjects while other groups are organised for various other reasons.</param>
	///
	public SchoolGroupType( string refId, string schoolInfoRefId, int? schoolYear, GroupTypeCode groupType ) : base( Adk.SifVersion, SchoolDTD.SCHOOLGROUPTYPE )
	{
		this.RefId = refId;
		this.SchoolInfoRefId = schoolInfoRefId;
		this.SchoolYear = schoolYear;
		this.SetGroupType( groupType );
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected SchoolGroupType( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { SchoolDTD.SCHOOLGROUPTYPE_REFID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>RefId</c> attribute.
	/// </summary>
	/// <value> The <c>RefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The GUID that uniquely identifies a school group type, such as a course. "</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public override string RefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( SchoolDTD.SCHOOLGROUPTYPE_REFID ) ;
		}
		set
		{
			SetFieldValue( SchoolDTD.SCHOOLGROUPTYPE_REFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>SchoolInfoRefId</c> attribute.
	/// </summary>
	/// <value> The <c>SchoolInfoRefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The ID (GUID) that references the school or establishment where the course is offered or the registration group exists. "</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string SchoolInfoRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( SchoolDTD.SCHOOLGROUPTYPE_SCHOOLINFOREFID ) ;
		}
		set
		{
			SetFieldValue( SchoolDTD.SCHOOLGROUPTYPE_SCHOOLINFOREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>SchoolYear</c> attribute.
	/// </summary>
	/// <value> The <c>SchoolYear</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "School year for which the information is applicable, expressed as the four-digit year in which the school year ends (e.g. 2007 for the 2006/07 school year). Where a group membership is valid across multiple years, the current year at the time of publication will be used. "</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public int? SchoolYear
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( SchoolDTD.SCHOOLGROUPTYPE_SCHOOLYEAR ) ;
		}
		set
		{
			SetFieldValue( SchoolDTD.SCHOOLGROUPTYPE_SCHOOLYEAR, new SifInt( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>GroupType</c> attribute.
	/// </summary>
	/// <value> The <c>GroupType</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The group type.  Teaching groups are used to teach subjects while other groups are organised for various other reasons."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string GroupType
	{
		get
		{ 
			return GetFieldValue( SchoolDTD.SCHOOLGROUPTYPE_GROUPTYPE );
		}
		set
		{
			SetField( SchoolDTD.SCHOOLGROUPTYPE_GROUPTYPE, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>GroupType</c> attribute.
	/// </summary>
	/// <param name="val">A GroupTypeCode object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The group type.  Teaching groups are used to teach subjects while other groups are organised for various other reasons."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetGroupType( GroupTypeCode val )
	{
		SetField( SchoolDTD.SCHOOLGROUPTYPE_GROUPTYPE, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Code&gt;</c> element.
	/// </summary>
	/// <value> The <c>Code</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "School defined local code for the group, such as the course code, if applicable."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Code
	{
		get
		{
			return (string) GetSifSimpleFieldValue( SchoolDTD.SCHOOLGROUPTYPE_CODE ) ;
		}
		set
		{
			SetFieldValue( SchoolDTD.SCHOOLGROUPTYPE_CODE, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Title&gt;</c> element.
	/// </summary>
	/// <value> The <c>Title</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Title of the group."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Title
	{
		get
		{
			return (string) GetSifSimpleFieldValue( SchoolDTD.SCHOOLGROUPTYPE_TITLE ) ;
		}
		set
		{
			SetFieldValue( SchoolDTD.SCHOOLGROUPTYPE_TITLE, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Description&gt;</c> element.
	/// </summary>
	/// <value> The <c>Description</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Textual description for the group."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Description
	{
		get
		{
			return (string) GetSifSimpleFieldValue( SchoolDTD.SCHOOLGROUPTYPE_DESCRIPTION ) ;
		}
		set
		{
			SetFieldValue( SchoolDTD.SCHOOLGROUPTYPE_DESCRIPTION, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;SubjectAreaList&gt;</c> element.</summary>
	/// <param name="SubjectArea">Subject matter.</param>
	///<remarks>
	/// <para>This form of <c>setSubjectAreaList</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>SubjectAreaList</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetSubjectAreaList( SubjectArea SubjectArea ) {
		RemoveChild( SchoolDTD.SCHOOLGROUPTYPE_SUBJECTAREALIST);
		AddChild( SchoolDTD.SCHOOLGROUPTYPE_SUBJECTAREALIST, new SubjectAreaList( SubjectArea ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SubjectAreaList&gt;</c> element.
	/// </summary>
	/// <value> A SubjectAreaList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Subject matter areas taught as part of the group, if any."</para>
	/// <para>To remove the <c>SubjectAreaList</c>, set <c>SubjectAreaList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public SubjectAreaList SubjectAreaList
	{
		get
		{
			return (SubjectAreaList)GetChild( SchoolDTD.SCHOOLGROUPTYPE_SUBJECTAREALIST);
		}
		set
		{
			RemoveChild( SchoolDTD.SCHOOLGROUPTYPE_SUBJECTAREALIST);
			if( value != null)
			{
				AddChild( SchoolDTD.SCHOOLGROUPTYPE_SUBJECTAREALIST, value );
			}
		}
	}

}}
