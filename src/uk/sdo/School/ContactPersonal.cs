// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.uk.Common;

namespace OpenADK.Library.uk.School{

/// <summary>This object describes any person created as a contact at a school, LEA, or other institution, or associated with a Learner or other Workforce person.</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.0</para>
/// </remarks>
[Serializable]
public class ContactPersonal : SifDataObject
{
	/// <summary>
	/// Creates an instance of a ContactPersonal
	/// </summary>
	public ContactPersonal() : base( Adk.SifVersion, SchoolDTD.CONTACTPERSONAL ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="refId">The ID (GUID) of a person referenced as a contact. Note that this GUID may be the same GUID assigned to a LearnerPersonal and/or WorkforcePersonal object record.</param>
	///<param name="personalInformation">Name, demographic, address, email, and phone information for a person acting as a contact.</param>
	///
	public ContactPersonal( string refId, PersonalInformation personalInformation ) : base( Adk.SifVersion, SchoolDTD.CONTACTPERSONAL )
	{
		this.RefId = refId;
		this.PersonalInformation = personalInformation;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected ContactPersonal( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { SchoolDTD.CONTACTPERSONAL_REFID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>RefId</c> attribute.
	/// </summary>
	/// <value> The <c>RefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The ID (GUID) of a person referenced as a contact. Note that this GUID may be the same GUID assigned to a LearnerPersonal and/or WorkforcePersonal object record."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public override string RefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( SchoolDTD.CONTACTPERSONAL_REFID ) ;
		}
		set
		{
			SetFieldValue( SchoolDTD.CONTACTPERSONAL_REFID, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;PersonalInformation&gt;</c> element.</summary>
	/// <param name="Name">Name information for this person. CBDS: Multiple</param>
	///<remarks>
	/// <para>This form of <c>setPersonalInformation</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>PersonalInformation</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetPersonalInformation( Name Name ) {
		RemoveChild( SchoolDTD.CONTACTPERSONAL_PERSONALINFORMATION);
		AddChild( SchoolDTD.CONTACTPERSONAL_PERSONALINFORMATION, new PersonalInformation( Name ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PersonalInformation&gt;</c> element.
	/// </summary>
	/// <value> A PersonalInformation </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Name, demographic, address, email, and phone information for a person acting as a contact."</para>
	/// <para>To remove the <c>PersonalInformation</c>, set <c>PersonalInformation</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public PersonalInformation PersonalInformation
	{
		get
		{
			return (PersonalInformation)GetChild( SchoolDTD.CONTACTPERSONAL_PERSONALINFORMATION);
		}
		set
		{
			RemoveChild( SchoolDTD.CONTACTPERSONAL_PERSONALINFORMATION);
			if( value != null)
			{
				AddChild( SchoolDTD.CONTACTPERSONAL_PERSONALINFORMATION, value );
			}
		}
	}

}}
