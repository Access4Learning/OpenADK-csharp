// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.uk.Common;

namespace OpenADK.Library.uk.Learning{

/// <summary>An Output</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.3</para>
/// </remarks>
[Serializable]
public class Output : SifKeyedElement
{
	/// <summary>
	/// Creates an instance of an Output
	/// </summary>
	public Output() : base ( LearningDTD.OUTPUT ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="type">"TG" has special meaning – it means this is the bottom of the "tree" and the output is a TeachingGroup. "YR" means a year (or "principal division") within the school (7,8,9,etc).</param>
	///
	public Output( OutputType type ) : base( LearningDTD.OUTPUT )
	{
		this.SetType( type );
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected Output( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { LearningDTD.OUTPUT_TYPE }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Type&gt;</c> element.
	/// </summary>
	/// <value> The <c>Type</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: ""TG" has special meaning – it means this is the bottom of the "tree" and the output is a TeachingGroup. "YR" means a year (or "principal division") within the school (7,8,9,etc)."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string Type
	{
		get
		{ 
			return GetFieldValue( LearningDTD.OUTPUT_TYPE );
		}
		set
		{
			SetField( LearningDTD.OUTPUT_TYPE, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;Type&gt;</c> element.
	/// </summary>
	/// <param name="val">A OutputType object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: ""TG" has special meaning – it means this is the bottom of the "tree" and the output is a TeachingGroup. "YR" means a year (or "principal division") within the school (7,8,9,etc)."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetType( OutputType val )
	{
		SetField( LearningDTD.OUTPUT_TYPE, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;LocalType&gt;</c> element.
	/// </summary>
	/// <value> The <c>LocalType</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string LocalType
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearningDTD.OUTPUT_LOCALTYPE ) ;
		}
		set
		{
			SetFieldValue( LearningDTD.OUTPUT_LOCALTYPE, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;GroupLocalId&gt;</c> element.
	/// </summary>
	/// <value> The <c>GroupLocalId</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string GroupLocalId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearningDTD.OUTPUT_GROUPLOCALID ) ;
		}
		set
		{
			SetFieldValue( LearningDTD.OUTPUT_GROUPLOCALID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;TeachingGroupRefId&gt;</c> element.
	/// </summary>
	/// <value> The <c>TeachingGroupRefId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "If Type = "TG" then include here the TeachingGroupID (see TeachingGroup)"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string TeachingGroupRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearningDTD.OUTPUT_TEACHINGGROUPREFID ) ;
		}
		set
		{
			SetFieldValue( LearningDTD.OUTPUT_TEACHINGGROUPREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Desc&gt;</c> element.
	/// </summary>
	/// <value> The <c>Desc</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string Desc
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearningDTD.OUTPUT_DESC ) ;
		}
		set
		{
			SetFieldValue( LearningDTD.OUTPUT_DESC, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ShortDesc&gt;</c> element.
	/// </summary>
	/// <value> The <c>ShortDesc</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string ShortDesc
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearningDTD.OUTPUT_SHORTDESC ) ;
		}
		set
		{
			SetFieldValue( LearningDTD.OUTPUT_SHORTDESC, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;NCYearList&gt;</c> element.</summary>
	/// <param name="NcYear">NC Year Group</param>
	///<remarks>
	/// <para>This form of <c>setNCYearList</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>NCYearList</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetNCYearList( NCYearGroup NcYear ) {
		RemoveChild( LearningDTD.OUTPUT_NCYEARLIST);
		AddChild( LearningDTD.OUTPUT_NCYEARLIST, new NCYearList( NcYear ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;NCYearList&gt;</c> element.
	/// </summary>
	/// <value> A NCYearList </value>
	/// <remarks>
	/// <para>To remove the <c>NCYearList</c>, set <c>NCYearList</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public NCYearList NCYearList
	{
		get
		{
			return (NCYearList)GetChild( LearningDTD.OUTPUT_NCYEARLIST);
		}
		set
		{
			RemoveChild( LearningDTD.OUTPUT_NCYEARLIST);
			if( value != null)
			{
				AddChild( LearningDTD.OUTPUT_NCYEARLIST, value );
			}
		}
	}

}}
