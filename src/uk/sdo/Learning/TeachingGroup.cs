// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.uk.Common;

namespace OpenADK.Library.uk.Learning{

/// <summary>A TeachingGroup</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.3</para>
/// </remarks>
[Serializable]
public class TeachingGroup : SifDataObject
{
	/// <summary>
	/// Creates an instance of a TeachingGroup
	/// </summary>
	public TeachingGroup() : base( Adk.SifVersion, LearningDTD.TEACHINGGROUP ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="refId">Unique local ID</param>
	///
	public TeachingGroup( string refId ) : base( Adk.SifVersion, LearningDTD.TEACHINGGROUP )
	{
		this.RefId = refId;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected TeachingGroup( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { LearningDTD.TEACHINGGROUP_REFID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>RefId</c> attribute.
	/// </summary>
	/// <value> The <c>RefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "Unique local ID"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public override string RefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearningDTD.TEACHINGGROUP_REFID ) ;
		}
		set
		{
			SetFieldValue( LearningDTD.TEACHINGGROUP_REFID, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;GroupDefinition&gt;</c> element.</summary>
	/// <param name="ShortName">A ShortName</param>
	/// <param name="LongName">A LongName</param>
	/// <param name="TtSubjectRefId">Subject being taught - see TTSubject NB: We do not allow a TG to have no subject</param>
	///<remarks>
	/// <para>This form of <c>setGroupDefinition</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>GroupDefinition</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetGroupDefinition( string ShortName, string LongName, string TtSubjectRefId ) {
		RemoveChild( LearningDTD.TEACHINGGROUP_GROUPDEFINITION);
		AddChild( LearningDTD.TEACHINGGROUP_GROUPDEFINITION, new GroupDefinition( ShortName, LongName, TtSubjectRefId ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;GroupDefinition&gt;</c> element.
	/// </summary>
	/// <value> A GroupDefinition </value>
	/// <remarks>
	/// <para>To remove the <c>GroupDefinition</c>, set <c>GroupDefinition</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public GroupDefinition GroupDefinition
	{
		get
		{
			return (GroupDefinition)GetChild( LearningDTD.TEACHINGGROUP_GROUPDEFINITION);
		}
		set
		{
			RemoveChild( LearningDTD.TEACHINGGROUP_GROUPDEFINITION);
			if( value != null)
			{
				AddChild( LearningDTD.TEACHINGGROUP_GROUPDEFINITION, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;MainTeacherRefId&gt;</c> element.
	/// </summary>
	/// <value> The <c>MainTeacherRefId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The main teacher / supervisor / etc for this group (for reporting / recognition purposes) (see TTTeacher)"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string MainTeacherRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearningDTD.TEACHINGGROUP_MAINTEACHERREFID ) ;
		}
		set
		{
			SetFieldValue( LearningDTD.TEACHINGGROUP_MAINTEACHERREFID, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;GroupTeacherList&gt;</c> element.</summary>
	/// <param name="GroupTeacher">A GroupTeacher</param>
	///<remarks>
	/// <para>This form of <c>setGroupTeacherList</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>GroupTeacherList</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetGroupTeacherList( GroupTeacher GroupTeacher ) {
		RemoveChild( LearningDTD.TEACHINGGROUP_GROUPTEACHERLIST);
		AddChild( LearningDTD.TEACHINGGROUP_GROUPTEACHERLIST, new GroupTeacherList( GroupTeacher ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;GroupTeacherList&gt;</c> element.
	/// </summary>
	/// <value> A GroupTeacherList </value>
	/// <remarks>
	/// <para>To remove the <c>GroupTeacherList</c>, set <c>GroupTeacherList</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public GroupTeacherList GroupTeacherList
	{
		get
		{
			return (GroupTeacherList)GetChild( LearningDTD.TEACHINGGROUP_GROUPTEACHERLIST);
		}
		set
		{
			RemoveChild( LearningDTD.TEACHINGGROUP_GROUPTEACHERLIST);
			if( value != null)
			{
				AddChild( LearningDTD.TEACHINGGROUP_GROUPTEACHERLIST, value );
			}
		}
	}

}}
