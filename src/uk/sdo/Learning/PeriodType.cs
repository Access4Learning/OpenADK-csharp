// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using OpenADK.Library;

namespace OpenADK.Library.uk.Learning
{
	///<summary>
	/// Defines the set of values that can be specified whenever a PeriodType
	/// is used as a parameter to a method or constructor. 
	///</summary>
	/// <remarks>
	/// Alternatively, the static
	///  <see cref="Wrap"/> method can be called to encapsulate any string value in
	///  a PeriodType object.
	/// <para>Author: Generated by adkgen</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	[Serializable]
	public class PeriodType : SifEnum
	{
	/// <summary>'unused' period (on a non-rectangular cycle) ("X")</summary>
	public static readonly PeriodType X_UNUSED_PERIOD_ONNONRECTANGULAR_CYCLE = new PeriodType("X");

	/// <summary>teaching period ("T")</summary>
	public static readonly PeriodType T_TEACHING_PERIOD = new PeriodType("T");

	/// <summary>outside school hours (eg: clubs) ("O")</summary>
	public static readonly PeriodType O_OUTSIDE_SCHOOL_HOURS_EG_CLUBS = new PeriodType("O");

	/// <summary>lunch ("L")</summary>
	public static readonly PeriodType L_LUNCH = new PeriodType("L");

	/// <summary>registration ("R")</summary>
	public static readonly PeriodType R_REGISTRATION = new PeriodType("R");

	/// <summary>other non-teaching ("N")</summary>
	public static readonly PeriodType N_OT_NONTEACHING = new PeriodType("N");

	/// <summary>break ("B")</summary>
	public static readonly PeriodType B_BREAK = new PeriodType("B");

	///<summary>Wrap an arbitrary string value in a PeriodType object.</summary>
	///<param name="wrappedValue">The element/attribute value.</param>
	///<remarks>This method does not verify
	///that the value is valid according to the SIF Specification</remarks>
	public static PeriodType Wrap( String wrappedValue ) {
		return new PeriodType( wrappedValue );
	}

	private PeriodType( string enumDefValue ) : base( enumDefValue ) {}
	}
}
