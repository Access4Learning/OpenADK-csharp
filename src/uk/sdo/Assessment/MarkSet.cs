// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.uk.Common;

namespace OpenADK.Library.uk.Assessment{

/// <summary>A MarkSet</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.1</para>
/// </remarks>
[Serializable]
public class MarkSet : SifElement
{
	/// <summary>
	/// Creates an instance of a MarkSet
	/// </summary>
	public MarkSet() : base ( AssessmentDTD.MARKSET ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="minValue">The minimum value in the range of marks.</param>
	///<param name="maxValue">The maximum value in the range of marks.</param>
	///
	public MarkSet( decimal? minValue, decimal? maxValue ) : base( AssessmentDTD.MARKSET )
	{
		this.MinValue = minValue;
		this.MaxValue = maxValue;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected MarkSet( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public  IElementDef[] KeyFields {
		get { return new IElementDef[] { AssessmentDTD.MARKSET_MINVALUE, AssessmentDTD.MARKSET_MAXVALUE }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StartDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>StartDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Start date of the range validity - ranges should not overlap. If not supplied then assumed to have always been valid in the past."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.1</para>
	/// </remarks>
	public DateTime? StartDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( AssessmentDTD.MARKSET_STARTDATE ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.MARKSET_STARTDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EndDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>EndDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "End date of the range validity - ranges should not overlap.  If not supplied then assumed to always will be valid in the future."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.1</para>
	/// </remarks>
	public DateTime? EndDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( AssessmentDTD.MARKSET_ENDDATE ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.MARKSET_ENDDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;MinValue&gt;</c> element.
	/// </summary>
	/// <value> The <c>MinValue</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The minimum value in the range of marks."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.1</para>
	/// </remarks>
	public decimal? MinValue
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( AssessmentDTD.MARKSET_MINVALUE ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.MARKSET_MINVALUE, new SifDecimal( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;MaxValue&gt;</c> element.
	/// </summary>
	/// <value> The <c>MaxValue</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The maximum value in the range of marks."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.1</para>
	/// </remarks>
	public decimal? MaxValue
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( AssessmentDTD.MARKSET_MAXVALUE ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.MARKSET_MAXVALUE, new SifDecimal( value ), value );
		}
	}

}}
