// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;

namespace OpenADK.Library.uk.Common{

/// <summary>This element contains basic personal and demographic information related to a person.  This element is part of all "personal" objects, including LearnerPersonal, WorkforcePersonal, and ContactPersonal.</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.0</para>
/// </remarks>
[Serializable]
public class PersonalInformation : SifKeyedElement
{
	/// <summary>
	/// Creates an instance of a PersonalInformation
	/// </summary>
	public PersonalInformation() : base ( CommonDTD.PERSONALINFORMATION ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="name">Name information for this person. CBDS: Multiple</param>
	///
	public PersonalInformation( Name name ) : base( CommonDTD.PERSONALINFORMATION )
	{
		this.Name = name;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected PersonalInformation( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { CommonDTD.PERSONALINFORMATION_NAME }; }
	}

	///<summary>Sets the value of the <c>&lt;Name&gt;</c> element.</summary>
	/// <param name="Type">Code that specifies what type of name this is</param>
	/// <param name="FamilyName">Full legal family name. That part of the person's name which is used to describe family, clan, tribal group, or marital association. Note that this element is always required.  However, when associated with a contact it may not be possible to know the family name in which case you should add the available information to the FullName element. CBDS: 100003, 100162, 100288, 100280, 900001</param>
	/// <param name="GivenName">Full given name (forename) of the person. Note that this element is always required.  However, when associated with a contact it may not be possible to know the given name in which case you should add the available information to the FullName element. CBDS: 100004, 100163, 100164, 100289, 100006, 100281, 900002</param>
	///<remarks>
	/// <para>This form of <c>setName</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Name</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetName( NameType Type, string FamilyName, string GivenName ) {
		RemoveChild( CommonDTD.PERSONALINFORMATION_NAME);
		AddChild( CommonDTD.PERSONALINFORMATION_NAME, new Name( Type, FamilyName, GivenName ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Name&gt;</c> element.
	/// </summary>
	/// <value> A Name </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Name information for this person. CBDS: Multiple"</para>
	/// <para>To remove the <c>Name</c>, set <c>Name</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public Name Name
	{
		get
		{
			return (Name)GetChild( CommonDTD.PERSONALINFORMATION_NAME);
		}
		set
		{
			RemoveChild( CommonDTD.PERSONALINFORMATION_NAME);
			if( value != null)
			{
				AddChild( CommonDTD.PERSONALINFORMATION_NAME, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;OtherNames&gt;</c> element.
	/// </summary>
	/// <value> An OtherNames </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "A list of other names associated with this person."</para>
	/// <para>To remove the <c>OtherNames</c>, set <c>OtherNames</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public OtherNames OtherNames
	{
		get
		{
			return (OtherNames)GetChild( CommonDTD.PERSONALINFORMATION_OTHERNAMES);
		}
		set
		{
			RemoveChild( CommonDTD.PERSONALINFORMATION_OTHERNAMES);
			if( value != null)
			{
				AddChild( CommonDTD.PERSONALINFORMATION_OTHERNAMES, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Demographics&gt;</c> element.</summary>
	/// <param name="BirthDate">The person's date of birth. CBDS: 100007</param>
	///<remarks>
	/// <para>This form of <c>setDemographics</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Demographics</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetDemographics( DateTime? BirthDate ) {
		RemoveChild( CommonDTD.PERSONALINFORMATION_DEMOGRAPHICS);
		AddChild( CommonDTD.PERSONALINFORMATION_DEMOGRAPHICS, new Demographics( BirthDate ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Demographics&gt;</c> element.
	/// </summary>
	/// <value> A Demographics </value>
	/// <remarks>
	/// <para>To remove the <c>Demographics</c>, set <c>Demographics</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public Demographics Demographics
	{
		get
		{
			return (Demographics)GetChild( CommonDTD.PERSONALINFORMATION_DEMOGRAPHICS);
		}
		set
		{
			RemoveChild( CommonDTD.PERSONALINFORMATION_DEMOGRAPHICS);
			if( value != null)
			{
				AddChild( CommonDTD.PERSONALINFORMATION_DEMOGRAPHICS, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Email&gt;</c> element.</summary>
	/// <param name="Type">This attribute specifies the type of e-mail address.</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;Email&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setEmail</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Email</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetEmail( EmailType Type, string Value ) {
		RemoveChild( CommonDTD.PERSONALINFORMATION_EMAIL);
		AddChild( CommonDTD.PERSONALINFORMATION_EMAIL, new Email( Type, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Email&gt;</c> element.
	/// </summary>
	/// <value> An Email </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The person's preferred e-mail address. CBDS: 100071, LP"</para>
	/// <para>To remove the <c>Email</c>, set <c>Email</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public Email Email
	{
		get
		{
			return (Email)GetChild( CommonDTD.PERSONALINFORMATION_EMAIL);
		}
		set
		{
			RemoveChild( CommonDTD.PERSONALINFORMATION_EMAIL);
			if( value != null)
			{
				AddChild( CommonDTD.PERSONALINFORMATION_EMAIL, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;OtherEmailList&gt;</c> element.</summary>
	/// <param name="Email">An Email</param>
	///<remarks>
	/// <para>This form of <c>setOtherEmailList</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>OtherEmailList</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetOtherEmailList( Email Email ) {
		RemoveChild( CommonDTD.PERSONALINFORMATION_OTHEREMAILLIST);
		AddChild( CommonDTD.PERSONALINFORMATION_OTHEREMAILLIST, new EmailList( Email ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;OtherEmailList&gt;</c> element.
	/// </summary>
	/// <value> An EmailList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The person's other e-mail address(es)."</para>
	/// <para>To remove the <c>EmailList</c>, set <c>OtherEmailList</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public EmailList OtherEmailList
	{
		get
		{
			return (EmailList)GetChild( CommonDTD.PERSONALINFORMATION_OTHEREMAILLIST);
		}
		set
		{
			RemoveChild( CommonDTD.PERSONALINFORMATION_OTHEREMAILLIST);
			if( value != null)
			{
				AddChild( CommonDTD.PERSONALINFORMATION_OTHEREMAILLIST, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Address&gt;</c> element.</summary>
	/// <param name="Type">Code that defines the address type. CBDS: 100102, 100173</param>
	/// <param name="Paon">An element defining the Primary Addressable Object Name (PAON), typically a building number or house name.</param>
	///<remarks>
	/// <para>This form of <c>setAddress</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Address</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetAddress( AddressType Type, AddressableObjectName Paon ) {
		RemoveChild( CommonDTD.PERSONALINFORMATION_ADDRESS);
		AddChild( CommonDTD.PERSONALINFORMATION_ADDRESS, new Address( Type, Paon ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Address&gt;</c> element.
	/// </summary>
	/// <value> An Address </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The person's current physical address. CBDS: 100102"</para>
	/// <para>To remove the <c>Address</c>, set <c>Address</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public Address Address
	{
		get
		{
			return (Address)GetChild( CommonDTD.PERSONALINFORMATION_ADDRESS);
		}
		set
		{
			RemoveChild( CommonDTD.PERSONALINFORMATION_ADDRESS);
			if( value != null)
			{
				AddChild( CommonDTD.PERSONALINFORMATION_ADDRESS, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;OtherAddressList&gt;</c> element.</summary>
	/// <param name="Address">An Address</param>
	///<remarks>
	/// <para>This form of <c>setOtherAddressList</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>OtherAddressList</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetOtherAddressList( Address Address ) {
		RemoveChild( CommonDTD.PERSONALINFORMATION_OTHERADDRESSLIST);
		AddChild( CommonDTD.PERSONALINFORMATION_OTHERADDRESSLIST, new AddressList( Address ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;OtherAddressList&gt;</c> element.
	/// </summary>
	/// <value> An AddressList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The person's other address(es). CBDS: 100102"</para>
	/// <para>To remove the <c>AddressList</c>, set <c>OtherAddressList</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public AddressList OtherAddressList
	{
		get
		{
			return (AddressList)GetChild( CommonDTD.PERSONALINFORMATION_OTHERADDRESSLIST);
		}
		set
		{
			RemoveChild( CommonDTD.PERSONALINFORMATION_OTHERADDRESSLIST);
			if( value != null)
			{
				AddChild( CommonDTD.PERSONALINFORMATION_OTHERADDRESSLIST, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;PhoneNumber&gt;</c> element.</summary>
	/// <param name="Type">Code that specifies the phone number type. CBDS: 100144, 100217, S86</param>
	/// <param name="Number">Phone number. Validation:  0-9 and a leading '+' (for international calls). CBDS: 100145, 100218, S87</param>
	///<remarks>
	/// <para>This form of <c>setPhoneNumber</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>PhoneNumber</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetPhoneNumber( PhoneType Type, string Number ) {
		RemoveChild( CommonDTD.PERSONALINFORMATION_PHONENUMBER);
		AddChild( CommonDTD.PERSONALINFORMATION_PHONENUMBER, new PhoneNumber( Type, Number ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PhoneNumber&gt;</c> element.
	/// </summary>
	/// <value> A PhoneNumber </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The person's preferred phone number."</para>
	/// <para>To remove the <c>PhoneNumber</c>, set <c>PhoneNumber</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public PhoneNumber PhoneNumber
	{
		get
		{
			return (PhoneNumber)GetChild( CommonDTD.PERSONALINFORMATION_PHONENUMBER);
		}
		set
		{
			RemoveChild( CommonDTD.PERSONALINFORMATION_PHONENUMBER);
			if( value != null)
			{
				AddChild( CommonDTD.PERSONALINFORMATION_PHONENUMBER, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;OtherPhoneNumberList&gt;</c> element.</summary>
	/// <param name="PhoneNumber">A PhoneNumber</param>
	///<remarks>
	/// <para>This form of <c>setOtherPhoneNumberList</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>OtherPhoneNumberList</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetOtherPhoneNumberList( PhoneNumber PhoneNumber ) {
		RemoveChild( CommonDTD.PERSONALINFORMATION_OTHERPHONENUMBERLIST);
		AddChild( CommonDTD.PERSONALINFORMATION_OTHERPHONENUMBERLIST, new PhoneNumberList( PhoneNumber ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;OtherPhoneNumberList&gt;</c> element.
	/// </summary>
	/// <value> A PhoneNumberList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The person's other phone number(s)."</para>
	/// <para>To remove the <c>PhoneNumberList</c>, set <c>OtherPhoneNumberList</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public PhoneNumberList OtherPhoneNumberList
	{
		get
		{
			return (PhoneNumberList)GetChild( CommonDTD.PERSONALINFORMATION_OTHERPHONENUMBERLIST);
		}
		set
		{
			RemoveChild( CommonDTD.PERSONALINFORMATION_OTHERPHONENUMBERLIST);
			if( value != null)
			{
				AddChild( CommonDTD.PERSONALINFORMATION_OTHERPHONENUMBERLIST, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ElectronicIdList&gt;</c> element.
	/// </summary>
	/// <value> An ElectronicIdList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Electronic identifier(s) associated with this person."</para>
	/// <para>To remove the <c>ElectronicIdList</c>, set <c>ElectronicIdList</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public ElectronicIdList ElectronicIdList
	{
		get
		{
			return (ElectronicIdList)GetChild( CommonDTD.PERSONALINFORMATION_ELECTRONICIDLIST);
		}
		set
		{
			RemoveChild( CommonDTD.PERSONALINFORMATION_ELECTRONICIDLIST);
			if( value != null)
			{
				AddChild( CommonDTD.PERSONALINFORMATION_ELECTRONICIDLIST, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;OtherIdList&gt;</c> element.
	/// </summary>
	/// <value> An OtherIdList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "A list of all "other" IDs associated with this person."</para>
	/// <para>To remove the <c>OtherIdList</c>, set <c>OtherIdList</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public OtherIdList OtherIdList
	{
		get
		{
			return (OtherIdList)GetChild( CommonDTD.PERSONALINFORMATION_OTHERIDLIST);
		}
		set
		{
			RemoveChild( CommonDTD.PERSONALINFORMATION_OTHERIDLIST);
			if( value != null)
			{
				AddChild( CommonDTD.PERSONALINFORMATION_OTHERIDLIST, value );
			}
		}
	}

}}
