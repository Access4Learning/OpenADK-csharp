// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;

namespace OpenADK.Library.uk.Common{

/// <summary>This element contains address data, some of which is defined by the BS7666 International Address and Geographic Location Specification.  Other elements are present for historical reasons.</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.0</para>
/// </remarks>
[Serializable]
public class Address : SifKeyedElement
{
	/// <summary>
	/// Creates an instance of an Address
	/// </summary>
	public Address() : base ( CommonDTD.ADDRESS ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="type">Code that defines the address type. CBDS: 100102, 100173</param>
	///<param name="paon">An element defining the Primary Addressable Object Name (PAON), typically a building number or house name.</param>
	///
	public Address( AddressType type, AddressableObjectName paon ) : base( CommonDTD.ADDRESS )
	{
		this.SetType( type );
		this.PAON = paon;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected Address( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { CommonDTD.ADDRESS_TYPE }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>Type</c> attribute.
	/// </summary>
	/// <value> The <c>Type</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "Code that defines the address type. CBDS: 100102, 100173"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Type
	{
		get
		{ 
			return GetFieldValue( CommonDTD.ADDRESS_TYPE );
		}
		set
		{
			SetField( CommonDTD.ADDRESS_TYPE, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>Type</c> attribute.
	/// </summary>
	/// <param name="val">A AddressType object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "Code that defines the address type. CBDS: 100102, 100173"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetType( AddressType val )
	{
		SetField( CommonDTD.ADDRESS_TYPE, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;LocalId&gt;</c> element.
	/// </summary>
	/// <value> The <c>LocalId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The locally assigned identifier for this address in the publishing system."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.1</para>
	/// </remarks>
	public string LocalId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( CommonDTD.ADDRESS_LOCALID ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.ADDRESS_LOCALID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StartDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>StartDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Date person began using this address. CBDS: 100146"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public DateTime? StartDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( CommonDTD.ADDRESS_STARTDATE ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.ADDRESS_STARTDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EndDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>EndDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Date person stopped using this address. CBDS: 100147"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public DateTime? EndDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( CommonDTD.ADDRESS_ENDDATE ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.ADDRESS_ENDDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PAON&gt;</c> element.
	/// </summary>
	/// <value> An AddressableObjectName </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "An element defining the Primary Addressable Object Name (PAON), typically a building number or house name."</para>
	/// <para>To remove the <c>AddressableObjectName</c>, set <c>PAON</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public AddressableObjectName PAON
	{
		get
		{
			return (AddressableObjectName)GetChild( CommonDTD.ADDRESS_PAON);
		}
		set
		{
			RemoveChild( CommonDTD.ADDRESS_PAON);
			if( value != null)
			{
				AddChild( CommonDTD.ADDRESS_PAON, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SAON&gt;</c> element.
	/// </summary>
	/// <value> An AddressableObjectName </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The Secondary Addressable Object Name (SAON), identifying a sub-division of the PAON, typically a flat number, room number or unit in a commerical property."</para>
	/// <para>To remove the <c>AddressableObjectName</c>, set <c>SAON</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public AddressableObjectName SAON
	{
		get
		{
			return (AddressableObjectName)GetChild( CommonDTD.ADDRESS_SAON);
		}
		set
		{
			RemoveChild( CommonDTD.ADDRESS_SAON);
			if( value != null)
			{
				AddChild( CommonDTD.ADDRESS_SAON, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Street&gt;</c> element.
	/// </summary>
	/// <value> The <c>Street</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The name of the street. CBDS: 100115, 100186, S65"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Street
	{
		get
		{
			return (string) GetSifSimpleFieldValue( CommonDTD.ADDRESS_STREET ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.ADDRESS_STREET, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Locality&gt;</c> element.
	/// </summary>
	/// <value> The <c>Locality</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The locality name refers to a neighbourhood, suburb, district, village, estate, settlement, or parish that may form part of a town, or stand in its own right within the context of an administrative area.  Where an industrial estate contains streets it is defined as a locality in its own right.  At least one of Locality, Town, or AdministrativeArea must be specified. CBDS: 100116, 100187, S66"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Locality
	{
		get
		{
			return (string) GetSifSimpleFieldValue( CommonDTD.ADDRESS_LOCALITY ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.ADDRESS_LOCALITY, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Town&gt;</c> element.
	/// </summary>
	/// <value> The <c>Town</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The city name refers to a city or town that is not an adminstrative area, a suburb of an administrative area that does not form part of another town or a London district. At least one of Locality, Town, or AdministrativeArea must be specified. CBDS: 100117, 100188, S67"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Town
	{
		get
		{
			return (string) GetSifSimpleFieldValue( CommonDTD.ADDRESS_TOWN ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.ADDRESS_TOWN, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AdministrativeArea&gt;</c> element.
	/// </summary>
	/// <value> The <c>AdministrativeArea</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The administrative area is a geographic area that may be the highest level local administrative area, and may be a county or a unitary authority, an island or island group, or London. At least one of Locality, Town, or AdministrativeArea must be specified CBDS: 100118, 100189, S68"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string AdministrativeArea
	{
		get
		{
			return (string) GetSifSimpleFieldValue( CommonDTD.ADDRESS_ADMINISTRATIVEAREA ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.ADDRESS_ADMINISTRATIVEAREA, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;County&gt;</c> element.
	/// </summary>
	/// <value> The <c>County</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Where applicable, the name of the county."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string County
	{
		get
		{
			return (string) GetSifSimpleFieldValue( CommonDTD.ADDRESS_COUNTY ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.ADDRESS_COUNTY, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PostTown&gt;</c> element.
	/// </summary>
	/// <value> The <c>PostTown</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Post Office usually assigns these based on Sorting Office. CBDS: 100119, 100190, S68a"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string PostTown
	{
		get
		{
			return (string) GetSifSimpleFieldValue( CommonDTD.ADDRESS_POSTTOWN ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.ADDRESS_POSTTOWN, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PostCode&gt;</c> element.
	/// </summary>
	/// <value> The <c>PostCode</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The code allocated by the Post Office to identify a group of postal delivery points.  Valid Postcode formats are:  A9 9AA, A99 9AA, AA9 9AA, AA99 9AA, A9A 9AA, AA9A 9AA, Plus BFPO 999 CBDS: 100120, 100121, 100192, S69a"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string PostCode
	{
		get
		{
			return (string) GetSifSimpleFieldValue( CommonDTD.ADDRESS_POSTCODE ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.ADDRESS_POSTCODE, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Country&gt;</c> element.
	/// </summary>
	/// <value> The <c>Country</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Country where physical address is located, if known.  Usually this is going to be 'GBR' but could be elsewhere if associated with the military, etc."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Country
	{
		get
		{ 
			return GetFieldValue( CommonDTD.ADDRESS_COUNTRY );
		}
		set
		{
			SetField( CommonDTD.ADDRESS_COUNTRY, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;Country&gt;</c> element.
	/// </summary>
	/// <param name="val">A CountryCode object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Country where physical address is located, if known.  Usually this is going to be 'GBR' but could be elsewhere if associated with the military, etc."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetCountry( CountryCode val )
	{
		SetField( CommonDTD.ADDRESS_COUNTRY, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;UniquePropertyReferenceNumber&gt;</c> element.
	/// </summary>
	/// <value> The <c>UniquePropertyReferenceNumber</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The unique Property and Land Reference Number (UPRN) for this address. Numeric: 1 to 12 digits. CBDS: 100123, 100193, 100194, S70a"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public long? UniquePropertyReferenceNumber
	{
		get
		{
			return (long?) GetSifSimpleFieldValue( CommonDTD.ADDRESS_UNIQUEPROPERTYREFERENCENUMBER ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.ADDRESS_UNIQUEPROPERTYREFERENCENUMBER, new SifLong( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;UniqueStreetReferenceNumber&gt;</c> element.
	/// </summary>
	/// <value> The <c>UniqueStreetReferenceNumber</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The unique Property Street Reference Number (USRN) for this address.  Numeric: 1 to 8 digits. CBDS: 100125, 100195, 100196, S71a"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public long? UniqueStreetReferenceNumber
	{
		get
		{
			return (long?) GetSifSimpleFieldValue( CommonDTD.ADDRESS_UNIQUESTREETREFERENCENUMBER ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.ADDRESS_UNIQUESTREETREFERENCENUMBER, new SifLong( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;LocationContext&gt;</c> element.</summary>
	/// <param name="WardCode">ONS Ward Code CBDS: 100149</param>
	/// <param name="WardName">ONS Ward Name CBDS: 100150</param>
	///<remarks>
	/// <para>This form of <c>setLocationContext</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>LocationContext</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetLocationContext( string WardCode, string WardName ) {
		RemoveChild( CommonDTD.ADDRESS_LOCATIONCONTEXT);
		AddChild( CommonDTD.ADDRESS_LOCATIONCONTEXT, new LocationContext( WardCode, WardName ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;LocationContext&gt;</c> element.
	/// </summary>
	/// <value> A LocationContext </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The physical location of an address in terms of Census District, LA Electoral Ward, Parliamentary Constituency, and other defining location-centric characteristics."</para>
	/// <para>To remove the <c>LocationContext</c>, set <c>LocationContext</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public LocationContext LocationContext
	{
		get
		{
			return (LocationContext)GetChild( CommonDTD.ADDRESS_LOCATIONCONTEXT);
		}
		set
		{
			RemoveChild( CommonDTD.ADDRESS_LOCATIONCONTEXT);
			if( value != null)
			{
				AddChild( CommonDTD.ADDRESS_LOCATIONCONTEXT, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;GridLocation&gt;</c> element.</summary>
	/// <param name="PropertyEasting">Easting coordinate for mapping an address. CBDS: 100126, 100197, S72</param>
	/// <param name="PropertyNorthing">Northing coordinate for mapping an address. Required when PropertyEasting is also specified. CBDS: 100127, 100198, S73</param>
	///<remarks>
	/// <para>This form of <c>setGridLocation</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>GridLocation</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetGridLocation( decimal? PropertyEasting, decimal? PropertyNorthing ) {
		RemoveChild( CommonDTD.ADDRESS_GRIDLOCATION);
		AddChild( CommonDTD.ADDRESS_GRIDLOCATION, new GridLocation( PropertyEasting, PropertyNorthing ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;GridLocation&gt;</c> element.
	/// </summary>
	/// <value> A GridLocation </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The physical property location coordinates"</para>
	/// <para>To remove the <c>GridLocation</c>, set <c>GridLocation</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public GridLocation GridLocation
	{
		get
		{
			return (GridLocation)GetChild( CommonDTD.ADDRESS_GRIDLOCATION);
		}
		set
		{
			RemoveChild( CommonDTD.ADDRESS_GRIDLOCATION);
			if( value != null)
			{
				AddChild( CommonDTD.ADDRESS_GRIDLOCATION, value );
			}
		}
	}

}}
