// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.CompilerServices;
using OpenADK.Util;
using OpenADK.Library;
using OpenADK.Library.Impl;
using CommonDTD = OpenADK.Library.uk.Common.CommonDTD;
using ReportingDTD = OpenADK.Library.uk.Reporting.ReportingDTD;

namespace OpenADK.Library.uk.Reporting
{

// BEGIN FILE... (SIFDTD_Comments_CS.txt)

/// <summary>Metadata for the Schools Interoperability Framework (SIF)</summary>
	/// <remarks>
	/// <para>
	/// SIFDTD defines global {@linkplain com.edustructures.sifworks.ElementDef} 
	/// constants that describe SIF Data Objects, elements, and attributes across all 
	/// supported versions of the SIF Specification. The ADK uses this metadata 
	/// internally to parse and render SIF Data Objects.  In addition, many of the 
	/// framework APIs require that the programmer pass an ElementDef constant from 
	/// the SIFDTD class to identify an object, element, or attribute.
	/// </para>
	/// <para>
	/// ElementDef constants are named <c>[PARENT_]ENTITY</c>, where 
	/// <c>PARENT</c> is the name of the parent element and 
	/// <c>ENTITY</c> is the name of the element or attribute 
	/// encapsulated by the ElementDef. Some examples of ElementDef constants defined
	/// by this class include:
	/// </para>
	/// <list type="table">
	/// <listheader><term>IElementDef</term><description>Description</description></listheader>
	/// <item><term><c>SIFDTD.STUDENTPERSONAL</c></term><description>Identifies the StudentPersonal data object</description></item>
	/// <item><term><c>SIFDTD.SCHOOLINFO</c></term><description>Identifies the SchoolInfo data object</description></item>
	/// </list>
	/// Many of the Adk's public interfaces require an ElementDef constant to be passed
	/// as a parameter. For example, the first parameter to the <see cref="IZone.SetSubscriber"/>
	/// method is an IElementDef:
	/// <code>myZone.setSubscriber( SIFDTD.BUSINFO, this, ADKFlags.PROV_SUBSCRIBE );</code>
	/// ElementDef also identifies child elements and attributes as demonstrated by the	<c>Query.AddCondition</c> method:
	/// <code>
	/// Query query = new Query( SifDtd.STUDENTPERSONAL );
	/// query.AddCondition( SifDtd.STUDENTPERSONAL_REFID, Condition.EQ, "4A37969803F0D00322AF0EB969038483" );
	/// </code>
	/// <para>
	/// <b>SDO Libraries</b>
	/// </para>
	/// <para>
	/// ElementDef metadata is grouped into "SDO Libraries", which are organized along 
	/// SIF Working Group boundaries. SDO Libraries are loaded into the <c>SifDdt</c> 
	/// class when the Adk is initialized. All or part of the metadata is loaded into depending on the flags passed to the
	/// <see cref="Adk.Initialize(SifVersion, SdoLibraryType)"/> method,
	/// metadata from one or more SDO Libraries may be loaded. For example, the following
	/// call loads metadata for the <c>Student Information Working Group Objects</c>  
	/// and <c>Transportation And Geographic Information Working Group Objects</c> 
	/// (Common Elements and <c>Infrastructure Working Group Objects</c> metadata is always loaded
	/// </para>
	/// <code>Adk.Initialize( SiFVersion.LATEST, SdoLibraryType.Student | SdoLibraryType.Trans )</code>
	/// <para>
	/// If an given SDO Library is not loaded, all of the SIFDTD constants that belong
	/// to that library will be <code>null</code> and cannot be referenced. For example,
	/// given the SDO Libraries loaded above, attempting to reference the 
	/// <code>SIFDTD.LIBRARYPATRONSTATUS</code> object from the Library Automation Working
	/// Group would result in a NullPointerException:
	/// </para>
	/// <code>SifDtd.LIBRARYPATRONSTATUS.Name;</code>
	/// </remarks>
	public class ReportingDTD : OpenADK.Library.Impl.SdoLibraryImpl
	{
	/** Defines the &lt;ReportData&gt; SIF Data Object */
	public static IElementDef REPORTDATA = null;
	/** Defines the &lt;ReportInfo&gt; SIF Data Object */
	public static IElementDef REPORTINFO = null;
	/** Defines the &lt;SIF_ReportObject&gt; SIF Data Object */
	public static IElementDef SIF_REPORTOBJECT = null;


	// Field elements of REPORTDATA (0 fields)

	// Field elements of REPORTINFO (0 fields)

	// Field elements of SIF_REPORTOBJECT (4 fields)
	/** Defines the RefId attribute as a child of &lt;SIF_ReportObject&gt; */
	public static IElementDef SIF_REPORTOBJECT_REFID = null;
	/** Defines the &lt;ReportInfo&gt; element as a child of &lt;SIF_ReportObject&gt; */
	public static IElementDef SIF_REPORTOBJECT_REPORTINFO = null;
	/** Defines the &lt;ReportData&gt; element as a child of &lt;SIF_ReportObject&gt; */
	public static IElementDef SIF_REPORTOBJECT_REPORTDATA = null;
	/** Defines the &lt;SIF_ExtendedQueryResults&gt; element as a child of &lt;SIF_ReportObject&gt; */
	public static IElementDef SIF_REPORTOBJECT_SIF_EXTENDEDQUERYRESULTS = null;
	/** SIF 1.5 and later: Defines the built-in SIF_ExtendedElements element common to all SIF Data Objects */
	public static IElementDef SIF_REPORTOBJECT_SIF_EXTENDEDELEMENTS = null;
	/** SIF 2.0 and later: Defines the built-in SIF_Metadata element common to all SIF Data Objects */
	public static IElementDef SIF_REPORTOBJECT_SIF_METADATA = null;

	public override void Load()
	{
		//  Objects defined by this SDO Library...

		REPORTDATA = new ElementDefImpl( null, "ReportData", null, 0, SifDtd.REPORTING, "uk", 0, SifVersion.SIF20, SifVersion.SIF25 );
		REPORTINFO = new ElementDefImpl( null, "ReportInfo", null, 0, SifDtd.REPORTING, "uk", 0, SifVersion.SIF20, SifVersion.SIF25 );
		SIF_REPORTOBJECT = new ElementDefImpl( null, "SIF_ReportObject", null, 0, SifDtd.REPORTING, "uk", (ElementDefImpl.FD_OBJECT), SifVersion.SIF20, SifVersion.SIF25 );


		// <ReportData> fields (0 entries)

		// <ReportInfo> fields (0 entries)

		// <SIF_ReportObject> fields (4 entries)
		ReportingDTD.SIF_REPORTOBJECT_REFID = new ElementDefImpl( SIF_REPORTOBJECT, "RefId", null, 1, SifDtd.REPORTING, "uk", (ElementDefImpl.FD_ATTRIBUTE), SifVersion.SIF20, SifVersion.SIF25, SifTypeConverters.STRING );
		ReportingDTD.SIF_REPORTOBJECT_REPORTINFO = new ElementDefImpl( SIF_REPORTOBJECT, "ReportInfo", null, 2, SifDtd.REPORTING, "uk", 0, SifVersion.SIF20, SifVersion.SIF25 );
		ReportingDTD.SIF_REPORTOBJECT_REPORTDATA = new ElementDefImpl( SIF_REPORTOBJECT, "ReportData", null, 3, SifDtd.REPORTING, "uk", 0, SifVersion.SIF20, SifVersion.SIF25 );
		ReportingDTD.SIF_REPORTOBJECT_SIF_EXTENDEDQUERYRESULTS = new ElementDefImpl( SIF_REPORTOBJECT, "SIF_ExtendedQueryResults", null, 4, SifDtd.INFRA, null, 0, SifVersion.SIF20, SifVersion.SIF25 );
		SIF_REPORTOBJECT_SIF_EXTENDEDELEMENTS = new ElementDefImpl( SIF_REPORTOBJECT, "SIF_ExtendedElements", null, 127, SifDtd.GLOBAL, null, (0), SifVersion.SIF15r1, SifVersion.SIF25 );
		SIF_REPORTOBJECT_SIF_METADATA = new ElementDefImpl( SIF_REPORTOBJECT, "SIF_Metadata", null, 128, SifDtd.DATAMODEL, "uk", (0), SifVersion.SIF20, SifVersion.SIF25 );
	}

	#region Update SifDtd
	public override void AddElementMappings( IDictionary<String, IElementDef> dictionary )
	{
		dictionary[ "ReportData" ] = REPORTDATA;
		dictionary[ "ReportInfo" ] = REPORTINFO;
		dictionary[ "SIF_ReportObject" ] = SIF_REPORTOBJECT;
		dictionary[ "SIF_ReportObject_SIF_ExtendedElements" ] = SIF_REPORTOBJECT_SIF_EXTENDEDELEMENTS ;
		dictionary[ "SIF_ReportObject_SIF_Metadata" ] = SIF_REPORTOBJECT_SIF_METADATA;
		dictionary["SIF_ReportObject_RefId"] = ReportingDTD.SIF_REPORTOBJECT_REFID ;
		dictionary["SIF_ReportObject_ReportData"] = ReportingDTD.SIF_REPORTOBJECT_REPORTDATA ;
		dictionary["SIF_ReportObject_ReportInfo"] = ReportingDTD.SIF_REPORTOBJECT_REPORTINFO ;
		dictionary["SIF_ReportObject_SIF_ExtendedQueryResults"] = ReportingDTD.SIF_REPORTOBJECT_SIF_EXTENDEDQUERYRESULTS ;
	}
	#endregion
}}
