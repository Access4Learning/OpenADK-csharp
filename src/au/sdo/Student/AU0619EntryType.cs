// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using OpenADK.Library;

namespace OpenADK.Library.au.Student
{
	///<summary>
	/// Defines the set of values that can be specified whenever an AU0619EntryType
	/// is used as a parameter to a method or constructor. 
	///</summary>
	/// <remarks>
	/// Alternatively, the static
	///  <see cref="Wrap"/> method can be called to encapsulate any string value in
	///  an AU0619EntryType object.
	/// <para>Author: Generated by adkgen</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	[Serializable]
	public class AU0619EntryType : SifEnum
	{
	/// <summary>Original entry into an Australian school from a foreign country with an interruption in schooling ("1840")</summary>
	public static readonly AU0619EntryType C1840_ORIGINAL_ENTRY_INTOAUSTRALIAN_SCHOOL = new AU0619EntryType("1840");

	/// <summary>Transfer from a private, non-religiously-affiliated school in the same district ("1824")</summary>
	public static readonly AU0619EntryType C1824_TRANSFER_FROMPRIVATE = new AU0619EntryType("1824");

	/// <summary>Re-entry after a voluntary withdrawal ("1836")</summary>
	public static readonly AU0619EntryType C1836_REENTRY_AFTERVOLUNTARY = new AU0619EntryType("1836");

	/// <summary>Transfer from a different campus of the same school ("9997")</summary>
	public static readonly AU0619EntryType C9997_OTHER_CAMPUS_SAME_SCHOOL = new AU0619EntryType("9997");

	/// <summary>Transfer from an institution ("1831")</summary>
	public static readonly AU0619EntryType C1831_TRANSFER_FROMINSTITUTION = new AU0619EntryType("1831");

	/// <summary>Transfer from a private, religiously-affiliated school in the same district ("1827")</summary>
	public static readonly AU0619EntryType C1827_TRANSFER_FROMPRIVATE_RELIGIOUSLYAFFILIATED = new AU0619EntryType("1827");

	/// <summary>Re-entry after an involuntary withdrawal ("1837")</summary>
	public static readonly AU0619EntryType C1837_REENTRY_AFTERINVOLUNTARY = new AU0619EntryType("1837");

	/// <summary>Re-entry from the same school with no interruption of schooling ("1835")</summary>
	public static readonly AU0619EntryType C1835_REENTRY_FROMSAME_SCHOOL_WITH_NO = new AU0619EntryType("1835");

	/// <summary>Original entry into an Australian school from a foreign country with no interruption in schooling ("1839")</summary>
	public static readonly AU0619EntryType C1839_ORIGINAL_ENTRY_INTOAUSTRALIAN_SCHOOL = new AU0619EntryType("1839");

	/// <summary>Transfer from a school outside of the country ("1830")</summary>
	public static readonly AU0619EntryType C1830_TRANSFER_FROMSCHOOL_OUTSIDE = new AU0619EntryType("1830");

	/// <summary>Transfer from a private, non-religiously-affiliated school in a different district ("1825")</summary>
	public static readonly AU0619EntryType C1825_TRANSFER_FROMPRIVATE = new AU0619EntryType("1825");

	/// <summary>Transfer from a private, religiously-affiliated school in a different jurisdiction ("1829")</summary>
	public static readonly AU0619EntryType C1829_TRANSFER_FROMPRIVATE_RELIGIOUSLYAFFILIATED = new AU0619EntryType("1829");

	/// <summary>Original entry into an Australian school ("1838")</summary>
	public static readonly AU0619EntryType C1838_ORIGINAL_ENTRY_INTOAUSTRALIAN = new AU0619EntryType("1838");

	/// <summary>Used with remote school throughout Australia becuase student may move around a lot ("9998")</summary>
	public static readonly AU0619EntryType C9998_Temporary_Enrolment = new AU0619EntryType("9998");

	/// <summary>Transfer from a public school in a different district in the same jurisdiction ("1822")</summary>
	public static readonly AU0619EntryType C1822_TRANSFER_FROMPUBLIC_SCHOOL_INDIFFERENT = new AU0619EntryType("1822");

	/// <summary>Transfer from a private, religiously-affiliated school in a different district in the same jurisdiction ("1828")</summary>
	public static readonly AU0619EntryType C1828_TRANSFER_FROMPRIVATE_RELIGIOUSLYAFFILIATED = new AU0619EntryType("1828");

	/// <summary>Transfer from a public school in the same district ("1821")</summary>
	public static readonly AU0619EntryType C1821_TRANSFER_FROMPUBLIC_SCHOOL_INSAME = new AU0619EntryType("1821");

	/// <summary>Transfer from a public school in a different jurisdication ("1823")</summary>
	public static readonly AU0619EntryType C1823_TRANSFER_FROMPUBLIC_SCHOOL_INDIFFERENT = new AU0619EntryType("1823");

	/// <summary>Transfer from a private, non-religiously-affiliated school in a different jurisdiction ("1826")</summary>
	public static readonly AU0619EntryType C1826_TRANSFER_FROMPRIVATE = new AU0619EntryType("1826");

	/// <summary>Transfer from home schooling ("1833")</summary>
	public static readonly AU0619EntryType C1833_TRANSFER_FROM_HOME = new AU0619EntryType("1833");

	/// <summary>Other ("9999")</summary>
	public static readonly AU0619EntryType C9999_OTHER = new AU0619EntryType("9999");

	///<summary>Wrap an arbitrary string value in an AU0619EntryType object.</summary>
	///<param name="wrappedValue">The element/attribute value.</param>
	///<remarks>This method does not verify
	///that the value is valid according to the SIF Specification</remarks>
	public static AU0619EntryType Wrap( String wrappedValue ) {
		return new AU0619EntryType( wrappedValue );
	}

	private AU0619EntryType( string enumDefValue ) : base( enumDefValue ) {}
	}
}
