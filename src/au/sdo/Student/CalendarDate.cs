// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.au.Common;

namespace OpenADK.Library.au.Student{

/// <summary>A CalendarDate</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 2.3</para>
/// </remarks>
[Serializable]
public class CalendarDate : SifDataObject
{
	/// <summary>
	/// Creates an instance of a CalendarDate
	/// </summary>
	public CalendarDate() : base( Adk.SifVersion, StudentDTD.CALENDARDATE ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="date">A specific school day that occurs within the school year.</param>
	///<param name="calendarSummaryRefId">The ID (GUID) of the calendar summary in which this calendar date is.</param>
	///<param name="schoolInfoRefId">The ID (GUID) of the school for which this calendar information is being reported.</param>
	///<param name="schoolYear">A SchoolYear</param>
	///<param name="calendarDateType">A CalendarDateType</param>
	///
	public CalendarDate( DateTime? date, string calendarSummaryRefId, string schoolInfoRefId, int? schoolYear, CalendarDateType calendarDateType ) : base( Adk.SifVersion, StudentDTD.CALENDARDATE )
	{
		this.Date = date;
		this.CalendarSummaryRefId = calendarSummaryRefId;
		this.SchoolInfoRefId = schoolInfoRefId;
		this.SchoolYear = schoolYear;
		this.CalendarDateType = calendarDateType;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected CalendarDate( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { StudentDTD.CALENDARDATE_DATE, StudentDTD.CALENDARDATE_CALENDARSUMMARYREFID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>Date</c> attribute.
	/// </summary>
	/// <value> The <c>Date</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "A specific school day that occurs within the school year."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public DateTime? Date
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( StudentDTD.CALENDARDATE_DATE ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.CALENDARDATE_DATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>CalendarSummaryRefId</c> attribute.
	/// </summary>
	/// <value> The <c>CalendarSummaryRefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The ID (GUID) of the calendar summary in which this calendar date is."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string CalendarSummaryRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.CALENDARDATE_CALENDARSUMMARYREFID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.CALENDARDATE_CALENDARSUMMARYREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SchoolInfoRefId&gt;</c> element.
	/// </summary>
	/// <value> The <c>SchoolInfoRefId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The ID (GUID) of the school for which this calendar information is being reported."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string SchoolInfoRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.CALENDARDATE_SCHOOLINFOREFID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.CALENDARDATE_SCHOOLINFOREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SchoolYear&gt;</c> element.
	/// </summary>
	/// <value> The <c>SchoolYear</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public int? SchoolYear
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( StudentDTD.CALENDARDATE_SCHOOLYEAR ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.CALENDARDATE_SCHOOLYEAR, new SifInt( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;CalendarDateType&gt;</c> element.</summary>
	/// <param name="Code">Code indicating the type of school day.</param>
	///<remarks>
	/// <para>This form of <c>setCalendarDateType</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>CalendarDateType</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetCalendarDateType( AU0084CalendarEventType Code ) {
		RemoveChild( StudentDTD.CALENDARDATE_CALENDARDATETYPE);
		AddChild( StudentDTD.CALENDARDATE_CALENDARDATETYPE, new CalendarDateType( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;CalendarDateType&gt;</c> element.
	/// </summary>
	/// <value> A CalendarDateType </value>
	/// <remarks>
	/// <para>To remove the <c>CalendarDateType</c>, set <c>CalendarDateType</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public CalendarDateType CalendarDateType
	{
		get
		{
			return (CalendarDateType)GetChild( StudentDTD.CALENDARDATE_CALENDARDATETYPE);
		}
		set
		{
			RemoveChild( StudentDTD.CALENDARDATE_CALENDARDATETYPE);
			if( value != null)
			{
				AddChild( StudentDTD.CALENDARDATE_CALENDARDATETYPE, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;StudentAttendance&gt;</c> element.</summary>
	/// <param name="CountsTowardAttendance">Designates whether this date should be counted toward student attendance.</param>
	/// <param name="AttendanceValue">An AttendanceValue</param>
	///<remarks>
	/// <para>This form of <c>setStudentAttendance</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>StudentAttendance</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetStudentAttendance( YesNo CountsTowardAttendance, decimal? AttendanceValue ) {
		RemoveChild( StudentDTD.CALENDARDATE_STUDENTATTENDANCE);
		AddChild( StudentDTD.CALENDARDATE_STUDENTATTENDANCE, new CalendarAttendance( CountsTowardAttendance, AttendanceValue ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StudentAttendance&gt;</c> element.
	/// </summary>
	/// <value> A CalendarAttendance </value>
	/// <remarks>
	/// <para>To remove the <c>CalendarAttendance</c>, set <c>StudentAttendance</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public CalendarAttendance StudentAttendance
	{
		get
		{
			return (CalendarAttendance)GetChild( StudentDTD.CALENDARDATE_STUDENTATTENDANCE);
		}
		set
		{
			RemoveChild( StudentDTD.CALENDARDATE_STUDENTATTENDANCE);
			if( value != null)
			{
				AddChild( StudentDTD.CALENDARDATE_STUDENTATTENDANCE, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;CalendarDateNumber&gt;</c> element.
	/// </summary>
	/// <value> The <c>CalendarDateNumber</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public int? CalendarDateNumber
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( StudentDTD.CALENDARDATE_CALENDARDATENUMBER ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.CALENDARDATE_CALENDARDATENUMBER, new SifInt( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;TeacherAttendance&gt;</c> element.</summary>
	/// <param name="CountsTowardAttendance">Designates whether this date should be counted toward student attendance.</param>
	/// <param name="AttendanceValue">An AttendanceValue</param>
	///<remarks>
	/// <para>This form of <c>setTeacherAttendance</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>TeacherAttendance</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public void SetTeacherAttendance( YesNo CountsTowardAttendance, decimal? AttendanceValue ) {
		RemoveChild( StudentDTD.CALENDARDATE_TEACHERATTENDANCE);
		AddChild( StudentDTD.CALENDARDATE_TEACHERATTENDANCE, new CalendarAttendance( CountsTowardAttendance, AttendanceValue ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;TeacherAttendance&gt;</c> element.
	/// </summary>
	/// <value> A CalendarAttendance </value>
	/// <remarks>
	/// <para>To remove the <c>CalendarAttendance</c>, set <c>TeacherAttendance</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public CalendarAttendance TeacherAttendance
	{
		get
		{
			return (CalendarAttendance)GetChild( StudentDTD.CALENDARDATE_TEACHERATTENDANCE);
		}
		set
		{
			RemoveChild( StudentDTD.CALENDARDATE_TEACHERATTENDANCE);
			if( value != null)
			{
				AddChild( StudentDTD.CALENDARDATE_TEACHERATTENDANCE, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;AdministratorAttendance&gt;</c> element.</summary>
	/// <param name="CountsTowardAttendance">Designates whether this date should be counted toward student attendance.</param>
	/// <param name="AttendanceValue">An AttendanceValue</param>
	///<remarks>
	/// <para>This form of <c>setAdministratorAttendance</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>AdministratorAttendance</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public void SetAdministratorAttendance( YesNo CountsTowardAttendance, decimal? AttendanceValue ) {
		RemoveChild( StudentDTD.CALENDARDATE_ADMINISTRATORATTENDANCE);
		AddChild( StudentDTD.CALENDARDATE_ADMINISTRATORATTENDANCE, new CalendarAttendance( CountsTowardAttendance, AttendanceValue ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AdministratorAttendance&gt;</c> element.
	/// </summary>
	/// <value> A CalendarAttendance </value>
	/// <remarks>
	/// <para>To remove the <c>CalendarAttendance</c>, set <c>AdministratorAttendance</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public CalendarAttendance AdministratorAttendance
	{
		get
		{
			return (CalendarAttendance)GetChild( StudentDTD.CALENDARDATE_ADMINISTRATORATTENDANCE);
		}
		set
		{
			RemoveChild( StudentDTD.CALENDARDATE_ADMINISTRATORATTENDANCE);
			if( value != null)
			{
				AddChild( StudentDTD.CALENDARDATE_ADMINISTRATORATTENDANCE, value );
			}
		}
	}

}}
