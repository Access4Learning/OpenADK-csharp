// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.au.Common;

namespace OpenADK.Library.au.Student{

/// <summary>An HomeEnrollment</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.3</para>
/// </remarks>
[Serializable]
public class HomeEnrollment : SifKeyedElement
{
	/// <summary>
	/// Creates an instance of an HomeEnrollment
	/// </summary>
	public HomeEnrollment() : base ( StudentDTD.HOMEENROLLMENT ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="yearLevel">A YearLevel</param>
	///
	public HomeEnrollment( YearLevel yearLevel ) : base( StudentDTD.HOMEENROLLMENT )
	{
		this.YearLevel = yearLevel;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected HomeEnrollment( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { StudentDTD.HOMEENROLLMENT_YEARLEVEL }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StudentSchoolEnrollmentRefId&gt;</c> element.
	/// </summary>
	/// <value> The <c>StudentSchoolEnrollmentRefId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The ID (GUID) of the StudentSchoolEnrollment object from which the enrollment information is derived."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string StudentSchoolEnrollmentRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.HOMEENROLLMENT_STUDENTSCHOOLENROLLMENTREFID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.HOMEENROLLMENT_STUDENTSCHOOLENROLLMENTREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SchoolName&gt;</c> element.
	/// </summary>
	/// <value> The <c>SchoolName</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Name of the school."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string SchoolName
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.HOMEENROLLMENT_SCHOOLNAME ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.HOMEENROLLMENT_SCHOOLNAME, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SchoolInfoRefId&gt;</c> element.
	/// </summary>
	/// <value> The <c>SchoolInfoRefId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The ID (GUID) of the school.  Provide both the HomeEnrollment/SchoolInfoRefId and HomeEnrollment/LocalId elements if possible.        If not, one or the other must be provided."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string SchoolInfoRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.HOMEENROLLMENT_SCHOOLINFOREFID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.HOMEENROLLMENT_SCHOOLINFOREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;LocalId&gt;</c> element.
	/// </summary>
	/// <value> The <c>LocalId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The locally-defined identifier for this school.        Provide both the HomeEnrollment/LocalId and HomeEnrollment/SchoolId elements if possible.        If not, one or the other must be provided."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string LocalId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.HOMEENROLLMENT_LOCALID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.HOMEENROLLMENT_LOCALID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SchoolNo&gt;</c> element.
	/// </summary>
	/// <value> The <c>SchoolNo</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The state or province defined identifier for this school."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string SchoolNo
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.HOMEENROLLMENT_SCHOOLNO ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.HOMEENROLLMENT_SCHOOLNO, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;YearLevel&gt;</c> element.</summary>
	/// <param name="Code">Code representing the year level.</param>
	///<remarks>
	/// <para>This form of <c>setYearLevel</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>YearLevel</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetYearLevel( YearLevelCode Code ) {
		RemoveChild( StudentDTD.HOMEENROLLMENT_YEARLEVEL);
		AddChild( StudentDTD.HOMEENROLLMENT_YEARLEVEL, new YearLevel( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;YearLevel&gt;</c> element.
	/// </summary>
	/// <value> A YearLevel </value>
	/// <remarks>
	/// <para>To remove the <c>YearLevel</c>, set <c>YearLevel</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public YearLevel YearLevel
	{
		get
		{
			return (YearLevel)GetChild( StudentDTD.HOMEENROLLMENT_YEARLEVEL);
		}
		set
		{
			RemoveChild( StudentDTD.HOMEENROLLMENT_YEARLEVEL);
			if( value != null)
			{
				AddChild( StudentDTD.HOMEENROLLMENT_YEARLEVEL, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Homeroom&gt;</c> element.</summary>
	/// <param name="SifRefObject">The name of the object referenced.</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;Homeroom&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setHomeroom</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Homeroom</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetHomeroom( SIF_RefObject SifRefObject, string Value ) {
		RemoveChild( StudentDTD.HOMEENROLLMENT_HOMEROOM);
		AddChild( StudentDTD.HOMEENROLLMENT_HOMEROOM, new Homeroom( SifRefObject, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Homeroom&gt;</c> element.
	/// </summary>
	/// <value> An Homeroom </value>
	/// <remarks>
	/// <para>To remove the <c>Homeroom</c>, set <c>Homeroom</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public Homeroom Homeroom
	{
		get
		{
			return (Homeroom)GetChild( StudentDTD.HOMEENROLLMENT_HOMEROOM);
		}
		set
		{
			RemoveChild( StudentDTD.HOMEENROLLMENT_HOMEROOM);
			if( value != null)
			{
				AddChild( StudentDTD.HOMEENROLLMENT_HOMEROOM, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;HomeroomNumber&gt;</c> element.
	/// </summary>
	/// <value> The <c>HomeroomNumber</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string HomeroomNumber
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.HOMEENROLLMENT_HOMEROOMNUMBER ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.HOMEENROLLMENT_HOMEROOMNUMBER, new SifString( value ), value );
		}
	}

}}
