// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.au.Common;

namespace OpenADK.Library.au.Student{

/// <summary>A StudentSchoolEnrollment</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 2.3</para>
/// </remarks>
[Serializable]
public class StudentSchoolEnrollment : SifDataObject
{
	/// <summary>
	/// Creates an instance of a StudentSchoolEnrollment
	/// </summary>
	public StudentSchoolEnrollment() : base( Adk.SifVersion, StudentDTD.STUDENTSCHOOLENROLLMENT ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="refId">The ID (GUID) that uniquely identifies a particular enrollment.</param>
	///<param name="studentPersonalRefId">The ID (GUID) of the student to whom this information is linked.</param>
	///<param name="schoolInfoRefId">The ID (GUID) of the school to which this enrollment applies.</param>
	///<param name="membershipType">The type of this enrollment as it relates to the school identified in SchoolInfoRefId.</param>
	///<param name="timeFrame">The timeframe of the enrollment based on the SIF_Date in the SIF_Header of the message. For events, it is determined as of the date the event is generated. For requests and responses, it is calculated based on the date of the request.</param>
	///<param name="schoolYear">A SchoolYear</param>
	///<param name="entryDate">The date from when this enrollment is valid.</param>
	///
	public StudentSchoolEnrollment( string refId, string studentPersonalRefId, string schoolInfoRefId, SchoolEnrollmentType membershipType, TimeFrame timeFrame, int? schoolYear, DateTime? entryDate ) : base( Adk.SifVersion, StudentDTD.STUDENTSCHOOLENROLLMENT )
	{
		this.RefId = refId;
		this.StudentPersonalRefId = studentPersonalRefId;
		this.SchoolInfoRefId = schoolInfoRefId;
		this.SetMembershipType( membershipType );
		this.SetTimeFrame( timeFrame );
		this.SchoolYear = schoolYear;
		this.EntryDate = entryDate;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected StudentSchoolEnrollment( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { StudentDTD.STUDENTSCHOOLENROLLMENT_REFID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>RefId</c> attribute.
	/// </summary>
	/// <value> The <c>RefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The ID (GUID) that uniquely identifies a particular enrollment."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public override string RefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_REFID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_REFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StudentPersonalRefId&gt;</c> element.
	/// </summary>
	/// <value> The <c>StudentPersonalRefId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The ID (GUID) of the student to whom this information is linked."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string StudentPersonalRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_STUDENTPERSONALREFID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_STUDENTPERSONALREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SchoolInfoRefId&gt;</c> element.
	/// </summary>
	/// <value> The <c>SchoolInfoRefId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The ID (GUID) of the school to which this enrollment applies."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string SchoolInfoRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_SCHOOLINFOREFID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_SCHOOLINFOREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;MembershipType&gt;</c> element.
	/// </summary>
	/// <value> The <c>MembershipType</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The type of this enrollment as it relates to the school identified in SchoolInfoRefId."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string MembershipType
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_MEMBERSHIPTYPE );
		}
		set
		{
			SetField( StudentDTD.STUDENTSCHOOLENROLLMENT_MEMBERSHIPTYPE, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;MembershipType&gt;</c> element.
	/// </summary>
	/// <param name="val">A SchoolEnrollmentType object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The type of this enrollment as it relates to the school identified in SchoolInfoRefId."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetMembershipType( SchoolEnrollmentType val )
	{
		SetField( StudentDTD.STUDENTSCHOOLENROLLMENT_MEMBERSHIPTYPE, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;TimeFrame&gt;</c> element.
	/// </summary>
	/// <value> The <c>TimeFrame</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The timeframe of the enrollment based on the SIF_Date in the SIF_Header of the message. For events, it is determined as of the date the event is generated. For requests and responses, it is calculated based on the date of the request."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string TimeFrame
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_TIMEFRAME );
		}
		set
		{
			SetField( StudentDTD.STUDENTSCHOOLENROLLMENT_TIMEFRAME, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;TimeFrame&gt;</c> element.
	/// </summary>
	/// <param name="val">A TimeFrame object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The timeframe of the enrollment based on the SIF_Date in the SIF_Header of the message. For events, it is determined as of the date the event is generated. For requests and responses, it is calculated based on the date of the request."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetTimeFrame( TimeFrame val )
	{
		SetField( StudentDTD.STUDENTSCHOOLENROLLMENT_TIMEFRAME, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SchoolYear&gt;</c> element.
	/// </summary>
	/// <value> The <c>SchoolYear</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public int? SchoolYear
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_SCHOOLYEAR ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_SCHOOLYEAR, new SifInt( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EntryDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>EntryDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The date from when this enrollment is valid."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public DateTime? EntryDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_ENTRYDATE ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_ENTRYDATE, new SifDate( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;EntryType&gt;</c> element.</summary>
	/// <param name="Code">Code indicating the type of entry for this enrollment</param>
	///<remarks>
	/// <para>This form of <c>setEntryType</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>EntryType</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetEntryType( AU0619EntryType Code ) {
		RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ENTRYTYPE);
		AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ENTRYTYPE, new EntryType( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EntryType&gt;</c> element.
	/// </summary>
	/// <value> An EntryType </value>
	/// <remarks>
	/// <para>To remove the <c>EntryType</c>, set <c>EntryType</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public EntryType EntryType
	{
		get
		{
			return (EntryType)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ENTRYTYPE);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ENTRYTYPE);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ENTRYTYPE, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;YearLevel&gt;</c> element.</summary>
	/// <param name="Code">Code representing the year level.</param>
	///<remarks>
	/// <para>This form of <c>setYearLevel</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>YearLevel</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetYearLevel( YearLevelCode Code ) {
		RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_YEARLEVEL);
		AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_YEARLEVEL, new YearLevel( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;YearLevel&gt;</c> element.
	/// </summary>
	/// <value> A YearLevel </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Year or academic level of student."</para>
	/// <para>To remove the <c>YearLevel</c>, set <c>YearLevel</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public YearLevel YearLevel
	{
		get
		{
			return (YearLevel)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_YEARLEVEL);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_YEARLEVEL);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_YEARLEVEL, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Homeroom&gt;</c> element.</summary>
	/// <param name="SifRefObject">The name of the object referenced.</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;Homeroom&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setHomeroom</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Homeroom</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetHomeroom( SIF_RefObject SifRefObject, string Value ) {
		RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_HOMEROOM);
		AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_HOMEROOM, new Homeroom( SifRefObject, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Homeroom&gt;</c> element.
	/// </summary>
	/// <value> An Homeroom </value>
	/// <remarks>
	/// <para>To remove the <c>Homeroom</c>, set <c>Homeroom</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public Homeroom Homeroom
	{
		get
		{
			return (Homeroom)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_HOMEROOM);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_HOMEROOM);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_HOMEROOM, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Advisor&gt;</c> element.</summary>
	/// <param name="SifRefObject">The name of the object referenced.</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;Advisor&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setAdvisor</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Advisor</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetAdvisor( AdvisorSIF_RefObject SifRefObject, string Value ) {
		RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ADVISOR);
		AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ADVISOR, new Advisor( SifRefObject, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Advisor&gt;</c> element.
	/// </summary>
	/// <value> An Advisor </value>
	/// <remarks>
	/// <para>To remove the <c>Advisor</c>, set <c>Advisor</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public Advisor Advisor
	{
		get
		{
			return (Advisor)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ADVISOR);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ADVISOR);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ADVISOR, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Counselor&gt;</c> element.</summary>
	/// <param name="SifRefObject">The name of the object referenced.</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;Counselor&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setCounselor</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Counselor</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetCounselor( CounselorSIF_RefObject SifRefObject, string Value ) {
		RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_COUNSELOR);
		AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_COUNSELOR, new Counselor( SifRefObject, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Counselor&gt;</c> element.
	/// </summary>
	/// <value> A Counselor </value>
	/// <remarks>
	/// <para>To remove the <c>Counselor</c>, set <c>Counselor</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public Counselor Counselor
	{
		get
		{
			return (Counselor)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_COUNSELOR);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_COUNSELOR);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_COUNSELOR, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Homegroup&gt;</c> element.
	/// </summary>
	/// <value> The <c>Homegroup</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The name of the homegroup the student enrollment belongs to."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string Homegroup
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_HOMEGROUP ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_HOMEGROUP, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;House&gt;</c> element.
	/// </summary>
	/// <value> The <c>House</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The name of the house the student belongs to."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string House
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_HOUSE ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_HOUSE, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;IndividualLearningPlan&gt;</c> element.
	/// </summary>
	/// <value> The <c>IndividualLearningPlan</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Does this student have an individual learning plan in place?"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string IndividualLearningPlan
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_INDIVIDUALLEARNINGPLAN );
		}
		set
		{
			SetField( StudentDTD.STUDENTSCHOOLENROLLMENT_INDIVIDUALLEARNINGPLAN, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;IndividualLearningPlan&gt;</c> element.
	/// </summary>
	/// <param name="val">A AUCodeSetsYesOrNoCategoryType object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Does this student have an individual learning plan in place?"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetIndividualLearningPlan( AUCodeSetsYesOrNoCategoryType val )
	{
		SetField( StudentDTD.STUDENTSCHOOLENROLLMENT_INDIVIDUALLEARNINGPLAN, val );
	}

	///<summary>Sets the value of the <c>&lt;Calendar&gt;</c> element.</summary>
	/// <param name="SifRefObject">The name of the object referenced.</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;CalendarType&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setCalendar</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Calendar</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetCalendar( CalendarSIF_RefObject SifRefObject, string Value ) {
		RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_CALENDAR);
		AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_CALENDAR, new CalendarType( SifRefObject, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Calendar&gt;</c> element.
	/// </summary>
	/// <value> A CalendarType </value>
	/// <remarks>
	/// <para>To remove the <c>CalendarType</c>, set <c>Calendar</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public CalendarType Calendar
	{
		get
		{
			return (CalendarType)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_CALENDAR);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_CALENDAR);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_CALENDAR, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ExitDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>ExitDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The last school calendar day of this enrollment. If the student has exited the school or the enrollment has a RecordClosureReason, ExitDate must have a value."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public DateTime? ExitDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITDATE ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITDATE, new SifDate( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;ExitStatus&gt;</c> element.</summary>
	/// <param name="Code">Code indicating the closure status for this enrollment.</param>
	///<remarks>
	/// <para>This form of <c>setExitStatus</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ExitStatus</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetExitStatus( AU0643ExitWithdrawalStatusType Code ) {
		RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITSTATUS);
		AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITSTATUS, new ExitStatus( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ExitStatus&gt;</c> element.
	/// </summary>
	/// <value> An ExitStatus </value>
	/// <remarks>
	/// <para>To remove the <c>ExitStatus</c>, set <c>ExitStatus</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public ExitStatus ExitStatus
	{
		get
		{
			return (ExitStatus)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITSTATUS);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITSTATUS);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITSTATUS, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;ExitType&gt;</c> element.</summary>
	/// <param name="Code">Code indicating the type of exit for this enrollment.</param>
	///<remarks>
	/// <para>This form of <c>setExitType</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ExitType</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetExitType( AU0644ExitWithdrawalType Code ) {
		RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITTYPE);
		AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITTYPE, new ExitType( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ExitType&gt;</c> element.
	/// </summary>
	/// <value> An ExitType </value>
	/// <remarks>
	/// <para>To remove the <c>ExitType</c>, set <c>ExitType</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public ExitType ExitType
	{
		get
		{
			return (ExitType)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITTYPE);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITTYPE);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITTYPE, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;FTE&gt;</c> element.
	/// </summary>
	/// <value> The <c>FTE</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public decimal? FTE
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_FTE ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_FTE, new SifDecimal( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;FTPTStatus&gt;</c> element.
	/// </summary>
	/// <value> The <c>FTPTStatus</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "An indication of whether the student is enrolled full time or part time."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string FTPTStatus
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_FTPTSTATUS );
		}
		set
		{
			SetField( StudentDTD.STUDENTSCHOOLENROLLMENT_FTPTSTATUS, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;FTPTStatus&gt;</c> element.
	/// </summary>
	/// <param name="val">A FTPTStatusCodeType object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "An indication of whether the student is enrolled full time or part time."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetFTPTStatus( FTPTStatusCodeType val )
	{
		SetField( StudentDTD.STUDENTSCHOOLENROLLMENT_FTPTSTATUS, val );
	}

	///<summary>Sets the value of the <c>&lt;CatchmentStatus&gt;</c> element.</summary>
	/// <param name="Code">Code indicating the residency status for this enrollment.Code indicating Enrollment Catchment Status</param>
	///<remarks>
	/// <para>This form of <c>setCatchmentStatus</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>CatchmentStatus</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetCatchmentStatus( AU0598PublicSchoolCatchmentStatusType Code ) {
		RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_CATCHMENTSTATUS);
		AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_CATCHMENTSTATUS, new CatchmentStatus( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;CatchmentStatus&gt;</c> element.
	/// </summary>
	/// <value> A CatchmentStatus </value>
	/// <remarks>
	/// <para>To remove the <c>CatchmentStatus</c>, set <c>CatchmentStatus</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public CatchmentStatus CatchmentStatus
	{
		get
		{
			return (CatchmentStatus)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_CATCHMENTSTATUS);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_CATCHMENTSTATUS);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_CATCHMENTSTATUS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;RecordClosureReason&gt;</c> element.
	/// </summary>
	/// <value> The <c>RecordClosureReason</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The reason why this enrollment was closed.  The EndOfYear option must be used to convey status change due to rollover activity."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string RecordClosureReason
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_RECORDCLOSUREREASON );
		}
		set
		{
			SetField( StudentDTD.STUDENTSCHOOLENROLLMENT_RECORDCLOSUREREASON, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;RecordClosureReason&gt;</c> element.
	/// </summary>
	/// <param name="val">A RecordClosureReason object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The reason why this enrollment was closed.  The EndOfYear option must be used to convey status change due to rollover activity."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetRecordClosureReason( RecordClosureReason val )
	{
		SetField( StudentDTD.STUDENTSCHOOLENROLLMENT_RECORDCLOSUREREASON, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PromotionInfo&gt;</c> element.
	/// </summary>
	/// <value> A PromotionInfo </value>
	/// <remarks>
	/// <para>To remove the <c>PromotionInfo</c>, set <c>PromotionInfo</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public PromotionInfo PromotionInfo
	{
		get
		{
			return (PromotionInfo)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_PROMOTIONINFO);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_PROMOTIONINFO);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_PROMOTIONINFO, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PreviousSchool&gt;</c> element.
	/// </summary>
	/// <value> The <c>PreviousSchool</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "If the student has previously been enrolled at a school, i.e. student is transferring, the previous school number."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string PreviousSchool
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_PREVIOUSSCHOOL ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_PREVIOUSSCHOOL, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;DestinationSchool&gt;</c> element.
	/// </summary>
	/// <value> The <c>DestinationSchool</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "If the student has exited the school, the local id of the school to which the student has transferred to."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string DestinationSchool
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_DESTINATIONSCHOOL ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_DESTINATIONSCHOOL, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;StudentSubjectChoiceList&gt;</c> element.</summary>
	/// <param name="StudentSubjectChoice">A StudentSubjectChoice</param>
	///<remarks>
	/// <para>This form of <c>setStudentSubjectChoiceList</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>StudentSubjectChoiceList</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetStudentSubjectChoiceList( StudentSubjectChoice StudentSubjectChoice ) {
		RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_STUDENTSUBJECTCHOICELIST);
		AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_STUDENTSUBJECTCHOICELIST, new StudentSubjectChoiceList( StudentSubjectChoice ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StudentSubjectChoiceList&gt;</c> element.
	/// </summary>
	/// <value> A StudentSubjectChoiceList </value>
	/// <remarks>
	/// <para>To remove the <c>StudentSubjectChoiceList</c>, set <c>StudentSubjectChoiceList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public StudentSubjectChoiceList StudentSubjectChoiceList
	{
		get
		{
			return (StudentSubjectChoiceList)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_STUDENTSUBJECTCHOICELIST);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_STUDENTSUBJECTCHOICELIST);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_STUDENTSUBJECTCHOICELIST, value );
			}
		}
	}

		#region EXTRA METHODS

// BEGIN EXTRA METHODS (C:/dev/OpenADK-java/adk-generator/datadef/au/sif23/StudentSchoolEnrollment.txt.cs)


    /// <summary>
    /// Computes the "TimeFrame" element based on the given dates using the guidelines 
    /// published in the SIF Specification. In order for this calculation to be accurate,
    /// the EntryDate and ExitDate, if applicable need to be set on this object before calling
    /// this method.
    /// </summary>
    /// <param name="compareDate">The timestamp to base the calculation on. 
    /// For SIF_Requests, this must be the date of the SIF_Request, 
    /// and should be the value returned from <see cref="SifMessageInfo#TimeStamp"/> 
    /// For SIF_Events, this must be the timestamp of when the event is 
    /// going to be published, and can be the current time.</param>
    /// <returns>The TimeFrame value that was computed and set as the TimeFrame
    /// of this StudentSchoolEnrollment object. If the TimeFrame cannot be computed
    /// because there is no EntryDate set, null will be returned.</returns>
    public TimeFrame computeTimeFrame( DateTime compareDate )
	{
		DateTime? exitDate = ExitDate;
		DateTime? entryDate = EntryDate;
		
		TimeFrame tf = null;
		if( exitDate.HasValue ) {
			if( compareDate > exitDate.Value ) {
				tf = OpenADK.Library.au.Student.TimeFrame.HISTORICAL;
			}
		}
		if( (tf == null) && entryDate.HasValue ) {
			if ( compareDate < (entryDate.Value) ) {
		    	 tf = OpenADK.Library.au.Student.TimeFrame.FUTURE;
		    } else {
		    	 tf = OpenADK.Library.au.Student.TimeFrame.CURRENT;
		    }
		}
		
		this.SetTimeFrame( tf );
		return tf;
		
	}

// END EXTRA METHODS

		#endregion // EXTRA METHODS
}}
