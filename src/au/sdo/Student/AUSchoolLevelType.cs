// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using OpenADK.Library;

namespace OpenADK.Library.au.Student
{
	///<summary>
	/// Defines the set of values that can be specified whenever an AUSchoolLevelType
	/// is used as a parameter to a method or constructor. 
	///</summary>
	/// <remarks>
	/// Alternatively, the static
	///  <see cref="Wrap"/> method can be called to encapsulate any string value in
	///  an AUSchoolLevelType object.
	/// <para>Author: Generated by adkgen</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	[Serializable]
	public class AUSchoolLevelType : SifEnum
	{
	/// <summary>Special ("Special")</summary>
	public static readonly AUSchoolLevelType SPECIAL = new AUSchoolLevelType("Special");

	/// <summary>Primary ("Prim")</summary>
	public static readonly AUSchoolLevelType Prim_PRIMARY = new AUSchoolLevelType("Prim");

	/// <summary>Senior Secondary School ("Senior")</summary>
	public static readonly AUSchoolLevelType Senior_SENIOR_SECONDARY = new AUSchoolLevelType("Senior");

	/// <summary>Other ("Other")</summary>
	public static readonly AUSchoolLevelType OTHER = new AUSchoolLevelType("Other");

	/// <summary>SupportCentre ("Supp")</summary>
	public static readonly AUSchoolLevelType Supp_SUPPORTCENTRE = new AUSchoolLevelType("Supp");

	/// <summary>Camp ("Camp")</summary>
	public static readonly AUSchoolLevelType CAMP = new AUSchoolLevelType("Camp");

	/// <summary>Early Childhood ("EarlyCh")</summary>
	public static readonly AUSchoolLevelType EarlyCh_EARLY_CHILDHOOD = new AUSchoolLevelType("EarlyCh");

	/// <summary>Community College ("Commty")</summary>
	public static readonly AUSchoolLevelType Commty_COMMUNITY_COLLEGE = new AUSchoolLevelType("Commty");

	/// <summary>Junior Primary ("JunPri")</summary>
	public static readonly AUSchoolLevelType JunPri_JUNIOR_PRIMARY = new AUSchoolLevelType("JunPri");

	/// <summary>Preschool/Kindergarten ("Kind")</summary>
	public static readonly AUSchoolLevelType Kind_PRESCHOOL_KINDERGARTEN = new AUSchoolLevelType("Kind");

	/// <summary>Maternal and Child Health Centres ("MCH")</summary>
	public static readonly AUSchoolLevelType MCH_MATERNAL_CHILD_HEALTH = new AUSchoolLevelType("MCH");

	/// <summary>Specific Purpose ("Specif")</summary>
	public static readonly AUSchoolLevelType Specif_SPECIFIC_PURPOSE = new AUSchoolLevelType("Specif");

	/// <summary>Secondary ("Sec")</summary>
	public static readonly AUSchoolLevelType Sec_SECONDARY = new AUSchoolLevelType("Sec");

	/// <summary>Language ("Lang")</summary>
	public static readonly AUSchoolLevelType Lang_LANGUAGE = new AUSchoolLevelType("Lang");

	/// <summary>Unknown ("Unknown")</summary>
	public static readonly AUSchoolLevelType UNKNOWN = new AUSchoolLevelType("Unknown");

	/// <summary>Middle School ("Middle")</summary>
	public static readonly AUSchoolLevelType Middle_MIDDLE_SCHOOL = new AUSchoolLevelType("Middle");

	/// <summary>Primary/Seconday Combined ("Pri/Sec")</summary>
	public static readonly AUSchoolLevelType Pri_Sec_PRIMARY_SECONDAY = new AUSchoolLevelType("Pri/Sec");

	///<summary>Wrap an arbitrary string value in an AUSchoolLevelType object.</summary>
	///<param name="wrappedValue">The element/attribute value.</param>
	///<remarks>This method does not verify
	///that the value is valid according to the SIF Specification</remarks>
	public static AUSchoolLevelType Wrap( String wrappedValue ) {
		return new AUSchoolLevelType( wrappedValue );
	}

	private AUSchoolLevelType( string enumDefValue ) : base( enumDefValue ) {}
	}
}
