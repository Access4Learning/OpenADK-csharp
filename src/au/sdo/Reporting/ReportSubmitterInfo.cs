// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.au.Common;
using OpenADK.Library.Infra;

namespace OpenADK.Library.au.Reporting{

/// <summary>A ReportSubmitterInfo</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 2.3</para>
/// </remarks>
[Serializable]
public class ReportSubmitterInfo : SifKeyedElement
{
	/// <summary>
	/// Creates an instance of a ReportSubmitterInfo
	/// </summary>
	public ReportSubmitterInfo() : base ( ReportingDTD.REPORTSUBMITTERINFO ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="submitterName">Name of the report submitter.</param>
	///
	public ReportSubmitterInfo( string submitterName ) : base( ReportingDTD.REPORTSUBMITTERINFO )
	{
		this.SubmitterName = submitterName;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected ReportSubmitterInfo( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { ReportingDTD.REPORTSUBMITTERINFO_SUBMITTERNAME }; }
	}

	///<summary>Sets the value of the <c>&lt;SIF_RefId&gt;</c> element.</summary>
	/// <param name="SifRefObject">A SIF_RefObject</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;SIF_RefId&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setSIF_RefId</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>SIF_RefId</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetSIF_RefId( string SifRefObject, string Value ) {
		RemoveChild( ReportingDTD.REPORTSUBMITTERINFO_SIF_REFID);
		AddChild( ReportingDTD.REPORTSUBMITTERINFO_SIF_REFID, new SIF_RefId( SifRefObject, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SIF_RefId&gt;</c> element.
	/// </summary>
	/// <value> A SIF_RefId </value>
	/// <remarks>
	/// <para>To remove the <c>SIF_RefId</c>, set <c>SIF_RefId</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public SIF_RefId SIF_RefId
	{
		get
		{
			return (SIF_RefId)GetChild( ReportingDTD.REPORTSUBMITTERINFO_SIF_REFID);
		}
		set
		{
			RemoveChild( ReportingDTD.REPORTSUBMITTERINFO_SIF_REFID);
			if( value != null)
			{
				AddChild( ReportingDTD.REPORTSUBMITTERINFO_SIF_REFID, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SubmitterName&gt;</c> element.
	/// </summary>
	/// <value> The <c>SubmitterName</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Name of the report submitter."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string SubmitterName
	{
		get
		{
			return (string) GetSifSimpleFieldValue( ReportingDTD.REPORTSUBMITTERINFO_SUBMITTERNAME ) ;
		}
		set
		{
			SetFieldValue( ReportingDTD.REPORTSUBMITTERINFO_SUBMITTERNAME, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SubmitterDepartment&gt;</c> element.
	/// </summary>
	/// <value> The <c>SubmitterDepartment</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Department, office, or subdivision of the agency submitting the report."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string SubmitterDepartment
	{
		get
		{
			return (string) GetSifSimpleFieldValue( ReportingDTD.REPORTSUBMITTERINFO_SUBMITTERDEPARTMENT ) ;
		}
		set
		{
			SetFieldValue( ReportingDTD.REPORTSUBMITTERINFO_SUBMITTERDEPARTMENT, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;ContactInfo&gt;</c> element.</summary>
	/// <param name="Name">A Name</param>
	///<remarks>
	/// <para>This form of <c>setContactInfo</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ContactInfo</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetContactInfo( Name Name ) {
		RemoveChild( ReportingDTD.REPORTSUBMITTERINFO_CONTACTINFO);
		AddChild( ReportingDTD.REPORTSUBMITTERINFO_CONTACTINFO, new ContactInfo( Name ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ContactInfo&gt;</c> element.
	/// </summary>
	/// <value> A ContactInfo </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Information on the contact person in this agency submitting the report."</para>
	/// <para>To remove the <c>ContactInfo</c>, set <c>ContactInfo</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public ContactInfo ContactInfo
	{
		get
		{
			return (ContactInfo)GetChild( ReportingDTD.REPORTSUBMITTERINFO_CONTACTINFO);
		}
		set
		{
			RemoveChild( ReportingDTD.REPORTSUBMITTERINFO_CONTACTINFO);
			if( value != null)
			{
				AddChild( ReportingDTD.REPORTSUBMITTERINFO_CONTACTINFO, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Address&gt;</c> element.</summary>
	/// <param name="Type">Code that defines the location of the address. Note: A subset of specific valid values for each instance in a data object may be listed in that object.</param>
	/// <param name="Role">A facet of Address</param>
	/// <param name="Street">A Street</param>
	/// <param name="City">The city part of the address.</param>
	/// <param name="PostalCode">The ZIP/postal code.</param>
	///<remarks>
	/// <para>This form of <c>setAddress</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Address</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetAddress( AddressType Type, AddressRoleType Role, Street Street, string City, string PostalCode ) {
		RemoveChild( ReportingDTD.REPORTSUBMITTERINFO_ADDRESS);
		AddChild( ReportingDTD.REPORTSUBMITTERINFO_ADDRESS, new Address( Type, Role, Street, City, PostalCode ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Address&gt;</c> element.
	/// </summary>
	/// <value> An Address </value>
	/// <remarks>
	/// <para>To remove the <c>Address</c>, set <c>Address</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public Address Address
	{
		get
		{
			return (Address)GetChild( ReportingDTD.REPORTSUBMITTERINFO_ADDRESS);
		}
		set
		{
			RemoveChild( ReportingDTD.REPORTSUBMITTERINFO_ADDRESS);
			if( value != null)
			{
				AddChild( ReportingDTD.REPORTSUBMITTERINFO_ADDRESS, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;PhoneNumber&gt;</c> element.</summary>
	/// <param name="Type">
	/// Code that specifies what type of phone number this is.
	/// Note: A subset of valid values may be specified in data
	/// objects.</param>
	/// <param name="Number">
	/// Phone number. Free-form, but typical U.S. formats
	/// include:</param>
	///<remarks>
	/// <para>This form of <c>setPhoneNumber</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>PhoneNumber</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetPhoneNumber( PhoneNumberType Type, string Number ) {
		RemoveChild( ReportingDTD.REPORTSUBMITTERINFO_PHONENUMBER);
		AddChild( ReportingDTD.REPORTSUBMITTERINFO_PHONENUMBER, new PhoneNumber( Type, Number ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PhoneNumber&gt;</c> element.
	/// </summary>
	/// <value> A PhoneNumber </value>
	/// <remarks>
	/// <para>To remove the <c>PhoneNumber</c>, set <c>PhoneNumber</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public PhoneNumber PhoneNumber
	{
		get
		{
			return (PhoneNumber)GetChild( ReportingDTD.REPORTSUBMITTERINFO_PHONENUMBER);
		}
		set
		{
			RemoveChild( ReportingDTD.REPORTSUBMITTERINFO_PHONENUMBER);
			if( value != null)
			{
				AddChild( ReportingDTD.REPORTSUBMITTERINFO_PHONENUMBER, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SubmitterNotes&gt;</c> element.
	/// </summary>
	/// <value> The <c>SubmitterNotes</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Optional notes for the report authority, such as information about a district's reporting policies and procedures, instructions for contacting the district for technical support, etc."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string SubmitterNotes
	{
		get
		{
			return (string) GetSifSimpleFieldValue( ReportingDTD.REPORTSUBMITTERINFO_SUBMITTERNOTES ) ;
		}
		set
		{
			SetFieldValue( ReportingDTD.REPORTSUBMITTERINFO_SUBMITTERNOTES, new SifString( value ), value );
		}
	}

}}
