// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using OpenADK.Library;

namespace OpenADK.Library.au.Reporting
{
	///<summary>
	/// Defines the set of values that can be specified whenever a ReportDefinitionSourceType
	/// is used as a parameter to a method or constructor. 
	///</summary>
	/// <remarks>
	/// Alternatively, the static
	///  <see cref="Wrap"/> method can be called to encapsulate any string value in
	///  a ReportDefinitionSourceType object.
	/// <para>Author: Generated by adkgen</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	[Serializable]
	public class ReportDefinitionSourceType : SifEnum
	{
	/// <summary>URL ("URL")</summary>
	public static readonly ReportDefinitionSourceType URL = new ReportDefinitionSourceType("URL");

	/// <summary>Embedded ("Embedded")</summary>
	public static readonly ReportDefinitionSourceType EMBEDDED = new ReportDefinitionSourceType("Embedded");

	/// <summary>SIF_Query ("SIF_Query")</summary>
	public static readonly ReportDefinitionSourceType SIF_QUERY = new ReportDefinitionSourceType("SIF_Query");

	/// <summary>Base64Binary ("Base64Binary")</summary>
	public static readonly ReportDefinitionSourceType BASE64BINARY = new ReportDefinitionSourceType("Base64Binary");

	/// <summary>SIF_ExtendedQuery ("SIF_ExtendedQuery")</summary>
	public static readonly ReportDefinitionSourceType SIF_EXTENDEDQUERY = new ReportDefinitionSourceType("SIF_ExtendedQuery");

	///<summary>Wrap an arbitrary string value in a ReportDefinitionSourceType object.</summary>
	///<param name="wrappedValue">The element/attribute value.</param>
	///<remarks>This method does not verify
	///that the value is valid according to the SIF Specification</remarks>
	public static ReportDefinitionSourceType Wrap( String wrappedValue ) {
		return new ReportDefinitionSourceType( wrappedValue );
	}

	private ReportDefinitionSourceType( string enumDefValue ) : base( enumDefValue ) {}
	}
}
