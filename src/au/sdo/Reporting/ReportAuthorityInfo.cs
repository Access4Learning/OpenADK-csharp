// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.au.Common;
using OpenADK.Library.Infra;

namespace OpenADK.Library.au.Reporting{

/// <summary>A ReportAuthorityInfo</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.3</para>
/// </remarks>
[Serializable]
public class ReportAuthorityInfo : SifDataObject
{
	/// <summary>
	/// Creates an instance of a ReportAuthorityInfo
	/// </summary>
	public ReportAuthorityInfo() : base( Adk.SifVersion, ReportingDTD.REPORTAUTHORITYINFO ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="refId">The unique identifier for this agency/report authority.</param>
	///<param name="authorityName">Name of the agency/report authority.</param>
	///<param name="authorityId">The zone unique case-sensitive identifier for the authority. This will be the contents of the SIF_SourceId element in the header of requests for reports.</param>
	///<param name="authorityLevel">Level of the authority.</param>
	///
	public ReportAuthorityInfo( string refId, string authorityName, string authorityId, AuthorityLevel authorityLevel ) : base( Adk.SifVersion, ReportingDTD.REPORTAUTHORITYINFO )
	{
		this.RefId = refId;
		this.AuthorityName = authorityName;
		this.AuthorityId = authorityId;
		this.SetAuthorityLevel( authorityLevel );
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected ReportAuthorityInfo( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { ReportingDTD.REPORTAUTHORITYINFO_REFID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>RefId</c> attribute.
	/// </summary>
	/// <value> The <c>RefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The unique identifier for this agency/report authority."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public override string RefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( ReportingDTD.REPORTAUTHORITYINFO_REFID ) ;
		}
		set
		{
			SetFieldValue( ReportingDTD.REPORTAUTHORITYINFO_REFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AuthorityName&gt;</c> element.
	/// </summary>
	/// <value> The <c>AuthorityName</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Name of the agency/report authority."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string AuthorityName
	{
		get
		{
			return (string) GetSifSimpleFieldValue( ReportingDTD.REPORTAUTHORITYINFO_AUTHORITYNAME ) ;
		}
		set
		{
			SetFieldValue( ReportingDTD.REPORTAUTHORITYINFO_AUTHORITYNAME, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AuthorityId&gt;</c> element.
	/// </summary>
	/// <value> The <c>AuthorityId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The zone unique case-sensitive identifier for the authority. This will be the contents of the SIF_SourceId element in the header of requests for reports."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string AuthorityId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( ReportingDTD.REPORTAUTHORITYINFO_AUTHORITYID ) ;
		}
		set
		{
			SetFieldValue( ReportingDTD.REPORTAUTHORITYINFO_AUTHORITYID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AuthorityDepartment&gt;</c> element.
	/// </summary>
	/// <value> The <c>AuthorityDepartment</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Department, office, or subdivision of the agency/report authority."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string AuthorityDepartment
	{
		get
		{
			return (string) GetSifSimpleFieldValue( ReportingDTD.REPORTAUTHORITYINFO_AUTHORITYDEPARTMENT ) ;
		}
		set
		{
			SetFieldValue( ReportingDTD.REPORTAUTHORITYINFO_AUTHORITYDEPARTMENT, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AuthorityLevel&gt;</c> element.
	/// </summary>
	/// <value> The <c>AuthorityLevel</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Level of the authority."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string AuthorityLevel
	{
		get
		{ 
			return GetFieldValue( ReportingDTD.REPORTAUTHORITYINFO_AUTHORITYLEVEL );
		}
		set
		{
			SetField( ReportingDTD.REPORTAUTHORITYINFO_AUTHORITYLEVEL, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;AuthorityLevel&gt;</c> element.
	/// </summary>
	/// <param name="val">A AuthorityLevel object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Level of the authority."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetAuthorityLevel( AuthorityLevel val )
	{
		SetField( ReportingDTD.REPORTAUTHORITYINFO_AUTHORITYLEVEL, val );
	}

	///<summary>Sets the value of the <c>&lt;ContactInfo&gt;</c> element.</summary>
	/// <param name="Name">A Name</param>
	///<remarks>
	/// <para>This form of <c>setContactInfo</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ContactInfo</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetContactInfo( Name Name ) {
		RemoveChild( ReportingDTD.REPORTAUTHORITYINFO_CONTACTINFO);
		AddChild( ReportingDTD.REPORTAUTHORITYINFO_CONTACTINFO, new ContactInfo( Name ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ContactInfo&gt;</c> element.
	/// </summary>
	/// <value> A ContactInfo </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Information on the contact person in this agency."</para>
	/// <para>To remove the <c>ContactInfo</c>, set <c>ContactInfo</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public ContactInfo ContactInfo
	{
		get
		{
			return (ContactInfo)GetChild( ReportingDTD.REPORTAUTHORITYINFO_CONTACTINFO);
		}
		set
		{
			RemoveChild( ReportingDTD.REPORTAUTHORITYINFO_CONTACTINFO);
			if( value != null)
			{
				AddChild( ReportingDTD.REPORTAUTHORITYINFO_CONTACTINFO, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Address&gt;</c> element.</summary>
	/// <param name="Type">Code that defines the location of the address. Note: A subset of specific valid values for each instance in a data object may be listed in that object.</param>
	/// <param name="Role">A facet of Address</param>
	/// <param name="Street">A Street</param>
	/// <param name="City">The city part of the address.</param>
	/// <param name="PostalCode">The ZIP/postal code.</param>
	///<remarks>
	/// <para>This form of <c>setAddress</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Address</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetAddress( AddressType Type, AddressRoleType Role, Street Street, string City, string PostalCode ) {
		RemoveChild( ReportingDTD.REPORTAUTHORITYINFO_ADDRESS);
		AddChild( ReportingDTD.REPORTAUTHORITYINFO_ADDRESS, new Address( Type, Role, Street, City, PostalCode ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Address&gt;</c> element.
	/// </summary>
	/// <value> An Address </value>
	/// <remarks>
	/// <para>To remove the <c>Address</c>, set <c>Address</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public Address Address
	{
		get
		{
			return (Address)GetChild( ReportingDTD.REPORTAUTHORITYINFO_ADDRESS);
		}
		set
		{
			RemoveChild( ReportingDTD.REPORTAUTHORITYINFO_ADDRESS);
			if( value != null)
			{
				AddChild( ReportingDTD.REPORTAUTHORITYINFO_ADDRESS, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;PhoneNumber&gt;</c> element.</summary>
	/// <param name="Type">
	/// Code that specifies what type of phone number this is.
	/// Note: A subset of valid values may be specified in data
	/// objects.</param>
	/// <param name="Number">
	/// Phone number. Free-form, but typical U.S. formats
	/// include:</param>
	///<remarks>
	/// <para>This form of <c>setPhoneNumber</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>PhoneNumber</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetPhoneNumber( PhoneNumberType Type, string Number ) {
		RemoveChild( ReportingDTD.REPORTAUTHORITYINFO_PHONENUMBER);
		AddChild( ReportingDTD.REPORTAUTHORITYINFO_PHONENUMBER, new PhoneNumber( Type, Number ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PhoneNumber&gt;</c> element.
	/// </summary>
	/// <value> A PhoneNumber </value>
	/// <remarks>
	/// <para>To remove the <c>PhoneNumber</c>, set <c>PhoneNumber</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public PhoneNumber PhoneNumber
	{
		get
		{
			return (PhoneNumber)GetChild( ReportingDTD.REPORTAUTHORITYINFO_PHONENUMBER);
		}
		set
		{
			RemoveChild( ReportingDTD.REPORTAUTHORITYINFO_PHONENUMBER);
			if( value != null)
			{
				AddChild( ReportingDTD.REPORTAUTHORITYINFO_PHONENUMBER, value );
			}
		}
	}

}}
