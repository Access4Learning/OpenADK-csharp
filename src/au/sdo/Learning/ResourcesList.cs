// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.au.Common;

namespace OpenADK.Library.au.Learning{

/// <summary>A ResourcesList</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 2.4</para>
/// </remarks>
[Serializable]
public class ResourcesList : SifKeyedElement
{
	/// <summary>
	/// Creates an instance of a ResourcesList
	/// </summary>
	public ResourcesList() : base ( LearningDTD.RESOURCESLIST ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="resourceType">A ResourceType</param>
	///
	public ResourcesList( ResourceType resourceType ) : base( LearningDTD.RESOURCESLIST )
	{
		this.SetResourceType( resourceType );
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected ResourcesList( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { LearningDTD.RESOURCESLIST_RESOURCETYPE }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>ResourceType</c> attribute.
	/// </summary>
	/// <value> The <c>ResourceType</c> attribute of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public string ResourceType
	{
		get
		{ 
			return GetFieldValue( LearningDTD.RESOURCESLIST_RESOURCETYPE );
		}
		set
		{
			SetField( LearningDTD.RESOURCESLIST_RESOURCETYPE, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>ResourceType</c> attribute.
	/// </summary>
	/// <param name="val">A ResourceType object</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public void SetResourceType( ResourceType val )
	{
		SetField( LearningDTD.RESOURCESLIST_RESOURCETYPE, val );
	}

	/// <summary>Adds a new <c>&lt;LearningResourceRefId&gt;</c> child element.</summary>
	/// <param name="val">A LearningResourceRefIds object</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public void AddLearningResourceRefId( LearningResourceRefIds val ) { 
		AddChild( LearningDTD.RESOURCESLIST_LEARNINGRESOURCEREFID, val );
	}

	///<summary>Adds the value of the <c>&lt;LearningResourceRefId&gt;</c> element.</summary>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;LearningResourceRefIds&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setLearningResourceRefId</c> is provided as a convenience method
	/// that is functionally equivalent to the method <c>AddLearningResourceRefId</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public void AddLearningResourceRefId( string Value ) {
		AddChild( LearningDTD.RESOURCESLIST_LEARNINGRESOURCEREFID, new LearningResourceRefIds( Value ) );
	}

	/// <summary>
	/// Removes a <see cref="LearningResourceRefIds"/> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	/// </summary>
	/// <param name="Value">Identifies the LearningResourceRefIds object to remove by its Value value</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public void RemoveLearningResourceRefId( string Value ) { 
		RemoveChild( LearningDTD.RESOURCESLIST_LEARNINGRESOURCEREFID, new String[] { Value.ToString() } );
	}

	/// <summary>
	/// Gets a <see cref="LearningResourceRefIds"/> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	/// </summary>
	/// <param name="Value">Identifies the LearningResourceRefIds object to return by its "Value" attribute value</param>
	/// <returns>A LearningResourceRefIds object</returns>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public LearningResourceRefIds GetLearningResourceRefId( string Value ) { 
		return (LearningResourceRefIds)GetChild( LearningDTD.RESOURCESLIST_LEARNINGRESOURCEREFID, new string[] { Value.ToString() } );
	}

	/// <summary>
	/// Gets all LearningResourceRefIds object instances. More than once instance can be defined for this object because it is a repeatable field element.
	/// </summary>
	/// <returns>An array of LearningResourceRefIds objects</returns>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public LearningResourceRefIds[] GetLearningResourceRefIds()
	{
		return GetChildren<LearningResourceRefIds>().ToArray();
	}

	/// <summary>
	/// Sets all LearningResourceRefIds object instances. All existing 
	/// <c>LearningResourceRefIds</c> instances 
	/// are removed and replaced with this list. Calling this method with the 
	/// parameter value set to null removes all <c>LearningResourceRefIdses</c>.
	/// </summary>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public void SetLearningResourceRefIds( LearningResourceRefIds[] items)
	{
		SetChildren( LearningDTD.RESOURCESLIST_LEARNINGRESOURCEREFID, items );
	}

}}
