// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.au.Common;

namespace OpenADK.Library.au.Learning{

/// <summary>A Component</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.4</para>
/// </remarks>
[Serializable]
public class Component : SifElement
{
	/// <summary>
	/// Creates an instance of a Component
	/// </summary>
	public Component() : base ( LearningDTD.COMPONENT ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="name">A Name</param>
	///<param name="reference">A Reference</param>
	///
	public Component( string name, string reference ) : base( LearningDTD.COMPONENT )
	{
		this.Name = name;
		this.Reference = reference;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected Component( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public  IElementDef[] KeyFields {
		get { return new IElementDef[] { LearningDTD.COMPONENT_NAME, LearningDTD.COMPONENT_REFERENCE }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Name&gt;</c> element.
	/// </summary>
	/// <value> The <c>Name</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public string Name
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearningDTD.COMPONENT_NAME ) ;
		}
		set
		{
			SetFieldValue( LearningDTD.COMPONENT_NAME, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Reference&gt;</c> element.
	/// </summary>
	/// <value> The <c>Reference</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public string Reference
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearningDTD.COMPONENT_REFERENCE ) ;
		}
		set
		{
			SetFieldValue( LearningDTD.COMPONENT_REFERENCE, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Description&gt;</c> element.
	/// </summary>
	/// <value> The <c>Description</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public string Description
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearningDTD.COMPONENT_DESCRIPTION ) ;
		}
		set
		{
			SetFieldValue( LearningDTD.COMPONENT_DESCRIPTION, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Strategies&gt;</c> element.
	/// </summary>
	/// <value> A Strategies </value>
	/// <remarks>
	/// <para>To remove the <c>Strategies</c>, set <c>Strategies</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public Strategies Strategies
	{
		get
		{
			return (Strategies)GetChild( LearningDTD.COMPONENT_STRATEGIES);
		}
		set
		{
			RemoveChild( LearningDTD.COMPONENT_STRATEGIES);
			if( value != null)
			{
				AddChild( LearningDTD.COMPONENT_STRATEGIES, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AssociatedObjects&gt;</c> element.
	/// </summary>
	/// <value> An AssociatedObjects </value>
	/// <remarks>
	/// <para>To remove the <c>AssociatedObjects</c>, set <c>AssociatedObjects</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public AssociatedObjects AssociatedObjects
	{
		get
		{
			return (AssociatedObjects)GetChild( LearningDTD.COMPONENT_ASSOCIATEDOBJECTS);
		}
		set
		{
			RemoveChild( LearningDTD.COMPONENT_ASSOCIATEDOBJECTS);
			if( value != null)
			{
				AddChild( LearningDTD.COMPONENT_ASSOCIATEDOBJECTS, value );
			}
		}
	}

}}
