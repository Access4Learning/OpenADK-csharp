// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.au.Common;

namespace OpenADK.Library.au.Learning{

/// <summary>A LearningStandardItem</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 2.4</para>
/// </remarks>
[Serializable]
public class LearningStandardItem : SifDataObject
{
	/// <summary>
	/// Creates an instance of a LearningStandardItem
	/// </summary>
	public LearningStandardItem() : base( Adk.SifVersion, LearningDTD.LEARNINGSTANDARDITEM ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="refId">A RefId</param>
	///<param name="language">A Language</param>
	///<param name="standardHierarchyLevel">A StandardHierarchyLevel</param>
	///<param name="yearLevels">A YearLevels</param>
	///<param name="learningStandardDocumentRefId">A LearningStandardDocumentRefId</param>
	///
	public LearningStandardItem( string refId, string language, StandardHierarchyLevel standardHierarchyLevel, YearLevel yearLevels, string learningStandardDocumentRefId ) : base( Adk.SifVersion, LearningDTD.LEARNINGSTANDARDITEM )
	{
		this.RefId = refId;
		this.Language = language;
		this.StandardHierarchyLevel = standardHierarchyLevel;
		this.YearLevels =  new YearLevels( yearLevels );
		this.LearningStandardDocumentRefId = learningStandardDocumentRefId;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected LearningStandardItem( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { LearningDTD.LEARNINGSTANDARDITEM_REFID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>RefId</c> attribute.
	/// </summary>
	/// <value> The <c>RefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public override string RefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearningDTD.LEARNINGSTANDARDITEM_REFID ) ;
		}
		set
		{
			SetFieldValue( LearningDTD.LEARNINGSTANDARDITEM_REFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>Language</c> attribute.
	/// </summary>
	/// <value> The <c>Language</c> attribute of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public string Language
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearningDTD.LEARNINGSTANDARDITEM_LANGUAGE ) ;
		}
		set
		{
			SetFieldValue( LearningDTD.LEARNINGSTANDARDITEM_LANGUAGE, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;Resources&gt;</c> element.</summary>
	/// <param name="ResourceType">A ResourceType</param>
	///<remarks>
	/// <para>This form of <c>setResources</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Resources</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public void SetResources( ResourceType ResourceType ) {
		RemoveChild( LearningDTD.LEARNINGSTANDARDITEM_RESOURCES);
		AddChild( LearningDTD.LEARNINGSTANDARDITEM_RESOURCES, new ResourcesList( ResourceType ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Resources&gt;</c> element.
	/// </summary>
	/// <value> A ResourcesList </value>
	/// <remarks>
	/// <para>To remove the <c>ResourcesList</c>, set <c>Resources</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public ResourcesList Resources
	{
		get
		{
			return (ResourcesList)GetChild( LearningDTD.LEARNINGSTANDARDITEM_RESOURCES);
		}
		set
		{
			RemoveChild( LearningDTD.LEARNINGSTANDARDITEM_RESOURCES);
			if( value != null)
			{
				AddChild( LearningDTD.LEARNINGSTANDARDITEM_RESOURCES, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;StandardSettingBody&gt;</c> element.</summary>
	/// <param name="Country">A Country</param>
	/// <param name="SettingBodyName">A SettingBodyName</param>
	///<remarks>
	/// <para>This form of <c>setStandardSettingBody</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>StandardSettingBody</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public void SetStandardSettingBody( Country Country, string SettingBodyName ) {
		RemoveChild( LearningDTD.LEARNINGSTANDARDITEM_STANDARDSETTINGBODY);
		AddChild( LearningDTD.LEARNINGSTANDARDITEM_STANDARDSETTINGBODY, new StandardSettingBody( Country, SettingBodyName ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StandardSettingBody&gt;</c> element.
	/// </summary>
	/// <value> A StandardSettingBody </value>
	/// <remarks>
	/// <para>To remove the <c>StandardSettingBody</c>, set <c>StandardSettingBody</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public StandardSettingBody StandardSettingBody
	{
		get
		{
			return (StandardSettingBody)GetChild( LearningDTD.LEARNINGSTANDARDITEM_STANDARDSETTINGBODY);
		}
		set
		{
			RemoveChild( LearningDTD.LEARNINGSTANDARDITEM_STANDARDSETTINGBODY);
			if( value != null)
			{
				AddChild( LearningDTD.LEARNINGSTANDARDITEM_STANDARDSETTINGBODY, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;StandardHierarchyLevel&gt;</c> element.</summary>
	/// <param name="Number">A Number</param>
	/// <param name="Description">A Description</param>
	///<remarks>
	/// <para>This form of <c>setStandardHierarchyLevel</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>StandardHierarchyLevel</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public void SetStandardHierarchyLevel( int? Number, string Description ) {
		RemoveChild( LearningDTD.LEARNINGSTANDARDITEM_STANDARDHIERARCHYLEVEL);
		AddChild( LearningDTD.LEARNINGSTANDARDITEM_STANDARDHIERARCHYLEVEL, new StandardHierarchyLevel( Number, Description ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StandardHierarchyLevel&gt;</c> element.
	/// </summary>
	/// <value> A StandardHierarchyLevel </value>
	/// <remarks>
	/// <para>To remove the <c>StandardHierarchyLevel</c>, set <c>StandardHierarchyLevel</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public StandardHierarchyLevel StandardHierarchyLevel
	{
		get
		{
			return (StandardHierarchyLevel)GetChild( LearningDTD.LEARNINGSTANDARDITEM_STANDARDHIERARCHYLEVEL);
		}
		set
		{
			RemoveChild( LearningDTD.LEARNINGSTANDARDITEM_STANDARDHIERARCHYLEVEL);
			if( value != null)
			{
				AddChild( LearningDTD.LEARNINGSTANDARDITEM_STANDARDHIERARCHYLEVEL, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PredecessorItems&gt;</c> element.
	/// </summary>
	/// <value> A PredecessorItems </value>
	/// <remarks>
	/// <para>To remove the <c>PredecessorItems</c>, set <c>PredecessorItems</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public PredecessorItems PredecessorItems
	{
		get
		{
			return (PredecessorItems)GetChild( LearningDTD.LEARNINGSTANDARDITEM_PREDECESSORITEMS);
		}
		set
		{
			RemoveChild( LearningDTD.LEARNINGSTANDARDITEM_PREDECESSORITEMS);
			if( value != null)
			{
				AddChild( LearningDTD.LEARNINGSTANDARDITEM_PREDECESSORITEMS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StatementCodes&gt;</c> element.
	/// </summary>
	/// <value> A StatementCodes </value>
	/// <remarks>
	/// <para>To remove the <c>StatementCodes</c>, set <c>StatementCodes</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public StatementCodes StatementCodes
	{
		get
		{
			return (StatementCodes)GetChild( LearningDTD.LEARNINGSTANDARDITEM_STATEMENTCODES);
		}
		set
		{
			RemoveChild( LearningDTD.LEARNINGSTANDARDITEM_STATEMENTCODES);
			if( value != null)
			{
				AddChild( LearningDTD.LEARNINGSTANDARDITEM_STATEMENTCODES, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Statements&gt;</c> element.</summary>
	/// <param name="Statement">A Statement</param>
	///<remarks>
	/// <para>This form of <c>setStatements</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Statements</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public void SetStatements( Statement Statement ) {
		RemoveChild( LearningDTD.LEARNINGSTANDARDITEM_STATEMENTS);
		AddChild( LearningDTD.LEARNINGSTANDARDITEM_STATEMENTS, new Statements( Statement ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Statements&gt;</c> element.
	/// </summary>
	/// <value> A Statements </value>
	/// <remarks>
	/// <para>To remove the <c>Statements</c>, set <c>Statements</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public Statements Statements
	{
		get
		{
			return (Statements)GetChild( LearningDTD.LEARNINGSTANDARDITEM_STATEMENTS);
		}
		set
		{
			RemoveChild( LearningDTD.LEARNINGSTANDARDITEM_STATEMENTS);
			if( value != null)
			{
				AddChild( LearningDTD.LEARNINGSTANDARDITEM_STATEMENTS, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;YearLevels&gt;</c> element.</summary>
	/// <param name="YearLevel">A YearLevel</param>
	///<remarks>
	/// <para>This form of <c>setYearLevels</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>YearLevels</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public void SetYearLevels( YearLevel YearLevel ) {
		RemoveChild( LearningDTD.LEARNINGSTANDARDITEM_YEARLEVELS);
		AddChild( LearningDTD.LEARNINGSTANDARDITEM_YEARLEVELS, new YearLevels( YearLevel ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;YearLevels&gt;</c> element.
	/// </summary>
	/// <value> A YearLevels </value>
	/// <remarks>
	/// <para>To remove the <c>YearLevels</c>, set <c>YearLevels</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public YearLevels YearLevels
	{
		get
		{
			return (YearLevels)GetChild( LearningDTD.LEARNINGSTANDARDITEM_YEARLEVELS);
		}
		set
		{
			RemoveChild( LearningDTD.LEARNINGSTANDARDITEM_YEARLEVELS);
			if( value != null)
			{
				AddChild( LearningDTD.LEARNINGSTANDARDITEM_YEARLEVELS, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;ACStrandSubjectArea&gt;</c> element.</summary>
	/// <param name="AcStrand">An ACStrand</param>
	///<remarks>
	/// <para>This form of <c>setACStrandSubjectArea</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ACStrandSubjectArea</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public void SetACStrandSubjectArea( AUCodeSetsACStrandType AcStrand ) {
		RemoveChild( LearningDTD.LEARNINGSTANDARDITEM_ACSTRANDSUBJECTAREA);
		AddChild( LearningDTD.LEARNINGSTANDARDITEM_ACSTRANDSUBJECTAREA, new ACStrandSubjectArea( AcStrand ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ACStrandSubjectArea&gt;</c> element.
	/// </summary>
	/// <value> An ACStrandSubjectArea </value>
	/// <remarks>
	/// <para>To remove the <c>ACStrandSubjectArea</c>, set <c>ACStrandSubjectArea</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public ACStrandSubjectArea ACStrandSubjectArea
	{
		get
		{
			return (ACStrandSubjectArea)GetChild( LearningDTD.LEARNINGSTANDARDITEM_ACSTRANDSUBJECTAREA);
		}
		set
		{
			RemoveChild( LearningDTD.LEARNINGSTANDARDITEM_ACSTRANDSUBJECTAREA);
			if( value != null)
			{
				AddChild( LearningDTD.LEARNINGSTANDARDITEM_ACSTRANDSUBJECTAREA, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;StandardIdentifier&gt;</c> element.</summary>
	/// <param name="YearCreated">A YearCreated</param>
	/// <param name="AcStrandSubjectArea">An ACStrandSubjectArea</param>
	/// <param name="StandardNumber">A StandardNumber</param>
	/// <param name="YearLevels">A YearLevels</param>
	/// <param name="Organization">An Organization</param>
	///<remarks>
	/// <para>This form of <c>setStandardIdentifier</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>StandardIdentifier</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public void SetStandardIdentifier( Year YearCreated, ACStrandSubjectArea AcStrandSubjectArea, string StandardNumber, YearLevel YearLevels, string Organization ) {
		RemoveChild( LearningDTD.LEARNINGSTANDARDITEM_STANDARDIDENTIFIER);
		AddChild( LearningDTD.LEARNINGSTANDARDITEM_STANDARDIDENTIFIER, new StandardIdentifier( YearCreated, AcStrandSubjectArea, StandardNumber, YearLevels, Organization ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StandardIdentifier&gt;</c> element.
	/// </summary>
	/// <value> A StandardIdentifier </value>
	/// <remarks>
	/// <para>To remove the <c>StandardIdentifier</c>, set <c>StandardIdentifier</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public StandardIdentifier StandardIdentifier
	{
		get
		{
			return (StandardIdentifier)GetChild( LearningDTD.LEARNINGSTANDARDITEM_STANDARDIDENTIFIER);
		}
		set
		{
			RemoveChild( LearningDTD.LEARNINGSTANDARDITEM_STANDARDIDENTIFIER);
			if( value != null)
			{
				AddChild( LearningDTD.LEARNINGSTANDARDITEM_STANDARDIDENTIFIER, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;LearningStandardDocumentRefId&gt;</c> element.
	/// </summary>
	/// <value> The <c>LearningStandardDocumentRefId</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public string LearningStandardDocumentRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearningDTD.LEARNINGSTANDARDITEM_LEARNINGSTANDARDDOCUMENTREFID ) ;
		}
		set
		{
			SetFieldValue( LearningDTD.LEARNINGSTANDARDITEM_LEARNINGSTANDARDDOCUMENTREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;RelatedLearningStandardItems&gt;</c> element.
	/// </summary>
	/// <value> A RelatedLearningStandardItems </value>
	/// <remarks>
	/// <para>To remove the <c>RelatedLearningStandardItems</c>, set <c>RelatedLearningStandardItems</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public RelatedLearningStandardItems RelatedLearningStandardItems
	{
		get
		{
			return (RelatedLearningStandardItems)GetChild( LearningDTD.LEARNINGSTANDARDITEM_RELATEDLEARNINGSTANDARDITEMS);
		}
		set
		{
			RemoveChild( LearningDTD.LEARNINGSTANDARDITEM_RELATEDLEARNINGSTANDARDITEMS);
			if( value != null)
			{
				AddChild( LearningDTD.LEARNINGSTANDARDITEM_RELATEDLEARNINGSTANDARDITEMS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Level4&gt;</c> element.
	/// </summary>
	/// <value> The <c>Level4</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public string Level4
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearningDTD.LEARNINGSTANDARDITEM_LEVEL4 ) ;
		}
		set
		{
			SetFieldValue( LearningDTD.LEARNINGSTANDARDITEM_LEVEL4, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Level5&gt;</c> element.
	/// </summary>
	/// <value> The <c>Level5</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public string Level5
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LearningDTD.LEARNINGSTANDARDITEM_LEVEL5 ) ;
		}
		set
		{
			SetFieldValue( LearningDTD.LEARNINGSTANDARDITEM_LEVEL5, new SifString( value ), value );
		}
	}

}}
