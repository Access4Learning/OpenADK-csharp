// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.CompilerServices;
using OpenADK.Util;
using OpenADK.Library;
using OpenADK.Library.Impl;
using CommonDTD = OpenADK.Library.au.Common.CommonDTD;
using ReportingDTD = OpenADK.Library.au.Reporting.ReportingDTD;

namespace OpenADK.Library.au.Datamodel
{

// BEGIN FILE... (SIFDTD_Comments_CS.txt)

	/// <summary>Metadata for the Schools Interoperability Framework (SIF)</summary>
	/// <remarks>
	/// <para>
	/// SIFDTD defines global {@linkplain com.edustructures.sifworks.ElementDef} 
	/// constants that describe SIF Data Objects, elements, and attributes across all 
	/// supported versions of the SIF Specification. The ADK uses this metadata 
	/// internally to parse and render SIF Data Objects.  In addition, many of the 
	/// framework APIs require that the programmer pass an ElementDef constant from 
	/// the SIFDTD class to identify an object, element, or attribute.
	/// </para>
	/// <para>
	/// ElementDef constants are named <c>[PARENT_]ENTITY</c>, where 
	/// <c>PARENT</c> is the name of the parent element and 
	/// <c>ENTITY</c> is the name of the element or attribute 
	/// encapsulated by the ElementDef. Some examples of ElementDef constants defined
	/// by this class include:
	/// </para>
	/// <list type="table">
	/// <listheader><term>IElementDef</term><description>Description</description></listheader>
	/// <item><term><c>SIFDTD.STUDENTPERSONAL</c></term><description>Identifies the StudentPersonal data object</description></item>
	/// <item><term><c>SIFDTD.SCHOOLINFO</c></term><description>Identifies the SchoolInfo data object</description></item>
	/// </list>
	/// Many of the Adk's public interfaces require an ElementDef constant to be passed
	/// as a parameter. For example, the first parameter to the <see cref="IZone.SetSubscriber"/>
	/// method is an IElementDef:
	/// <code>myZone.setSubscriber( SIFDTD.BUSINFO, this, ADKFlags.PROV_SUBSCRIBE );</code>
	/// ElementDef also identifies child elements and attributes as demonstrated by the	<c>Query.AddCondition</c> method:
	/// <code>
	/// Query query = new Query( SifDtd.STUDENTPERSONAL );
	/// query.AddCondition( SifDtd.STUDENTPERSONAL_REFID, Condition.EQ, "4A37969803F0D00322AF0EB969038483" );
	/// </code>
	/// <para>
	/// <b>SDO Libraries</b>
	/// </para>
	/// <para>
	/// ElementDef metadata is grouped into "SDO Libraries", which are organized along 
	/// SIF Working Group boundaries. SDO Libraries are loaded into the <c>SifDdt</c> 
	/// class when the Adk is initialized. All or part of the metadata is loaded into depending on the flags passed to the
	/// <see cref="Adk.Initialize(SifVersion, SdoLibraryType)"/> method,
	/// metadata from one or more SDO Libraries may be loaded. For example, the following
	/// call loads metadata for the <c>Student Information Working Group Objects</c>  
	/// and <c>Transportation And Geographic Information Working Group Objects</c> 
	/// (Common Elements and <c>Infrastructure Working Group Objects</c> metadata is always loaded
	/// </para>
	/// <code>Adk.Initialize( SiFVersion.LATEST, SdoLibraryType.Student | SdoLibraryType.Trans )</code>
	/// <para>
	/// If an given SDO Library is not loaded, all of the SIFDTD constants that belong
	/// to that library will be <code>null</code> and cannot be referenced. For example,
	/// given the SDO Libraries loaded above, attempting to reference the 
	/// <code>SIFDTD.LIBRARYPATRONSTATUS</code> object from the Library Automation Working
	/// Group would result in a NullPointerException:
	/// </para>
	/// <code>SifDtd.LIBRARYPATRONSTATUS.Name;</code>
	/// </remarks>
	public class DatamodelDTD : OpenADK.Library.Impl.SdoLibraryImpl
	{
	/** Defines the &lt;Created&gt; SIF Data Object */
	public static IElementDef CREATED = null;
	/** Defines the &lt;Creator&gt; SIF Data Object */
	public static IElementDef CREATOR = null;
	/** Defines the &lt;Creators&gt; SIF Data Object */
	public static IElementDef CREATORS = null;
	/** Defines the &lt;FeeForUse&gt; SIF Data Object */
	public static IElementDef FEEFORUSE = null;
	/** Defines the &lt;FeesForUse&gt; SIF Data Object */
	public static IElementDef FEESFORUSE = null;
	/** Defines the &lt;LifeCycle&gt; SIF Data Object */
	public static IElementDef LIFECYCLE = null;
	/** Defines the &lt;ModificationHistory&gt; SIF Data Object */
	public static IElementDef MODIFICATIONHISTORY = null;
	/** Defines the &lt;Modified&gt; SIF Data Object */
	public static IElementDef MODIFIED = null;
	/** Defines the &lt;RightsElement&gt; SIF Data Object */
	public static IElementDef RIGHTSELEMENT = null;
	/** Defines the &lt;RightsElements&gt; SIF Data Object */
	public static IElementDef RIGHTSELEMENTS = null;
	/** Defines the &lt;SIF_Metadata&gt; SIF Data Object */
	public static IElementDef SIF_METADATA = null;
	/** Defines the &lt;SpanGap&gt; SIF Data Object */
	public static IElementDef SPANGAP = null;
	/** Defines the &lt;SpanGaps&gt; SIF Data Object */
	public static IElementDef SPANGAPS = null;
	/** Defines the &lt;TimeElement&gt; SIF Data Object */
	public static IElementDef TIMEELEMENT = null;
	/** Defines the &lt;TimeElements&gt; SIF Data Object */
	public static IElementDef TIMEELEMENTS = null;


	// Field elements of CREATED (2 fields)
	/** Defines the &lt;DateTime&gt; element as a child of &lt;Created&gt; */
	public static IElementDef CREATED_DATETIME = null;
	/** Defines the &lt;Creators&gt; element as a child of &lt;Created&gt; */
	public static IElementDef CREATED_CREATORS = null;

	// Field elements of CREATOR (2 fields)
	/** Defines the &lt;Name&gt; element as a child of &lt;Creator&gt; */
	public static IElementDef CREATOR_NAME = null;
	/** Defines the &lt;ID&gt; element as a child of &lt;Creator&gt; */
	public static IElementDef CREATOR_ID = null;

	// Field elements of CREATORS (1 fields)
	/** Defines the &lt;Creator&gt; element as a child of &lt;Creators&gt; */
	public static IElementDef CREATORS_CREATOR = null;

	// Field elements of FEEFORUSE (4 fields)
	/** Defines the &lt;UseType&gt; element as a child of &lt;FeeForUse&gt; */
	public static IElementDef FEEFORUSE_USETYPE = null;
	/** Defines the &lt;MeteringType&gt; element as a child of &lt;FeeForUse&gt; */
	public static IElementDef FEEFORUSE_METERINGTYPE = null;
	/** Defines the &lt;MeteringURL&gt; element as a child of &lt;FeeForUse&gt; */
	public static IElementDef FEEFORUSE_METERINGURL = null;
	/** Defines the &lt;PerUseCharge&gt; element as a child of &lt;FeeForUse&gt; */
	public static IElementDef FEEFORUSE_PERUSECHARGE = null;

	// Field elements of FEESFORUSE (1 fields)
	/** Defines the &lt;FeeForUse&gt; element as a child of &lt;FeesForUse&gt; */
	public static IElementDef FEESFORUSE_FEEFORUSE = null;

	// Field elements of LIFECYCLE (3 fields)
	/** Defines the &lt;Created&gt; element as a child of &lt;LifeCycle&gt; */
	public static IElementDef LIFECYCLE_CREATED = null;
	/** Defines the &lt;ModificationHistory&gt; element as a child of &lt;LifeCycle&gt; */
	public static IElementDef LIFECYCLE_MODIFICATIONHISTORY = null;
	/** Defines the &lt;TimeElements&gt; element as a child of &lt;LifeCycle&gt; */
	public static IElementDef LIFECYCLE_TIMEELEMENTS = null;

	// Field elements of MODIFICATIONHISTORY (1 fields)
	/** Defines the &lt;Modified&gt; element as a child of &lt;ModificationHistory&gt; */
	public static IElementDef MODIFICATIONHISTORY_MODIFIED = null;

	// Field elements of MODIFIED (3 fields)
	/** Defines the &lt;By&gt; element as a child of &lt;Modified&gt; */
	public static IElementDef MODIFIED_BY = null;
	/** Defines the &lt;DateTime&gt; element as a child of &lt;Modified&gt; */
	public static IElementDef MODIFIED_DATETIME = null;
	/** Defines the &lt;Description&gt; element as a child of &lt;Modified&gt; */
	public static IElementDef MODIFIED_DESCRIPTION = null;

	// Field elements of RIGHTSELEMENT (4 fields)
	/** Defines the &lt;Cost&gt; element as a child of &lt;RightsElement&gt; */
	public static IElementDef RIGHTSELEMENT_COST = null;
	/** Defines the &lt;FeesForUse&gt; element as a child of &lt;RightsElement&gt; */
	public static IElementDef RIGHTSELEMENT_FEESFORUSE = null;
	/** Defines the &lt;CopyrightStatement&gt; element as a child of &lt;RightsElement&gt; */
	public static IElementDef RIGHTSELEMENT_COPYRIGHTSTATEMENT = null;
	/** Defines the &lt;TermsOfUse&gt; element as a child of &lt;RightsElement&gt; */
	public static IElementDef RIGHTSELEMENT_TERMSOFUSE = null;

	// Field elements of RIGHTSELEMENTS (1 fields)
	/** Defines the &lt;RightsElement&gt; element as a child of &lt;RightsElements&gt; */
	public static IElementDef RIGHTSELEMENTS_RIGHTSELEMENT = null;

	// Field elements of SIF_METADATA (3 fields)
	/** Defines the &lt;TimeElements&gt; element as a child of &lt;SIF_Metadata&gt; */
	public static IElementDef SIF_METADATA_TIMEELEMENTS = null;
	/** Defines the &lt;LifeCycle&gt; element as a child of &lt;SIF_Metadata&gt; */
	public static IElementDef SIF_METADATA_LIFECYCLE = null;
	/** Defines the &lt;RightsElements&gt; element as a child of &lt;SIF_Metadata&gt; */
	public static IElementDef SIF_METADATA_RIGHTSELEMENTS = null;

	// Field elements of SPANGAP (6 fields)
	/** Defines the &lt;Type&gt; element as a child of &lt;SpanGap&gt; */
	public static IElementDef SPANGAP_TYPE = null;
	/** Defines the &lt;Code&gt; element as a child of &lt;SpanGap&gt; */
	public static IElementDef SPANGAP_CODE = null;
	/** Defines the &lt;Name&gt; element as a child of &lt;SpanGap&gt; */
	public static IElementDef SPANGAP_NAME = null;
	/** Defines the &lt;Value&gt; element as a child of &lt;SpanGap&gt; */
	public static IElementDef SPANGAP_VALUE = null;
	/** Defines the &lt;StartDateTime&gt; element as a child of &lt;SpanGap&gt; */
	public static IElementDef SPANGAP_STARTDATETIME = null;
	/** Defines the &lt;EndDateTime&gt; element as a child of &lt;SpanGap&gt; */
	public static IElementDef SPANGAP_ENDDATETIME = null;

	// Field elements of SPANGAPS (1 fields)
	/** Defines the &lt;SpanGap&gt; element as a child of &lt;SpanGaps&gt; */
	public static IElementDef SPANGAPS_SPANGAP = null;

	// Field elements of TIMEELEMENT (8 fields)
	/** Defines the &lt;Type&gt; element as a child of &lt;TimeElement&gt; */
	public static IElementDef TIMEELEMENT_TYPE = null;
	/** Defines the &lt;Code&gt; element as a child of &lt;TimeElement&gt; */
	public static IElementDef TIMEELEMENT_CODE = null;
	/** Defines the &lt;Name&gt; element as a child of &lt;TimeElement&gt; */
	public static IElementDef TIMEELEMENT_NAME = null;
	/** Defines the &lt;Value&gt; element as a child of &lt;TimeElement&gt; */
	public static IElementDef TIMEELEMENT_VALUE = null;
	/** Defines the &lt;StartDateTime&gt; element as a child of &lt;TimeElement&gt; */
	public static IElementDef TIMEELEMENT_STARTDATETIME = null;
	/** Defines the &lt;EndDateTime&gt; element as a child of &lt;TimeElement&gt; */
	public static IElementDef TIMEELEMENT_ENDDATETIME = null;
	/** Defines the &lt;SpanGaps&gt; element as a child of &lt;TimeElement&gt; */
	public static IElementDef TIMEELEMENT_SPANGAPS = null;
	/** Defines the &lt;IsCurrent&gt; element as a child of &lt;TimeElement&gt; */
	public static IElementDef TIMEELEMENT_ISCURRENT = null;

	// Field elements of TIMEELEMENTS (1 fields)
	/** Defines the &lt;TimeElement&gt; element as a child of &lt;TimeElements&gt; */
	public static IElementDef TIMEELEMENTS_TIMEELEMENT = null;

	public override void Load()
	{
		//  Objects defined by this SDO Library...

		CREATED = new ElementDefImpl( null, "Created", null, 0, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );
		CREATOR = new ElementDefImpl( null, "Creator", null, 0, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );
		CREATORS = new ElementDefImpl( null, "Creators", null, 0, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );
		FEEFORUSE = new ElementDefImpl( null, "FeeForUse", null, 0, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );
		FEESFORUSE = new ElementDefImpl( null, "FeesForUse", null, 0, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );
		LIFECYCLE = new ElementDefImpl( null, "LifeCycle", null, 0, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );
		MODIFICATIONHISTORY = new ElementDefImpl( null, "ModificationHistory", null, 0, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );
		MODIFIED = new ElementDefImpl( null, "Modified", null, 0, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );
		RIGHTSELEMENT = new ElementDefImpl( null, "RightsElement", null, 0, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );
		RIGHTSELEMENTS = new ElementDefImpl( null, "RightsElements", null, 0, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );
		SIF_METADATA = new ElementDefImpl( null, "SIF_Metadata", null, 0, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );
		SPANGAP = new ElementDefImpl( null, "SpanGap", null, 0, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );
		SPANGAPS = new ElementDefImpl( null, "SpanGaps", null, 0, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );
		TIMEELEMENT = new ElementDefImpl( null, "TimeElement", null, 0, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );
		TIMEELEMENTS = new ElementDefImpl( null, "TimeElements", null, 0, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );


		// <Created> fields (2 entries)
		DatamodelDTD.CREATED_DATETIME = new ElementDefImpl( CREATED, "DateTime", null, 1, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.DATETIME );
		DatamodelDTD.CREATED_CREATORS = new ElementDefImpl( CREATED, "Creators", null, 2, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );

		// <Creator> fields (2 entries)
		DatamodelDTD.CREATOR_NAME = new ElementDefImpl( CREATOR, "Name", null, 1, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.STRING );
		DatamodelDTD.CREATOR_ID = new ElementDefImpl( CREATOR, "ID", null, 2, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.STRING );

		// <Creators> fields (1 entries)
		DatamodelDTD.CREATORS_CREATOR = new ElementDefImpl( CREATORS, "Creator", null, 1, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_REPEATABLE), SifVersion.SIF23, SifVersion.SIF26 );

		// <FeeForUse> fields (4 entries)
		DatamodelDTD.FEEFORUSE_USETYPE = new ElementDefImpl( FEEFORUSE, "UseType", null, 1, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.STRING );
		DatamodelDTD.FEEFORUSE_METERINGTYPE = new ElementDefImpl( FEEFORUSE, "MeteringType", null, 2, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.STRING );
		DatamodelDTD.FEEFORUSE_METERINGURL = new ElementDefImpl( FEEFORUSE, "MeteringURL", null, 3, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.STRING );
		DatamodelDTD.FEEFORUSE_PERUSECHARGE = new ElementDefAlias( FEEFORUSE, "PerUseCharge", null, "MonetaryAmount", 4, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );

		// <FeesForUse> fields (1 entries)
		DatamodelDTD.FEESFORUSE_FEEFORUSE = new ElementDefImpl( FEESFORUSE, "FeeForUse", null, 1, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_REPEATABLE), SifVersion.SIF23, SifVersion.SIF26 );

		// <LifeCycle> fields (3 entries)
		DatamodelDTD.LIFECYCLE_CREATED = new ElementDefImpl( LIFECYCLE, "Created", null, 1, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );
		DatamodelDTD.LIFECYCLE_MODIFICATIONHISTORY = new ElementDefImpl( LIFECYCLE, "ModificationHistory", null, 2, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );
		DatamodelDTD.LIFECYCLE_TIMEELEMENTS = new ElementDefImpl( LIFECYCLE, "TimeElements", null, 3, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );

		// <ModificationHistory> fields (1 entries)
		DatamodelDTD.MODIFICATIONHISTORY_MODIFIED = new ElementDefImpl( MODIFICATIONHISTORY, "Modified", null, 1, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_REPEATABLE), SifVersion.SIF23, SifVersion.SIF26 );

		// <Modified> fields (3 entries)
		DatamodelDTD.MODIFIED_BY = new ElementDefImpl( MODIFIED, "By", null, 1, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.STRING );
		DatamodelDTD.MODIFIED_DATETIME = new ElementDefImpl( MODIFIED, "DateTime", null, 2, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.DATETIME );
		DatamodelDTD.MODIFIED_DESCRIPTION = new ElementDefImpl( MODIFIED, "Description", null, 3, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.STRING );

		// <RightsElement> fields (4 entries)
		DatamodelDTD.RIGHTSELEMENT_COST = new ElementDefImpl( RIGHTSELEMENT, "Cost", null, 1, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.BOOLEAN );
		DatamodelDTD.RIGHTSELEMENT_FEESFORUSE = new ElementDefImpl( RIGHTSELEMENT, "FeesForUse", null, 2, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_REPEATABLE), SifVersion.SIF23, SifVersion.SIF26 );
		DatamodelDTD.RIGHTSELEMENT_COPYRIGHTSTATEMENT = new ElementDefImpl( RIGHTSELEMENT, "CopyrightStatement", null, 3, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.STRING );
		DatamodelDTD.RIGHTSELEMENT_TERMSOFUSE = new ElementDefImpl( RIGHTSELEMENT, "TermsOfUse", null, 4, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.STRING );

		// <RightsElements> fields (1 entries)
		DatamodelDTD.RIGHTSELEMENTS_RIGHTSELEMENT = new ElementDefImpl( RIGHTSELEMENTS, "RightsElement", null, 1, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_REPEATABLE), SifVersion.SIF23, SifVersion.SIF26 );

		// <SIF_Metadata> fields (3 entries)
		DatamodelDTD.SIF_METADATA_TIMEELEMENTS = new ElementDefImpl( SIF_METADATA, "TimeElements", null, 1, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );
		DatamodelDTD.SIF_METADATA_LIFECYCLE = new ElementDefImpl( SIF_METADATA, "LifeCycle", null, 2, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );
		DatamodelDTD.SIF_METADATA_RIGHTSELEMENTS = new ElementDefImpl( SIF_METADATA, "RightsElements", null, 3, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );

		// <SpanGap> fields (6 entries)
		DatamodelDTD.SPANGAP_TYPE = new ElementDefImpl( SPANGAP, "Type", null, 1, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.STRING );
		DatamodelDTD.SPANGAP_CODE = new ElementDefImpl( SPANGAP, "Code", null, 2, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.STRING );
		DatamodelDTD.SPANGAP_NAME = new ElementDefImpl( SPANGAP, "Name", null, 3, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.STRING );
		DatamodelDTD.SPANGAP_VALUE = new ElementDefImpl( SPANGAP, "Value", null, 4, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.STRING );
		DatamodelDTD.SPANGAP_STARTDATETIME = new ElementDefImpl( SPANGAP, "StartDateTime", null, 5, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.DATETIME );
		DatamodelDTD.SPANGAP_ENDDATETIME = new ElementDefImpl( SPANGAP, "EndDateTime", null, 6, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.DATETIME );

		// <SpanGaps> fields (1 entries)
		DatamodelDTD.SPANGAPS_SPANGAP = new ElementDefImpl( SPANGAPS, "SpanGap", null, 1, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_REPEATABLE), SifVersion.SIF23, SifVersion.SIF26 );

		// <TimeElement> fields (8 entries)
		DatamodelDTD.TIMEELEMENT_TYPE = new ElementDefImpl( TIMEELEMENT, "Type", null, 1, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.STRING );
		DatamodelDTD.TIMEELEMENT_CODE = new ElementDefImpl( TIMEELEMENT, "Code", null, 2, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.STRING );
		DatamodelDTD.TIMEELEMENT_NAME = new ElementDefImpl( TIMEELEMENT, "Name", null, 3, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.STRING );
		DatamodelDTD.TIMEELEMENT_VALUE = new ElementDefImpl( TIMEELEMENT, "Value", null, 4, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.STRING );
		DatamodelDTD.TIMEELEMENT_STARTDATETIME = new ElementDefImpl( TIMEELEMENT, "StartDateTime", null, 5, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.DATETIME );
		DatamodelDTD.TIMEELEMENT_ENDDATETIME = new ElementDefImpl( TIMEELEMENT, "EndDateTime", null, 6, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.DATETIME );
		DatamodelDTD.TIMEELEMENT_SPANGAPS = new ElementDefImpl( TIMEELEMENT, "SpanGaps", null, 7, SifDtd.DATAMODEL, "au", 0, SifVersion.SIF23, SifVersion.SIF26 );
		DatamodelDTD.TIMEELEMENT_ISCURRENT = new ElementDefImpl( TIMEELEMENT, "IsCurrent", null, 8, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_FIELD), SifVersion.SIF23, SifVersion.SIF26, SifTypeConverters.BOOLEAN );

		// <TimeElements> fields (1 entries)
		DatamodelDTD.TIMEELEMENTS_TIMEELEMENT = new ElementDefImpl( TIMEELEMENTS, "TimeElement", null, 1, SifDtd.DATAMODEL, "au", (ElementDefImpl.FD_REPEATABLE), SifVersion.SIF23, SifVersion.SIF26 );
	}

	#region Update SifDtd
	public override void AddElementMappings( IDictionary<String, IElementDef> dictionary )
	{
		dictionary[ "LifeCycle" ] = LIFECYCLE;
		dictionary["LifeCycle_Created"] = DatamodelDTD.LIFECYCLE_CREATED ;
		dictionary["LifeCycle_ModificationHistory"] = DatamodelDTD.LIFECYCLE_MODIFICATIONHISTORY ;
		dictionary["LifeCycle_TimeElements"] = DatamodelDTD.LIFECYCLE_TIMEELEMENTS ;
		dictionary[ "Creators" ] = CREATORS;
		dictionary["Creators_Creator"] = DatamodelDTD.CREATORS_CREATOR ;
		dictionary[ "FeesForUse" ] = FEESFORUSE;
		dictionary["FeesForUse_FeeForUse"] = DatamodelDTD.FEESFORUSE_FEEFORUSE ;
		dictionary[ "TimeElement" ] = TIMEELEMENT;
		dictionary["TimeElement_Code"] = DatamodelDTD.TIMEELEMENT_CODE ;
		dictionary["TimeElement_EndDateTime"] = DatamodelDTD.TIMEELEMENT_ENDDATETIME ;
		dictionary["TimeElement_IsCurrent"] = DatamodelDTD.TIMEELEMENT_ISCURRENT ;
		dictionary["TimeElement_Name"] = DatamodelDTD.TIMEELEMENT_NAME ;
		dictionary["TimeElement_SpanGaps"] = DatamodelDTD.TIMEELEMENT_SPANGAPS ;
		dictionary["TimeElement_StartDateTime"] = DatamodelDTD.TIMEELEMENT_STARTDATETIME ;
		dictionary["TimeElement_Type"] = DatamodelDTD.TIMEELEMENT_TYPE ;
		dictionary["TimeElement_Value"] = DatamodelDTD.TIMEELEMENT_VALUE ;
		dictionary[ "Created" ] = CREATED;
		dictionary["Created_Creators"] = DatamodelDTD.CREATED_CREATORS ;
		dictionary["Created_DateTime"] = DatamodelDTD.CREATED_DATETIME ;
		dictionary[ "RightsElements" ] = RIGHTSELEMENTS;
		dictionary["RightsElements_RightsElement"] = DatamodelDTD.RIGHTSELEMENTS_RIGHTSELEMENT ;
		dictionary[ "RightsElement" ] = RIGHTSELEMENT;
		dictionary["RightsElement_CopyrightStatement"] = DatamodelDTD.RIGHTSELEMENT_COPYRIGHTSTATEMENT ;
		dictionary["RightsElement_Cost"] = DatamodelDTD.RIGHTSELEMENT_COST ;
		dictionary["RightsElement_FeesForUse"] = DatamodelDTD.RIGHTSELEMENT_FEESFORUSE ;
		dictionary["RightsElement_TermsOfUse"] = DatamodelDTD.RIGHTSELEMENT_TERMSOFUSE ;
		dictionary[ "SIF_Metadata" ] = SIF_METADATA;
		dictionary["SIF_Metadata_LifeCycle"] = DatamodelDTD.SIF_METADATA_LIFECYCLE ;
		dictionary["SIF_Metadata_RightsElements"] = DatamodelDTD.SIF_METADATA_RIGHTSELEMENTS ;
		dictionary["SIF_Metadata_TimeElements"] = DatamodelDTD.SIF_METADATA_TIMEELEMENTS ;
		dictionary[ "Modified" ] = MODIFIED;
		dictionary["Modified_By"] = DatamodelDTD.MODIFIED_BY ;
		dictionary["Modified_DateTime"] = DatamodelDTD.MODIFIED_DATETIME ;
		dictionary["Modified_Description"] = DatamodelDTD.MODIFIED_DESCRIPTION ;
		dictionary[ "TimeElements" ] = TIMEELEMENTS;
		dictionary["TimeElements_TimeElement"] = DatamodelDTD.TIMEELEMENTS_TIMEELEMENT ;
		dictionary[ "FeeForUse" ] = FEEFORUSE;
		dictionary["FeeForUse_MeteringType"] = DatamodelDTD.FEEFORUSE_METERINGTYPE ;
		dictionary["FeeForUse_MeteringURL"] = DatamodelDTD.FEEFORUSE_METERINGURL ;
		dictionary["FeeForUse_PerUseCharge"] = DatamodelDTD.FEEFORUSE_PERUSECHARGE ;
		dictionary["FeeForUse_UseType"] = DatamodelDTD.FEEFORUSE_USETYPE ;
		dictionary[ "SpanGaps" ] = SPANGAPS;
		dictionary["SpanGaps_SpanGap"] = DatamodelDTD.SPANGAPS_SPANGAP ;
		dictionary[ "SpanGap" ] = SPANGAP;
		dictionary["SpanGap_Code"] = DatamodelDTD.SPANGAP_CODE ;
		dictionary["SpanGap_EndDateTime"] = DatamodelDTD.SPANGAP_ENDDATETIME ;
		dictionary["SpanGap_Name"] = DatamodelDTD.SPANGAP_NAME ;
		dictionary["SpanGap_StartDateTime"] = DatamodelDTD.SPANGAP_STARTDATETIME ;
		dictionary["SpanGap_Type"] = DatamodelDTD.SPANGAP_TYPE ;
		dictionary["SpanGap_Value"] = DatamodelDTD.SPANGAP_VALUE ;
		dictionary[ "Creator" ] = CREATOR;
		dictionary["Creator_ID"] = DatamodelDTD.CREATOR_ID ;
		dictionary["Creator_Name"] = DatamodelDTD.CREATOR_NAME ;
		dictionary[ "ModificationHistory" ] = MODIFICATIONHISTORY;
		dictionary["ModificationHistory_Modified"] = DatamodelDTD.MODIFICATIONHISTORY_MODIFIED ;
	}
	#endregion
}}
