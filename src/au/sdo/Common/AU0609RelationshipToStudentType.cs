// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using OpenADK.Library;

namespace OpenADK.Library.au.Common
{
	///<summary>
	/// Defines the set of values that can be specified whenever an AU0609RelationshipToStudentType
	/// is used as a parameter to a method or constructor. 
	///</summary>
	/// <remarks>
	/// Alternatively, the static
	///  <see cref="Wrap"/> method can be called to encapsulate any string value in
	///  an AU0609RelationshipToStudentType object.
	/// <para>Author: Generated by adkgen</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	[Serializable]
	public class AU0609RelationshipToStudentType : SifEnum
	{
	/// <summary>Nephew/Niece ("13")</summary>
	public static readonly AU0609RelationshipToStudentType C13_NEPHEW_NIECE = new AU0609RelationshipToStudentType("13");

	/// <summary>Not provided ("99")</summary>
	public static readonly AU0609RelationshipToStudentType C99_NOT_PROVIDED = new AU0609RelationshipToStudentType("99");

	/// <summary>Parent ("01")</summary>
	public static readonly AU0609RelationshipToStudentType C01_PARENT = new AU0609RelationshipToStudentType("01");

	/// <summary>Relative ("06")</summary>
	public static readonly AU0609RelationshipToStudentType C06_RELATIVE = new AU0609RelationshipToStudentType("06");

	/// <summary>Sibling ("10")</summary>
	public static readonly AU0609RelationshipToStudentType C10_SIBLING = new AU0609RelationshipToStudentType("10");

	/// <summary>Foster Parent ("04")</summary>
	public static readonly AU0609RelationshipToStudentType C04_FOSTER_PARENT = new AU0609RelationshipToStudentType("04");

	/// <summary>Host Family ("05")</summary>
	public static readonly AU0609RelationshipToStudentType C05_HOST_FAMILY = new AU0609RelationshipToStudentType("05");

	/// <summary>Adoptive Parent ("03")</summary>
	public static readonly AU0609RelationshipToStudentType C03_ADOPTIVE_PARENT = new AU0609RelationshipToStudentType("03");

	/// <summary>Aunt/Uncle ("12")</summary>
	public static readonly AU0609RelationshipToStudentType C12_AUNT_UNCLE = new AU0609RelationshipToStudentType("12");

	/// <summary>Friend ("07")</summary>
	public static readonly AU0609RelationshipToStudentType C07_FRIEND = new AU0609RelationshipToStudentType("07");

	/// <summary>Other ("09")</summary>
	public static readonly AU0609RelationshipToStudentType C09_OTHER = new AU0609RelationshipToStudentType("09");

	/// <summary>Step-Parent ("02")</summary>
	public static readonly AU0609RelationshipToStudentType C02_STEPPARENT = new AU0609RelationshipToStudentType("02");

	/// <summary>Self ("08")</summary>
	public static readonly AU0609RelationshipToStudentType C08_SELF = new AU0609RelationshipToStudentType("08");

	/// <summary>Grandparent ("11")</summary>
	public static readonly AU0609RelationshipToStudentType C11_GRANDPARENT = new AU0609RelationshipToStudentType("11");

	///<summary>Wrap an arbitrary string value in an AU0609RelationshipToStudentType object.</summary>
	///<param name="wrappedValue">The element/attribute value.</param>
	///<remarks>This method does not verify
	///that the value is valid according to the SIF Specification</remarks>
	public static AU0609RelationshipToStudentType Wrap( String wrappedValue ) {
		return new AU0609RelationshipToStudentType( wrappedValue );
	}

	private AU0609RelationshipToStudentType( string enumDefValue ) : base( enumDefValue ) {}
	}
}
