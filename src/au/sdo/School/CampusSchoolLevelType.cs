// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using OpenADK.Library;

namespace OpenADK.Library.au.School
{
	///<summary>
	/// Defines the set of values that can be specified whenever a CampusSchoolLevelType
	/// is used as a parameter to a method or constructor. 
	///</summary>
	/// <remarks>
	/// Alternatively, the static
	///  <see cref="Wrap"/> method can be called to encapsulate any string value in
	///  a CampusSchoolLevelType object.
	/// <para>Author: Generated by adkgen</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	[Serializable]
	public class CampusSchoolLevelType : SifEnum
	{
	/// <summary>Junior Primary ("JunPri")</summary>
	public static readonly CampusSchoolLevelType JunPri_JUNIOR_PRIMARY = new CampusSchoolLevelType("JunPri");

	/// <summary>Maternal Child Health Centre ("MCH")</summary>
	public static readonly CampusSchoolLevelType MCH_MATERNAL_CHILD_HEALTH = new CampusSchoolLevelType("MCH");

	/// <summary>Senior Secondary School ("Senior")</summary>
	public static readonly CampusSchoolLevelType Senior_SENIOR_SECONDARY = new CampusSchoolLevelType("Senior");

	/// <summary>Early Childhood ("EarlyCh")</summary>
	public static readonly CampusSchoolLevelType EarlyCh_EARLY_CHILDHOOD = new CampusSchoolLevelType("EarlyCh");

	/// <summary>Community College ("Commty")</summary>
	public static readonly CampusSchoolLevelType Commty_COMMUNITY_COLLEGE = new CampusSchoolLevelType("Commty");

	/// <summary>Primary ("Prim")</summary>
	public static readonly CampusSchoolLevelType Prim_PRIMARY = new CampusSchoolLevelType("Prim");

	/// <summary>Secondary ("Sec")</summary>
	public static readonly CampusSchoolLevelType Sec_SECONDARY = new CampusSchoolLevelType("Sec");

	/// <summary>Preschool/Kindergarten ("Kind")</summary>
	public static readonly CampusSchoolLevelType Kind_PRESCHOOL_KINDERGARTEN = new CampusSchoolLevelType("Kind");

	/// <summary>Language ("Lang")</summary>
	public static readonly CampusSchoolLevelType Lang_LANGUAGE = new CampusSchoolLevelType("Lang");

	/// <summary>Camp ("Camp")</summary>
	public static readonly CampusSchoolLevelType CAMP = new CampusSchoolLevelType("Camp");

	/// <summary>Specific Purpose ("Specif")</summary>
	public static readonly CampusSchoolLevelType Specif_SPECIFIC_PURPOSE = new CampusSchoolLevelType("Specif");

	/// <summary>Kindergarten only ("Kgarten")</summary>
	public static readonly CampusSchoolLevelType Kgarten_KINDERGARTEN = new CampusSchoolLevelType("Kgarten");

	/// <summary>Primary/Seconday Combined ("Pri/Sec")</summary>
	public static readonly CampusSchoolLevelType Pri_Sec_PRIMARY_SECONDAY = new CampusSchoolLevelType("Pri/Sec");

	/// <summary>PreSchool only ("PreSch")</summary>
	public static readonly CampusSchoolLevelType PreSch_PRESCHOOL_ONLY = new CampusSchoolLevelType("PreSch");

	/// <summary>Special ("Special")</summary>
	public static readonly CampusSchoolLevelType SPECIAL = new CampusSchoolLevelType("Special");

	/// <summary>Middle School ("Middle")</summary>
	public static readonly CampusSchoolLevelType Middle_MIDDLE_SCHOOL = new CampusSchoolLevelType("Middle");

	/// <summary>Other ("Other")</summary>
	public static readonly CampusSchoolLevelType OTHER = new CampusSchoolLevelType("Other");

	/// <summary>Unknown ("Unknown")</summary>
	public static readonly CampusSchoolLevelType UNKNOWN = new CampusSchoolLevelType("Unknown");

	/// <summary>SupportCentre ("Supp")</summary>
	public static readonly CampusSchoolLevelType Supp_SUPPORTCENTRE = new CampusSchoolLevelType("Supp");

	///<summary>Wrap an arbitrary string value in a CampusSchoolLevelType object.</summary>
	///<param name="wrappedValue">The element/attribute value.</param>
	///<remarks>This method does not verify
	///that the value is valid according to the SIF Specification</remarks>
	public static CampusSchoolLevelType Wrap( String wrappedValue ) {
		return new CampusSchoolLevelType( wrappedValue );
	}

	private CampusSchoolLevelType( string enumDefValue ) : base( enumDefValue ) {}
	}
}
