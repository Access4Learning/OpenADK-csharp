// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;

namespace OpenADK.Library.Infra{

/// <summary>A SIF_SupportedProtocols</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 1.1</para>
/// </remarks>
[Serializable]
public class SIF_SupportedProtocols : SifKeyedList<SIF_Protocol>
{
	/// <summary>
	/// Creates an instance of a SIF_SupportedProtocols
	/// </summary>
	public SIF_SupportedProtocols() : base ( InfraDTD.SIF_SUPPORTEDPROTOCOLS ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="sifProtocol">A SIF_Protocol</param>
	///
	public SIF_SupportedProtocols( SIF_Protocol sifProtocol ) : base( InfraDTD.SIF_SUPPORTEDPROTOCOLS )
	{
		this.SafeAddChild( InfraDTD.SIF_SUPPORTEDPROTOCOLS_SIF_PROTOCOL, sifProtocol );
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected SIF_SupportedProtocols( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	///<summary>Adds the value of the <c>&lt;SIF_Protocol&gt;</c> element.</summary>
	/// <param name="Type">Identifies the type being used (e.g. "HTTP", "HTTPS", "MSMQ", etc.)</param>
	/// <param name="Secure">Indicates if the protocol provides a secure channel</param>
	///<remarks>
	/// <para>This form of <c>setSIF_Protocol</c> is provided as a convenience method
	/// that is functionally equivalent to the method <c>AddSIF_Protocol</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void AddSIF_Protocol( string Type, YesNo Secure ) {
		AddChild( InfraDTD.SIF_SUPPORTEDPROTOCOLS_SIF_PROTOCOL, new SIF_Protocol( Type, Secure ) );
	}

}}
