// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using OpenADK.Library;

namespace OpenADK.Library.Infra
{
	///<summary>
	/// Defines the set of values that can be specified whenever a PasswordAlgorithm
	/// is used as a parameter to a method or constructor. 
	///</summary>
	/// <remarks>
	/// Alternatively, the static
	///  <see cref="Wrap"/> method can be called to encapsulate any string value in
	///  a PasswordAlgorithm object.
	/// <para>Author: Generated by adkgen</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	[Serializable]
	public class PasswordAlgorithm : SifEnum
	{
	/// <summary>DES ("DES")</summary>
	public static readonly PasswordAlgorithm DES = new PasswordAlgorithm("DES");

	/// <summary>AES ("AES")</summary>
	public static readonly PasswordAlgorithm AES = new PasswordAlgorithm("AES");

	/// <summary>RSA ("RSA")</summary>
	public static readonly PasswordAlgorithm RSA = new PasswordAlgorithm("RSA");

	/// <summary>TripleDES ("TripleDES")</summary>
	public static readonly PasswordAlgorithm TRIPLEDES = new PasswordAlgorithm("TripleDES");

	/// <summary>SHA1 ("SHA1")</summary>
	public static readonly PasswordAlgorithm SHA1 = new PasswordAlgorithm("SHA1");

	/// <summary>MD5 ("MD5")</summary>
	public static readonly PasswordAlgorithm MD5 = new PasswordAlgorithm("MD5");

	/// <summary>RC2 ("RC2")</summary>
	public static readonly PasswordAlgorithm RC2 = new PasswordAlgorithm("RC2");

	/// <summary>base64 ("base64")</summary>
	public static readonly PasswordAlgorithm BASE64 = new PasswordAlgorithm("base64");

	///<summary>Wrap an arbitrary string value in a PasswordAlgorithm object.</summary>
	///<param name="wrappedValue">The element/attribute value.</param>
	///<remarks>This method does not verify
	///that the value is valid according to the SIF Specification</remarks>
	public static PasswordAlgorithm Wrap( String wrappedValue ) {
		return new PasswordAlgorithm( wrappedValue );
	}

	private PasswordAlgorithm( string enumDefValue ) : base( enumDefValue ) {}
	}
}
