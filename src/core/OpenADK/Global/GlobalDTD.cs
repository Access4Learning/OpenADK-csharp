// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.CompilerServices;
using OpenADK.Util;
using OpenADK.Library;
using OpenADK.Library.Impl;

namespace OpenADK.Library.Global
{

// BEGIN FILE... (SIFDTD_Comments_CS.txt)

	/// <summary>Metadata for the Schools Interoperability Framework (SIF)</summary>
	/// <remarks>
	/// <para>
	/// SIFDTD defines global {@linkplain com.edustructures.sifworks.ElementDef} 
	/// constants that describe SIF Data Objects, elements, and attributes across all 
	/// supported versions of the SIF Specification. The ADK uses this metadata 
	/// internally to parse and render SIF Data Objects.  In addition, many of the 
	/// framework APIs require that the programmer pass an ElementDef constant from 
	/// the SIFDTD class to identify an object, element, or attribute.
	/// </para>
	/// <para>
	/// ElementDef constants are named <c>[PARENT_]ENTITY</c>, where 
	/// <c>PARENT</c> is the name of the parent element and 
	/// <c>ENTITY</c> is the name of the element or attribute 
	/// encapsulated by the ElementDef. Some examples of ElementDef constants defined
	/// by this class include:
	/// </para>
	/// <list type="table">
	/// <listheader><term>IElementDef</term><description>Description</description></listheader>
	/// <item><term><c>SIFDTD.STUDENTPERSONAL</c></term><description>Identifies the StudentPersonal data object</description></item>
	/// <item><term><c>SIFDTD.SCHOOLINFO</c></term><description>Identifies the SchoolInfo data object</description></item>
	/// </list>
	/// Many of the Adk's public interfaces require an ElementDef constant to be passed
	/// as a parameter. For example, the first parameter to the <see cref="IZone.SetSubscriber"/>
	/// method is an IElementDef:
	/// <code>myZone.setSubscriber( SIFDTD.BUSINFO, this, ADKFlags.PROV_SUBSCRIBE );</code>
	/// ElementDef also identifies child elements and attributes as demonstrated by the	<c>Query.AddCondition</c> method:
	/// <code>
	/// Query query = new Query( SifDtd.STUDENTPERSONAL );
	/// query.AddCondition( SifDtd.STUDENTPERSONAL_REFID, Condition.EQ, "4A37969803F0D00322AF0EB969038483" );
	/// </code>
	/// <para>
	/// <b>SDO Libraries</b>
	/// </para>
	/// <para>
	/// ElementDef metadata is grouped into "SDO Libraries", which are organized along 
	/// SIF Working Group boundaries. SDO Libraries are loaded into the <c>SifDdt</c> 
	/// class when the Adk is initialized. All or part of the metadata is loaded into depending on the flags passed to the
	/// <see cref="Adk.Initialize(SifVersion, SdoLibraryType)"/> method,
	/// metadata from one or more SDO Libraries may be loaded. For example, the following
	/// call loads metadata for the <c>Student Information Working Group Objects</c>  
	/// and <c>Transportation And Geographic Information Working Group Objects</c> 
	/// (Common Elements and <c>Infrastructure Working Group Objects</c> metadata is always loaded
	/// </para>
	/// <code>Adk.Initialize( SiFVersion.LATEST, SdoLibraryType.Student | SdoLibraryType.Trans )</code>
	/// <para>
	/// If an given SDO Library is not loaded, all of the SIFDTD constants that belong
	/// to that library will be <code>null</code> and cannot be referenced. For example,
	/// given the SDO Libraries loaded above, attempting to reference the 
	/// <code>SIFDTD.LIBRARYPATRONSTATUS</code> object from the Library Automation Working
	/// Group would result in a NullPointerException:
	/// </para>
	/// <code>SifDtd.LIBRARYPATRONSTATUS.Name;</code>
	/// </remarks>
	public class GlobalDTD : OpenADK.Library.Impl.SdoLibraryImpl
	{
	/** Defines the &lt;MediaType&gt; SIF Data Object */
	public static IElementDef MEDIATYPE = null;
	/** Defines the &lt;MediaTypes&gt; SIF Data Object */
	public static IElementDef MEDIATYPES = null;
	/** Defines the &lt;MonetaryAmount&gt; SIF Data Object */
	public static IElementDef MONETARYAMOUNT = null;
	/** Defines the &lt;SIF_ExtendedElement&gt; SIF Data Object */
	public static IElementDef SIF_EXTENDEDELEMENT = null;
	/** Defines the &lt;SIF_ExtendedElements&gt; SIF Data Object */
	public static IElementDef SIF_EXTENDEDELEMENTS = null;
	/** Defines the &lt;SIF_RefId&gt; SIF Data Object */
	public static IElementDef SIF_REFID = null;
	/** Defines the &lt;XMLData&gt; SIF Data Object */
	public static IElementDef XMLDATA = null;


	// Field elements of MEDIATYPE (0 fields)

	// Field elements of MEDIATYPES (1 fields)
	/** Defines the &lt;MediaType&gt; element as a child of &lt;MediaTypes&gt; */
	public static IElementDef MEDIATYPES_MEDIATYPE = null;

	// Field elements of MONETARYAMOUNT (1 fields)
	/** Defines the Currency attribute as a child of &lt;MonetaryAmount&gt; */
	public static IElementDef MONETARYAMOUNT_CURRENCY = null;

	// Field elements of SIF_EXTENDEDELEMENT (3 fields)
	/** Defines the Name attribute as a child of &lt;SIF_ExtendedElement&gt; */
	public static IElementDef SIF_EXTENDEDELEMENT_NAME = null;
	/** Defines the XsiType attribute as a child of &lt;SIF_ExtendedElement&gt; */
	public static IElementDef SIF_EXTENDEDELEMENT_XSITYPE = null;
	/** Defines the SIF_Action attribute as a child of &lt;SIF_ExtendedElement&gt; */
	public static IElementDef SIF_EXTENDEDELEMENT_SIF_ACTION = null;

	// Field elements of SIF_EXTENDEDELEMENTS (1 fields)
	/** Defines the &lt;SIF_ExtendedElement&gt; element as a child of &lt;SIF_ExtendedElements&gt; */
	public static IElementDef SIF_EXTENDEDELEMENTS_SIF_EXTENDEDELEMENT = null;

	// Field elements of SIF_REFID (1 fields)
	/** Defines the SIF_RefObject attribute as a child of &lt;SIF_RefId&gt; */
	public static IElementDef SIF_REFID_SIF_REFOBJECT = null;

	// Field elements of XMLDATA (1 fields)
	/** Defines the Description attribute as a child of &lt;XMLData&gt; */
	public static IElementDef XMLDATA_DESCRIPTION = null;

	public override void Load()
	{
		//  Objects defined by this SDO Library...

		MEDIATYPE = new ElementDefImpl( null, "MediaType", null, 0, SifDtd.GLOBAL, null, 0, SifVersion.SIF11, SifVersion.SIF26, SifTypeConverters.STRING );
		MEDIATYPES = new ElementDefImpl( null, "MediaTypes", null, 0, SifDtd.GLOBAL, null, 0, SifVersion.SIF11, SifVersion.SIF26 );
		MONETARYAMOUNT = new ElementDefImpl( null, "MonetaryAmount", null, 0, SifDtd.GLOBAL, null, 0, SifVersion.SIF20, SifVersion.SIF26, SifTypeConverters.DECIMAL );
		SIF_EXTENDEDELEMENT = new ElementDefImpl( null, "SIF_ExtendedElement", null, 0, SifDtd.GLOBAL, null, 0, SifVersion.SIF15r1, SifVersion.SIF26, SifTypeConverters.STRING );
		SIF_EXTENDEDELEMENTS = new ElementDefImpl( null, "SIF_ExtendedElements", null, 0, SifDtd.GLOBAL, null, 0, SifVersion.SIF15r1, SifVersion.SIF26 );
		SIF_REFID = new ElementDefImpl( null, "SIF_RefId", null, 0, SifDtd.GLOBAL, null, 0, SifVersion.SIF15r1, SifVersion.SIF26, SifTypeConverters.STRING );
		XMLDATA = new ElementDefImpl( null, "XMLData", null, 0, SifDtd.GLOBAL, null, 0, SifVersion.SIF20, SifVersion.SIF26 );


		// <MediaType> fields (0 entries)

		// <MediaTypes> fields (1 entries)
		GlobalDTD.MEDIATYPES_MEDIATYPE = new ElementDefImpl( MEDIATYPES, "MediaType", null, 1, SifDtd.GLOBAL, null, (ElementDefImpl.FD_REPEATABLE), SifVersion.SIF11, SifVersion.SIF26, SifTypeConverters.STRING );

		// <MonetaryAmount> fields (1 entries)
		GlobalDTD.MONETARYAMOUNT_CURRENCY = new ElementDefImpl( MONETARYAMOUNT, "Currency", null, 1, SifDtd.GLOBAL, null, (ElementDefImpl.FD_ATTRIBUTE), SifVersion.SIF20, SifVersion.SIF26, SifTypeConverters.STRING );

		// <SIF_ExtendedElement> fields (3 entries)
		GlobalDTD.SIF_EXTENDEDELEMENT_NAME = new ElementDefImpl( SIF_EXTENDEDELEMENT, "Name", null, 1, SifDtd.GLOBAL, null, (ElementDefImpl.FD_ATTRIBUTE), SifVersion.SIF15r1, SifVersion.SIF26, SifTypeConverters.STRING );
		GlobalDTD.SIF_EXTENDEDELEMENT_XSITYPE = new ElementDefImpl( SIF_EXTENDEDELEMENT, "XsiType", "xsi:type", 2, SifDtd.GLOBAL, null, (ElementDefImpl.FD_ATTRIBUTE), SifVersion.SIF15r1, SifVersion.SIF26, SifTypeConverters.STRING );
		GlobalDTD.SIF_EXTENDEDELEMENT_SIF_ACTION = new ElementDefImpl( SIF_EXTENDEDELEMENT, "SIF_Action", null, 3, SifDtd.GLOBAL, null, (ElementDefImpl.FD_ATTRIBUTE), SifVersion.SIF15r1, SifVersion.SIF26, SifTypeConverters.STRING );

		// <SIF_ExtendedElements> fields (1 entries)
		GlobalDTD.SIF_EXTENDEDELEMENTS_SIF_EXTENDEDELEMENT = new ElementDefImpl( SIF_EXTENDEDELEMENTS, "SIF_ExtendedElement", null, 1, SifDtd.GLOBAL, null, (ElementDefImpl.FD_REPEATABLE), SifVersion.SIF15r1, SifVersion.SIF26, SifTypeConverters.STRING );

		// <SIF_RefId> fields (1 entries)
		GlobalDTD.SIF_REFID_SIF_REFOBJECT = new ElementDefImpl( SIF_REFID, "SIF_RefObject", null, 1, SifDtd.GLOBAL, null, (ElementDefImpl.FD_ATTRIBUTE), SifVersion.SIF15r1, SifVersion.SIF26, SifTypeConverters.STRING );

		// <XMLData> fields (1 entries)
		GlobalDTD.XMLDATA_DESCRIPTION = new ElementDefImpl( XMLDATA, "Description", null, 1, SifDtd.GLOBAL, null, (ElementDefImpl.FD_ATTRIBUTE), SifVersion.SIF20, SifVersion.SIF26, SifTypeConverters.STRING );
	}

	#region Update SifDtd
	public override void AddElementMappings( IDictionary<String, IElementDef> dictionary )
	{
		dictionary[ "SIF_ExtendedElement" ] = SIF_EXTENDEDELEMENT;
		dictionary["SIF_ExtendedElement_Name"] = GlobalDTD.SIF_EXTENDEDELEMENT_NAME ;
		dictionary["SIF_ExtendedElement_SIF_Action"] = GlobalDTD.SIF_EXTENDEDELEMENT_SIF_ACTION ;
		dictionary["SIF_ExtendedElement_xsi:type"] = GlobalDTD.SIF_EXTENDEDELEMENT_XSITYPE ;
		dictionary[ "SIF_ExtendedElements" ] = SIF_EXTENDEDELEMENTS;
		dictionary["SIF_ExtendedElements_SIF_ExtendedElement"] = GlobalDTD.SIF_EXTENDEDELEMENTS_SIF_EXTENDEDELEMENT ;
		dictionary[ "MediaType" ] = MEDIATYPE;
		dictionary[ "MonetaryAmount" ] = MONETARYAMOUNT;
		dictionary["MonetaryAmount_Currency"] = GlobalDTD.MONETARYAMOUNT_CURRENCY ;
		dictionary[ "XMLData" ] = XMLDATA;
		dictionary["XMLData_Description"] = GlobalDTD.XMLDATA_DESCRIPTION ;
		dictionary[ "SIF_RefId" ] = SIF_REFID;
		dictionary["SIF_RefId_SIF_RefObject"] = GlobalDTD.SIF_REFID_SIF_REFOBJECT ;
		dictionary[ "MediaTypes" ] = MEDIATYPES;
		dictionary["MediaTypes_MediaType"] = GlobalDTD.MEDIATYPES_MEDIATYPE ;
	}
	#endregion
}}
