// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;
using OpenADK.Library.Infra;

namespace OpenADK.Library.us.Reporting{

/// <summary>Identifies the submitter of the report.This element is conditional depending on the context in which the SIF_ReportObject is used.  It must be present in the ReportInfo element when a SIF_ReportObject is sent to a report authority in a SIF_Event message.  However, its presence is optional in SIF_ReportObject packets delivered to report authorities in SIF_Response messages.</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 1.5r1</para>
/// </remarks>
[Serializable]
public class ReportSubmitterInfo : SifKeyedElement
{
	/// <summary>
	/// Creates an instance of a ReportSubmitterInfo
	/// </summary>
	public ReportSubmitterInfo() : base ( ReportingDTD.REPORTSUBMITTERINFO ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="submitterName">Name of the report submitter.This is a descriptive string that names the entity submitting the SIF_ReportObject to the report authority.  It could be the name of an agency, a district, a school, the SIF_SourceId of the submitting agent, or any other string that a report authority could use to identify the submitter of a report.  This element may be present regardless of the presence of the SifRefIdType and SifRefId elements.  When those elements are used, it is recommended that collector agents reproduce the name of the LEA or school here.</param>
	///
	public ReportSubmitterInfo( string submitterName ) : base( ReportingDTD.REPORTSUBMITTERINFO )
	{
		this.SubmitterName = submitterName;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected ReportSubmitterInfo( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { ReportingDTD.REPORTSUBMITTERINFO_SUBMITTERNAME }; }
	}

	///<summary>Sets the value of the <c>&lt;SIF_RefId&gt;</c> element.</summary>
	/// <param name="SifRefObject">A SIF_RefObject</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;SIF_RefId&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setSIF_RefId</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>SIF_RefId</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetSIF_RefId( string SifRefObject, string Value ) {
		RemoveChild( ReportingDTD.REPORTSUBMITTERINFO_SIF_REFID);
		AddChild( ReportingDTD.REPORTSUBMITTERINFO_SIF_REFID, new SIF_RefId( SifRefObject, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SIF_RefId&gt;</c> element.
	/// </summary>
	/// <value> A SIF_RefId </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "If the submitter is described by another SIF data object such as a SchoolInfo or LEAInfo instance, this element references that object by RefId."</para>
	/// <para>This null is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering nulls of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;SIF_RefId&gt;</description></item>
	/// </list>
	/// <para>To remove the <c>SIF_RefId</c>, set <c>SIF_RefId</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public SIF_RefId SIF_RefId
	{
		get
		{
			return (SIF_RefId)GetChild( ReportingDTD.REPORTSUBMITTERINFO_SIF_REFID);
		}
		set
		{
			RemoveChild( ReportingDTD.REPORTSUBMITTERINFO_SIF_REFID);
			if( value != null)
			{
				AddChild( ReportingDTD.REPORTSUBMITTERINFO_SIF_REFID, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SubmitterName&gt;</c> element.
	/// </summary>
	/// <value> The <c>SubmitterName</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Name of the report submitter.This is a descriptive string that names the entity submitting the SIF_ReportObject to the report authority.  It could be the name of an agency, a district, a school, the SIF_SourceId of the submitting agent, or any other string that a report authority could use to identify the submitter of a report.  This element may be present regardless of the presence of the SifRefIdType and SifRefId elements.  When those elements are used, it is recommended that collector agents reproduce the name of the LEA or school here."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string SubmitterName
	{
		get
		{
			return (string) GetSifSimpleFieldValue( ReportingDTD.REPORTSUBMITTERINFO_SUBMITTERNAME ) ;
		}
		set
		{
			SetFieldValue( ReportingDTD.REPORTSUBMITTERINFO_SUBMITTERNAME, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SubmitterDepartment&gt;</c> element.
	/// </summary>
	/// <value> The <c>SubmitterDepartment</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Department, office, or subdivision of the agency submitting the report."</para>
	/// <para>This element is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering elements of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;SubmitterDepartment&gt;</description></item>
	/// </list>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string SubmitterDepartment
	{
		get
		{
			return (string) GetSifSimpleFieldValue( ReportingDTD.REPORTSUBMITTERINFO_SUBMITTERDEPARTMENT ) ;
		}
		set
		{
			SetFieldValue( ReportingDTD.REPORTSUBMITTERINFO_SUBMITTERDEPARTMENT, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;ContactInfo&gt;</c> element.</summary>
	/// <param name="Name">The name of the contact person.</param>
	///<remarks>
	/// <para>This form of <c>setContactInfo</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ContactInfo</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetContactInfo( Name Name ) {
		RemoveChild( ReportingDTD.REPORTSUBMITTERINFO_CONTACTINFO);
		AddChild( ReportingDTD.REPORTSUBMITTERINFO_CONTACTINFO, new ContactInfo( Name ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ContactInfo&gt;</c> element.
	/// </summary>
	/// <value> A ContactInfo </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Information on the contact person in this agency submitting the report.  For a description of this element, see 5.1.3 ContactInfo."</para>
	/// <para>To remove the <c>ContactInfo</c>, set <c>ContactInfo</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public ContactInfo ContactInfo
	{
		get
		{
			return (ContactInfo)GetChild( ReportingDTD.REPORTSUBMITTERINFO_CONTACTINFO);
		}
		set
		{
			RemoveChild( ReportingDTD.REPORTSUBMITTERINFO_CONTACTINFO);
			if( value != null)
			{
				AddChild( ReportingDTD.REPORTSUBMITTERINFO_CONTACTINFO, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Address&gt;</c> element.</summary>
	/// <param name="Type">Code that defines the location of the address.  Note:  A subset of specific valid values for each instance in a data object may be listed in that object.</param>
	/// <param name="Street">The street part of the address</param>
	/// <param name="City">The city part of the address.</param>
	/// <param name="StateProvince">The state or province code.</param>
	/// <param name="Country">The country code.</param>
	/// <param name="PostalCode">The ZIP/postal code.</param>
	///<remarks>
	/// <para>This form of <c>setAddress</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Address</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetAddress( AddressType Type, Street Street, string City, StatePrCode StateProvince, CountryCode Country, string PostalCode ) {
		RemoveChild( ReportingDTD.REPORTSUBMITTERINFO_ADDRESS);
		AddChild( ReportingDTD.REPORTSUBMITTERINFO_ADDRESS, new Address( Type, Street, City, StateProvince, Country, PostalCode ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Address&gt;</c> element.
	/// </summary>
	/// <value> An Address </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "For a description of this element, see 5.1.1 AddressAddress."</para>
	/// <para>To remove the <c>Address</c>, set <c>Address</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public Address Address
	{
		get
		{
			return (Address)GetChild( ReportingDTD.REPORTSUBMITTERINFO_ADDRESS);
		}
		set
		{
			RemoveChild( ReportingDTD.REPORTSUBMITTERINFO_ADDRESS);
			if( value != null)
			{
				AddChild( ReportingDTD.REPORTSUBMITTERINFO_ADDRESS, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;PhoneNumber&gt;</c> element.</summary>
	/// <param name="Type">Code that specifies what type of phone number this is.  Note: A subset of valid values may be specified in data objects.</param>
	/// <param name="Number">Phone number.  Acceptable formats:</param>
	///<remarks>
	/// <para>This form of <c>setPhoneNumber</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>PhoneNumber</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetPhoneNumber( PhoneNumberType Type, string Number ) {
		RemoveChild( ReportingDTD.REPORTSUBMITTERINFO_PHONENUMBER);
		AddChild( ReportingDTD.REPORTSUBMITTERINFO_PHONENUMBER, new PhoneNumber( Type, Number ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PhoneNumber&gt;</c> element.
	/// </summary>
	/// <value> A PhoneNumber </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "For a description of this element, see 5.1.22 PhoneNumber."</para>
	/// <para>To remove the <c>PhoneNumber</c>, set <c>PhoneNumber</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public PhoneNumber PhoneNumber
	{
		get
		{
			return (PhoneNumber)GetChild( ReportingDTD.REPORTSUBMITTERINFO_PHONENUMBER);
		}
		set
		{
			RemoveChild( ReportingDTD.REPORTSUBMITTERINFO_PHONENUMBER);
			if( value != null)
			{
				AddChild( ReportingDTD.REPORTSUBMITTERINFO_PHONENUMBER, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SubmitterNotes&gt;</c> element.
	/// </summary>
	/// <value> The <c>SubmitterNotes</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Optional notes for the report authority, such as information about a district's reporting policies and procedures, instructions for contacting the district for technical support, etc."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string SubmitterNotes
	{
		get
		{
			return (string) GetSifSimpleFieldValue( ReportingDTD.REPORTSUBMITTERINFO_SUBMITTERNOTES ) ;
		}
		set
		{
			SetFieldValue( ReportingDTD.REPORTSUBMITTERINFO_SUBMITTERNOTES, new SifString( value ), value );
		}
	}

}}
