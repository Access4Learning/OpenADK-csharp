// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using OpenADK.Library;

namespace OpenADK.Library.us.Reporting
{
	///<summary>
	/// Defines the set of values that can be specified whenever an IdStatus
	/// is used as a parameter to a method or constructor. 
	///</summary>
	/// <remarks>
	/// Alternatively, the static
	///  <see cref="Wrap"/> method can be called to encapsulate any string value in
	///  an IdStatus object.
	/// <para>Author: Generated by adkgen</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	[Serializable]
	public class IdStatus : SifEnum
	{
	/// <summary>Release ("Release")</summary>
	public static readonly IdStatus RELEASE = new IdStatus("Release");

	/// <summary>New ("New")</summary>
	public static readonly IdStatus NEW = new IdStatus("New");

	/// <summary>Ambiguous ("Ambiguous")</summary>
	public static readonly IdStatus AMBIGUOUS = new IdStatus("Ambiguous");

	/// <summary>Resolve ("Resolve")</summary>
	public static readonly IdStatus RESOLVE = new IdStatus("Resolve");

	/// <summary>Error ("Error")</summary>
	public static readonly IdStatus ERROR = new IdStatus("Error");

	/// <summary>Cancel ("Cancel")</summary>
	public static readonly IdStatus CANCEL = new IdStatus("Cancel");

	/// <summary>Valid ("Valid")</summary>
	public static readonly IdStatus VALID = new IdStatus("Valid");

	/// <summary>Request ("Request")</summary>
	public static readonly IdStatus REQUEST = new IdStatus("Request");

	/// <summary>Cancelled ("Cancelled")</summary>
	public static readonly IdStatus CANCELLED = new IdStatus("Cancelled");

	///<summary>Wrap an arbitrary string value in an IdStatus object.</summary>
	///<param name="wrappedValue">The element/attribute value.</param>
	///<remarks>This method does not verify
	///that the value is valid according to the SIF Specification</remarks>
	public static IdStatus Wrap( String wrappedValue ) {
		return new IdStatus( wrappedValue );
	}

	private IdStatus( string enumDefValue ) : base( enumDefValue ) {}
	}
}
