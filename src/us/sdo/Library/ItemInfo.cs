// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Library{

/// <summary>An ItemInfo</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 1.1</para>
/// </remarks>
[Serializable]
public class ItemInfo : SifKeyedElement
{
	/// <summary>
	/// Creates an instance of an ItemInfo
	/// </summary>
	public ItemInfo() : base ( LibraryDTD.ITEMINFO ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="type">A Type</param>
	///<param name="title">The title of the item being referenced by this Transaction.</param>
	///
	public ItemInfo( ItemType type, string title ) : base( LibraryDTD.ITEMINFO )
	{
		this.SetType( type );
		this.Title = title;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected ItemInfo( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { LibraryDTD.ITEMINFO_TYPE }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>Type</c> attribute.
	/// </summary>
	/// <value> The <c>Type</c> attribute of this object.</value>
	/// <remarks>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public string Type
	{
		get
		{ 
			return GetFieldValue( LibraryDTD.ITEMINFO_TYPE );
		}
		set
		{
			SetField( LibraryDTD.ITEMINFO_TYPE, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>Type</c> attribute.
	/// </summary>
	/// <param name="val">A ItemType object</param>
	/// <remarks>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetType( ItemType val )
	{
		SetField( LibraryDTD.ITEMINFO_TYPE, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Title&gt;</c> element.
	/// </summary>
	/// <value> The <c>Title</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The title of the item being referenced by this Transaction."</para>
	/// <para>This element is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering elements of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;Title&gt;</description></item>
	/// </list>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public string Title
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LibraryDTD.ITEMINFO_TITLE ) ;
		}
		set
		{
			SetFieldValue( LibraryDTD.ITEMINFO_TITLE, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Author&gt;</c> element.
	/// </summary>
	/// <value> The <c>Author</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The author of the item being referenced by this Transaction."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Author
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LibraryDTD.ITEMINFO_AUTHOR ) ;
		}
		set
		{
			SetFieldValue( LibraryDTD.ITEMINFO_AUTHOR, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;ElectronicId&gt;</c> element.</summary>
	/// <param name="Type">Electronic ID type.</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;ElectronicId&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setElectronicId</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ElectronicId</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetElectronicId( ElectronicIdType Type, string Value ) {
		RemoveChild( LibraryDTD.ITEMINFO_ELECTRONICID);
		AddChild( LibraryDTD.ITEMINFO_ELECTRONICID, new ElectronicId( Type, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ElectronicId&gt;</c> element.
	/// </summary>
	/// <value> An ElectronicId </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Electronic identifier associated with this Transaction."</para>
	/// <para>This null is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering nulls of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;ElectronicId&gt;</description></item>
	/// </list>
	/// <para>To remove the <c>ElectronicId</c>, set <c>ElectronicId</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public ElectronicId ElectronicId
	{
		get
		{
			return (ElectronicId)GetChild( LibraryDTD.ITEMINFO_ELECTRONICID);
		}
		set
		{
			RemoveChild( LibraryDTD.ITEMINFO_ELECTRONICID);
			if( value != null)
			{
				AddChild( LibraryDTD.ITEMINFO_ELECTRONICID, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;CallNumber&gt;</c> element.
	/// </summary>
	/// <value> The <c>CallNumber</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The library call number, if any, assigned to this item."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public string CallNumber
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LibraryDTD.ITEMINFO_CALLNUMBER ) ;
		}
		set
		{
			SetFieldValue( LibraryDTD.ITEMINFO_CALLNUMBER, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;Price&gt;</c> element.</summary>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;MonetaryAmount&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setPrice</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Price</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetPrice( decimal? Value ) {
		RemoveChild( LibraryDTD.ITEMINFO_PRICE);
		AddChild( LibraryDTD.ITEMINFO_PRICE, new MonetaryAmount( Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Price&gt;</c> element.
	/// </summary>
	/// <value> A MonetaryAmount </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The cost of this item. "</para>
	/// <para>This null is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering nulls of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;Price&gt;</description></item>
	/// </list>
	/// <para>To remove the <c>MonetaryAmount</c>, set <c>Price</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public MonetaryAmount Price
	{
		get
		{
			return (MonetaryAmount)GetChild( LibraryDTD.ITEMINFO_PRICE);
		}
		set
		{
			RemoveChild( LibraryDTD.ITEMINFO_PRICE);
			if( value != null)
			{
				AddChild( LibraryDTD.ITEMINFO_PRICE, value );
			}
		}
	}

}}
