// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Library{

/// <summary>A Transaction</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 1.1</para>
/// </remarks>
[Serializable]
public class Transaction : SifElement
{
	/// <summary>
	/// Creates an instance of a Transaction
	/// </summary>
	public Transaction() : base ( LibraryDTD.TRANSACTION ){}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected Transaction( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	///<summary>Sets the value of the <c>&lt;ItemInfo&gt;</c> element.</summary>
	/// <param name="Type">A Type</param>
	/// <param name="Title">The title of the item being referenced by this Transaction.</param>
	///<remarks>
	/// <para>This form of <c>setItemInfo</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ItemInfo</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetItemInfo( ItemType Type, string Title ) {
		RemoveChild( LibraryDTD.TRANSACTION_ITEMINFO);
		AddChild( LibraryDTD.TRANSACTION_ITEMINFO, new ItemInfo( Type, Title ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ItemInfo&gt;</c> element.
	/// </summary>
	/// <value> An ItemInfo </value>
	/// <remarks>
	/// <para>To remove the <c>ItemInfo</c>, set <c>ItemInfo</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public ItemInfo ItemInfo
	{
		get
		{
			return (ItemInfo)GetChild( LibraryDTD.TRANSACTION_ITEMINFO);
		}
		set
		{
			RemoveChild( LibraryDTD.TRANSACTION_ITEMINFO);
			if( value != null)
			{
				AddChild( LibraryDTD.TRANSACTION_ITEMINFO, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;CheckoutInfo&gt;</c> element.</summary>
	/// <param name="ReturnBy">The date and time that this item is due to be returned.</param>
	///<remarks>
	/// <para>This form of <c>setCheckoutInfo</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>CheckoutInfo</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetCheckoutInfo( DateTime? ReturnBy ) {
		RemoveChild( LibraryDTD.TRANSACTION_CHECKOUTINFO);
		AddChild( LibraryDTD.TRANSACTION_CHECKOUTINFO, new CheckoutInfo( ReturnBy ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;CheckoutInfo&gt;</c> element.
	/// </summary>
	/// <value> A CheckoutInfo </value>
	/// <remarks>
	/// <para>This null is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering nulls of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;CheckoutInfo&gt;</description></item>
	/// </list>
	/// <para>To remove the <c>CheckoutInfo</c>, set <c>CheckoutInfo</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public CheckoutInfo CheckoutInfo
	{
		get
		{
			return (CheckoutInfo)GetChild( LibraryDTD.TRANSACTION_CHECKOUTINFO);
		}
		set
		{
			RemoveChild( LibraryDTD.TRANSACTION_CHECKOUTINFO);
			if( value != null)
			{
				AddChild( LibraryDTD.TRANSACTION_CHECKOUTINFO, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;FineInfoList&gt;</c> element.
	/// </summary>
	/// <value> A FineInfoList </value>
	/// <remarks>
	/// <para>To remove the <c>FineInfoList</c>, set <c>FineInfoList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public FineInfoList FineInfoList
	{
		get
		{
			return (FineInfoList)GetChild( LibraryDTD.TRANSACTION_FINEINFOLIST);
		}
		set
		{
			RemoveChild( LibraryDTD.TRANSACTION_FINEINFOLIST);
			if( value != null)
			{
				AddChild( LibraryDTD.TRANSACTION_FINEINFOLIST, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;HoldInfoList&gt;</c> element.
	/// </summary>
	/// <value> An HoldInfoList </value>
	/// <remarks>
	/// <para>To remove the <c>HoldInfoList</c>, set <c>HoldInfoList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public HoldInfoList HoldInfoList
	{
		get
		{
			return (HoldInfoList)GetChild( LibraryDTD.TRANSACTION_HOLDINFOLIST);
		}
		set
		{
			RemoveChild( LibraryDTD.TRANSACTION_HOLDINFOLIST);
			if( value != null)
			{
				AddChild( LibraryDTD.TRANSACTION_HOLDINFOLIST, value );
			}
		}
	}

}}
