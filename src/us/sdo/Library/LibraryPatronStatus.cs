// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Library{

/// <summary>A LibraryPatronStatus</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 1.1</para>
/// </remarks>
[Serializable]
public class LibraryPatronStatus : SifDataObject
{
	/// <summary>
	/// Creates an instance of a LibraryPatronStatus
	/// </summary>
	public LibraryPatronStatus() : base( Adk.SifVersion, LibraryDTD.LIBRARYPATRONSTATUS ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="libraryType">A library-defined language-independent value that refers to a specific patron type.</param>
	///<param name="sifRefId">The SIF wide unique identifier of a student or teacher.</param>
	///<param name="sifRefObject">The type of patron mapped to a SIF supported object. Library automation products work with patrons who could be students or teachers.</param>
	///<param name="electronicIdList">This is an open list with no primary key.</param>
	///<param name="numberOfCheckouts">The total number of items that this patron currently has checked out including overdue items.</param>
	///<param name="numberOfOverdues">The total number of checkouts that are currently overdue.</param>
	///<param name="numberOfFines">The total number of fines currently assessed to this patron.</param>
	///<param name="fineAmount">The total monetary amount of the fines that this patron currently owes the library expressed as a positive number.</param>
	///
	public LibraryPatronStatus( string libraryType, string sifRefId, PatronType sifRefObject, ElectronicIdList electronicIdList, int? numberOfCheckouts, int? numberOfOverdues, int? numberOfFines, MonetaryAmount fineAmount ) : base( Adk.SifVersion, LibraryDTD.LIBRARYPATRONSTATUS )
	{
		this.LibraryType = libraryType;
		this.SIF_RefId = sifRefId;
		this.SetSIF_RefObject( sifRefObject );
		this.ElectronicIdList = electronicIdList;
		this.NumberOfCheckouts = numberOfCheckouts;
		this.NumberOfOverdues = numberOfOverdues;
		this.NumberOfFines = numberOfFines;
		this.FineAmount = fineAmount;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected LibraryPatronStatus( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { LibraryDTD.LIBRARYPATRONSTATUS_SIF_REFID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>LibraryType</c> attribute.
	/// </summary>
	/// <value> The <c>LibraryType</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "A library-defined language-independent value that refers to a specific patron type."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public string LibraryType
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_LIBRARYTYPE ) ;
		}
		set
		{
			SetFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_LIBRARYTYPE, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>SIF_RefId</c> attribute.
	/// </summary>
	/// <value> The <c>SIF_RefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The SIF wide unique identifier of a student or teacher."</para>
	/// <para>This attribute is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering attributes of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;SIF_RefId&gt;</description></item>
	/// </list>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public string SIF_RefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_SIF_REFID ) ;
		}
		set
		{
			SetFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_SIF_REFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>SIF_RefObject</c> attribute.
	/// </summary>
	/// <value> The <c>SIF_RefObject</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The type of patron mapped to a SIF supported object. Library automation products work with patrons who could be students or teachers."</para>
	/// <para>This attribute is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering attributes of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;SIF_RefObject&gt;</description></item>
	/// </list>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public string SIF_RefObject
	{
		get
		{ 
			return GetFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_SIF_REFOBJECT );
		}
		set
		{
			SetField( LibraryDTD.LIBRARYPATRONSTATUS_SIF_REFOBJECT, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>SIF_RefObject</c> attribute.
	/// </summary>
	/// <param name="val">A PatronType object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The type of patron mapped to a SIF supported object. Library automation products work with patrons who could be students or teachers."</para>
	/// <para>This attribute is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering attributes of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;SIF_RefObject&gt;</description></item>
	/// </list>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetSIF_RefObject( PatronType val )
	{
		SetField( LibraryDTD.LIBRARYPATRONSTATUS_SIF_REFOBJECT, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ElectronicIdList&gt;</c> element.
	/// </summary>
	/// <value> An ElectronicIdList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "This is an open list with no primary key."</para>
	/// <para>To remove the <c>ElectronicIdList</c>, set <c>ElectronicIdList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public ElectronicIdList ElectronicIdList
	{
		get
		{
			return (ElectronicIdList)GetChild( LibraryDTD.LIBRARYPATRONSTATUS_ELECTRONICIDLIST);
		}
		set
		{
			RemoveChild( LibraryDTD.LIBRARYPATRONSTATUS_ELECTRONICIDLIST);
			if( value != null)
			{
				AddChild( LibraryDTD.LIBRARYPATRONSTATUS_ELECTRONICIDLIST, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;TransactionList&gt;</c> element.
	/// </summary>
	/// <value> A TransactionList </value>
	/// <remarks>
	/// <para>To remove the <c>TransactionList</c>, set <c>TransactionList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public TransactionList TransactionList
	{
		get
		{
			return (TransactionList)GetChild( LibraryDTD.LIBRARYPATRONSTATUS_TRANSACTIONLIST);
		}
		set
		{
			RemoveChild( LibraryDTD.LIBRARYPATRONSTATUS_TRANSACTIONLIST);
			if( value != null)
			{
				AddChild( LibraryDTD.LIBRARYPATRONSTATUS_TRANSACTIONLIST, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;MessageList&gt;</c> element.
	/// </summary>
	/// <value> A MessageList </value>
	/// <remarks>
	/// <para>To remove the <c>MessageList</c>, set <c>MessageList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public MessageList MessageList
	{
		get
		{
			return (MessageList)GetChild( LibraryDTD.LIBRARYPATRONSTATUS_MESSAGELIST);
		}
		set
		{
			RemoveChild( LibraryDTD.LIBRARYPATRONSTATUS_MESSAGELIST);
			if( value != null)
			{
				AddChild( LibraryDTD.LIBRARYPATRONSTATUS_MESSAGELIST, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;NumberOfCheckouts&gt;</c> element.
	/// </summary>
	/// <value> The <c>NumberOfCheckouts</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The total number of items that this patron currently has checked out including overdue items."</para>
	/// <para>This element is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering elements of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;NumberOfCheckouts&gt;</description></item>
	/// </list>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public int? NumberOfCheckouts
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_NUMBEROFCHECKOUTS ) ;
		}
		set
		{
			SetFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_NUMBEROFCHECKOUTS, new SifInt( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;NumberOfOverdues&gt;</c> element.
	/// </summary>
	/// <value> The <c>NumberOfOverdues</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The total number of checkouts that are currently overdue."</para>
	/// <para>This element is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering elements of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;NumberOfOverdues&gt;</description></item>
	/// </list>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public int? NumberOfOverdues
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_NUMBEROFOVERDUES ) ;
		}
		set
		{
			SetFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_NUMBEROFOVERDUES, new SifInt( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;NumberOfFines&gt;</c> element.
	/// </summary>
	/// <value> The <c>NumberOfFines</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The total number of fines currently assessed to this patron."</para>
	/// <para>This element is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering elements of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;NumberOfFines&gt;</description></item>
	/// </list>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public int? NumberOfFines
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_NUMBEROFFINES ) ;
		}
		set
		{
			SetFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_NUMBEROFFINES, new SifInt( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;FineAmount&gt;</c> element.</summary>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;MonetaryAmount&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setFineAmount</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>FineAmount</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetFineAmount( decimal? Value ) {
		RemoveChild( LibraryDTD.LIBRARYPATRONSTATUS_FINEAMOUNT);
		AddChild( LibraryDTD.LIBRARYPATRONSTATUS_FINEAMOUNT, new MonetaryAmount( Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;FineAmount&gt;</c> element.
	/// </summary>
	/// <value> A MonetaryAmount </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The total monetary amount of the fines that this patron currently owes the library expressed as a positive number."</para>
	/// <para>To remove the <c>MonetaryAmount</c>, set <c>FineAmount</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public MonetaryAmount FineAmount
	{
		get
		{
			return (MonetaryAmount)GetChild( LibraryDTD.LIBRARYPATRONSTATUS_FINEAMOUNT);
		}
		set
		{
			RemoveChild( LibraryDTD.LIBRARYPATRONSTATUS_FINEAMOUNT);
			if( value != null)
			{
				AddChild( LibraryDTD.LIBRARYPATRONSTATUS_FINEAMOUNT, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;NumberOfRefunds&gt;</c> element.
	/// </summary>
	/// <value> The <c>NumberOfRefunds</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The total number of refunds currently credited to this patron."</para>
	/// <para>This element is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering elements of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;NumberOfRefunds&gt;</description></item>
	/// </list>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public int? NumberOfRefunds
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_NUMBEROFREFUNDS ) ;
		}
		set
		{
			SetFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_NUMBEROFREFUNDS, new SifInt( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;RefundAmount&gt;</c> element.</summary>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;MonetaryAmount&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setRefundAmount</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>RefundAmount</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetRefundAmount( decimal? Value ) {
		RemoveChild( LibraryDTD.LIBRARYPATRONSTATUS_REFUNDAMOUNT);
		AddChild( LibraryDTD.LIBRARYPATRONSTATUS_REFUNDAMOUNT, new MonetaryAmount( Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;RefundAmount&gt;</c> element.
	/// </summary>
	/// <value> A MonetaryAmount </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The total monetary amount of the refunds that the library currently owes the patron expressed as a positive number."</para>
	/// <para>To remove the <c>MonetaryAmount</c>, set <c>RefundAmount</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public MonetaryAmount RefundAmount
	{
		get
		{
			return (MonetaryAmount)GetChild( LibraryDTD.LIBRARYPATRONSTATUS_REFUNDAMOUNT);
		}
		set
		{
			RemoveChild( LibraryDTD.LIBRARYPATRONSTATUS_REFUNDAMOUNT);
			if( value != null)
			{
				AddChild( LibraryDTD.LIBRARYPATRONSTATUS_REFUNDAMOUNT, value );
			}
		}
	}

}}
