// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using OpenADK.Library;

namespace OpenADK.Library.us.Datamodel
{
	///<summary>
	/// Defines the set of values that can be specified whenever a MultipleIntelligenceType
	/// is used as a parameter to a method or constructor. 
	///</summary>
	/// <remarks>
	/// Alternatively, the static
	///  <see cref="Wrap"/> method can be called to encapsulate any string value in
	///  a MultipleIntelligenceType object.
	/// <para>Author: Generated by adkgen</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	[Serializable]
	public class MultipleIntelligenceType : SifEnum
	{
	/// <summary>Spatial ("Spatial")</summary>
	public static readonly MultipleIntelligenceType SPATIAL = new MultipleIntelligenceType("Spatial");

	/// <summary>Intrapersonal ("Intrapersonal")</summary>
	public static readonly MultipleIntelligenceType INTRAPERSONAL = new MultipleIntelligenceType("Intrapersonal");

	/// <summary>Interpersonal ("Interpersonal")</summary>
	public static readonly MultipleIntelligenceType INTERPERSONAL = new MultipleIntelligenceType("Interpersonal");

	/// <summary>Bodily-Kinesthetic ("Bodily-Kinesthetic")</summary>
	public static readonly MultipleIntelligenceType BODILYKINESTHETIC = new MultipleIntelligenceType("Bodily-Kinesthetic");

	/// <summary>Logical-Mathematical ("Logical-Mathematical")</summary>
	public static readonly MultipleIntelligenceType LOGICALMATHEMATICAL = new MultipleIntelligenceType("Logical-Mathematical");

	/// <summary>Linguistic ("Linguistic")</summary>
	public static readonly MultipleIntelligenceType LINGUISTIC = new MultipleIntelligenceType("Linguistic");

	/// <summary>Naturalist ("Naturalist")</summary>
	public static readonly MultipleIntelligenceType NATURALIST = new MultipleIntelligenceType("Naturalist");

	/// <summary>Musical ("Musical")</summary>
	public static readonly MultipleIntelligenceType MUSICAL = new MultipleIntelligenceType("Musical");

	///<summary>Wrap an arbitrary string value in a MultipleIntelligenceType object.</summary>
	///<param name="wrappedValue">The element/attribute value.</param>
	///<remarks>This method does not verify
	///that the value is valid according to the SIF Specification</remarks>
	public static MultipleIntelligenceType Wrap( String wrappedValue ) {
		return new MultipleIntelligenceType( wrappedValue );
	}

	private MultipleIntelligenceType( string enumDefValue ) : base( enumDefValue ) {}
	}
}
