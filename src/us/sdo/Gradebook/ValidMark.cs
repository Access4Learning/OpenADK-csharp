// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Gradebook{

/// <summary>A ValidMark</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 2.0</para>
/// </remarks>
[Serializable]
public class ValidMark : SifKeyedElement
{
	/// <summary>
	/// Creates an instance of a ValidMark
	/// </summary>
	public ValidMark() : base ( GradebookDTD.VALIDMARK ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="code">String representing the actual Mark that would appear on the report card (e.g., "A+", "I", "100").</param>
	///
	public ValidMark( string code ) : base( GradebookDTD.VALIDMARK )
	{
		this.Code = code;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected ValidMark( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { GradebookDTD.VALIDMARK_CODE }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Code&gt;</c> element.
	/// </summary>
	/// <value> The <c>Code</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "String representing the actual Mark that would appear on the report card (e.g., "A+", "I", "100")."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Code
	{
		get
		{
			return (string) GetSifSimpleFieldValue( GradebookDTD.VALIDMARK_CODE ) ;
		}
		set
		{
			SetFieldValue( GradebookDTD.VALIDMARK_CODE, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;NumericEquivalent&gt;</c> element.
	/// </summary>
	/// <value> The <c>NumericEquivalent</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Numeric equivalent for the Mark (e.g., 100, 4.0)."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public decimal? NumericEquivalent
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( GradebookDTD.VALIDMARK_NUMERICEQUIVALENT ) ;
		}
		set
		{
			SetFieldValue( GradebookDTD.VALIDMARK_NUMERICEQUIVALENT, new SifDecimal( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Description&gt;</c> element.
	/// </summary>
	/// <value> The <c>Description</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The description for this code. (e.g. "Excellent", "Participates in Class", "Incomplete", etc...)."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Description
	{
		get
		{
			return (string) GetSifSimpleFieldValue( GradebookDTD.VALIDMARK_DESCRIPTION ) ;
		}
		set
		{
			SetFieldValue( GradebookDTD.VALIDMARK_DESCRIPTION, new SifString( value ), value );
		}
	}

}}
