// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Gradebook{

/// <summary>A TermMarkLists</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 2.0</para>
/// </remarks>
[Serializable]
public class TermMarkLists : SifList<MarkInfoList>
{
	/// <summary>
	/// Creates an instance of a TermMarkLists
	/// </summary>
	public TermMarkLists() : base ( GradebookDTD.TERMMARKLISTS ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="markInfoList">A MarkInfoList</param>
	///
	public TermMarkLists( MarkInfoList markInfoList ) : base( GradebookDTD.TERMMARKLISTS )
	{
		this.AddMarkInfoList( markInfoList );
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected TermMarkLists( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public  IElementDef[] KeyFields {
		get { return new IElementDef[] { GradebookDTD.TERMMARKLISTS_MARKINFOLIST }; }
	}

	/// <summary>Adds a new <c>&lt;MarkInfoList&gt;</c> child element.</summary>
	/// <param name="val">A MarkInfoList object</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void AddMarkInfoList( MarkInfoList val ) { 
		AddChild( GradebookDTD.TERMMARKLISTS_MARKINFOLIST, val );
	}

	///<summary>Adds the value of the <c>&lt;MarkInfoList&gt;</c> element.</summary>
	/// <param name="TermInfoRefId">A TermInfoRefId</param>
	/// <param name="MarkInfoRefId">A MarkInfoRefId</param>
	///<remarks>
	/// <para>This form of <c>setMarkInfoList</c> is provided as a convenience method
	/// that is functionally equivalent to the method <c>AddMarkInfoList</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void AddMarkInfoList( string TermInfoRefId, MarkInfoRefId MarkInfoRefId ) {
		AddChild( GradebookDTD.TERMMARKLISTS_MARKINFOLIST, new MarkInfoList( TermInfoRefId, MarkInfoRefId ) );
	}

	/// <summary>
	/// Removes a <see cref="MarkInfoList"/> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	/// </summary>
	/// <param name="TermInfoRefId">Identifies the MarkInfoList object to remove by its TermInfoRefId value</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void RemoveMarkInfoList( string TermInfoRefId ) { 
		RemoveChild( GradebookDTD.TERMMARKLISTS_MARKINFOLIST, new String[] { TermInfoRefId.ToString() } );
	}

	/// <summary>
	/// Gets a <see cref="MarkInfoList"/> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	/// </summary>
	/// <param name="TermInfoRefId">Identifies the MarkInfoList object to return by its "TermInfoRefId" attribute value</param>
	/// <returns>A MarkInfoList object</returns>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public MarkInfoList GetMarkInfoList( string TermInfoRefId ) { 
		return (MarkInfoList)GetChild( GradebookDTD.TERMMARKLISTS_MARKINFOLIST, new string[] { TermInfoRefId.ToString() } );
	}

	/// <summary>
	/// Gets all MarkInfoList object instances. More than once instance can be defined for this object because it is a repeatable field element.
	/// </summary>
	/// <returns>An array of MarkInfoList objects</returns>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public MarkInfoList[] GetMarkInfoLists()
	{
		return GetChildren<MarkInfoList>().ToArray();
	}

	/// <summary>
	/// Sets all MarkInfoList object instances. All existing 
	/// <c>MarkInfoList</c> instances 
	/// are removed and replaced with this list. Calling this method with the 
	/// parameter value set to null removes all <c>MarkInfoLists</c>.
	/// </summary>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetMarkInfoLists( MarkInfoList[] items)
	{
		SetChildren( GradebookDTD.TERMMARKLISTS_MARKINFOLIST, items );
	}

}}
