// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using OpenADK.Library;

namespace OpenADK.Library.us.Etranscripts
{
	///<summary>
	/// Defines the set of values that can be specified whenever a DiplomaCredentialAndHonorsType
	/// is used as a parameter to a method or constructor. 
	///</summary>
	/// <remarks>
	/// Alternatively, the static
	///  <see cref="Wrap"/> method can be called to encapsulate any string value in
	///  a DiplomaCredentialAndHonorsType object.
	/// <para>Author: Generated by adkgen</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	[Serializable]
	public class DiplomaCredentialAndHonorsType : SifEnum
	{
	/// <summary>Class salutatorian ("2004")</summary>
	public static readonly DiplomaCredentialAndHonorsType SALUTATORIAN = new DiplomaCredentialAndHonorsType("2004");

	/// <summary>Scholar award with distinction ("1999")</summary>
	public static readonly DiplomaCredentialAndHonorsType SCHOLAR_AWARD_DIST = new DiplomaCredentialAndHonorsType("1999");

	/// <summary>State scholar award ("2001")</summary>
	public static readonly DiplomaCredentialAndHonorsType STATE_SCHOLAR_AWARD = new DiplomaCredentialAndHonorsType("2001");

	/// <summary>Class valedictorian ("2003")</summary>
	public static readonly DiplomaCredentialAndHonorsType VALEDICTORIAN = new DiplomaCredentialAndHonorsType("2003");

	/// <summary>Prize awards (not limited to subject matter awards) ("2005")</summary>
	public static readonly DiplomaCredentialAndHonorsType PRIZE_AWARDS = new DiplomaCredentialAndHonorsType("2005");

	/// <summary>Other ("9999")</summary>
	public static readonly DiplomaCredentialAndHonorsType OTHER = new DiplomaCredentialAndHonorsType("9999");

	/// <summary>Rank ("2357")</summary>
	public static readonly DiplomaCredentialAndHonorsType RANK = new DiplomaCredentialAndHonorsType("2357");

	/// <summary>National scholar award ("2002")</summary>
	public static readonly DiplomaCredentialAndHonorsType NATIONAL_SCHOLAR_AWARD = new DiplomaCredentialAndHonorsType("2002");

	/// <summary>Other monetary award ("2009")</summary>
	public static readonly DiplomaCredentialAndHonorsType OTHER_MONETARY = new DiplomaCredentialAndHonorsType("2009");

	/// <summary>State-sponsored scholarships ("2007")</summary>
	public static readonly DiplomaCredentialAndHonorsType STATE_SPONS_SCHOLARSHIP = new DiplomaCredentialAndHonorsType("2007");

	/// <summary>Local scholar award ("2000")</summary>
	public static readonly DiplomaCredentialAndHonorsType LOCAL_SCHOLAR_AWARD = new DiplomaCredentialAndHonorsType("2000");

	/// <summary>Nationally-sponsored scholarships ("2008")</summary>
	public static readonly DiplomaCredentialAndHonorsType NATIONALLY_SPONS_SCHOLARSHIP = new DiplomaCredentialAndHonorsType("2008");

	/// <summary>Scholar award with honor ("1998")</summary>
	public static readonly DiplomaCredentialAndHonorsType SCHOLAR_AWARD_HONOR = new DiplomaCredentialAndHonorsType("1998");

	/// <summary>Magna cum laude ("1996")</summary>
	public static readonly DiplomaCredentialAndHonorsType MAGNA_CUM_LAUDE = new DiplomaCredentialAndHonorsType("1996");

	/// <summary>Cum laude ("1995")</summary>
	public static readonly DiplomaCredentialAndHonorsType CUM_LAUDE = new DiplomaCredentialAndHonorsType("1995");

	/// <summary>Locally-sponsored scholarships ("2006")</summary>
	public static readonly DiplomaCredentialAndHonorsType LOCALLY_SPONS_SCHOLARSHIP = new DiplomaCredentialAndHonorsType("2006");

	/// <summary>Summa cum laude ("1997")</summary>
	public static readonly DiplomaCredentialAndHonorsType SUMMA_CUM_LAUDE = new DiplomaCredentialAndHonorsType("1997");

	///<summary>Wrap an arbitrary string value in a DiplomaCredentialAndHonorsType object.</summary>
	///<param name="wrappedValue">The element/attribute value.</param>
	///<remarks>This method does not verify
	///that the value is valid according to the SIF Specification</remarks>
	public static DiplomaCredentialAndHonorsType Wrap( String wrappedValue ) {
		return new DiplomaCredentialAndHonorsType( wrappedValue );
	}

	private DiplomaCredentialAndHonorsType( string enumDefValue ) : base( enumDefValue ) {}
	}
}
