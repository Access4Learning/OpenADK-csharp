// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Profdev{

/// <summary>This object contains HR, certification and teaching assignment information for elementary and secondary professional personnel for state reporting.   It is a snapshot object used for vertical reporting of data related to K-12 elementary and secondary professional employees.  SIF_Events are not reported.</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 1.5r1</para>
/// </remarks>
[Serializable]
public class EmployeeCredential : SifDataObject
{
	/// <summary>
	/// Creates an instance of an EmployeeCredential
	/// </summary>
	public EmployeeCredential() : base( Adk.SifVersion, ProfdevDTD.EMPLOYEECREDENTIAL ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="reportDate">Date that report snapshot was generated</param>
	///<param name="schoolYear">School year for which the information is applicable, expressed as the four-digit year in which the school year ends (e.g., "2004" for the 2003-04 school year).</param>
	///<param name="stateProvinceId">State assigned reporting unit number</param>
	///<param name="ssn">Employee social security number</param>
	///<param name="name">Name of employee.</param>
	///<param name="race">Primary employee's race</param>
	///<param name="certifications">Employee certification area information</param>
	///<param name="salary">Employee's salary</param>
	///<param name="status">A Status</param>
	///<param name="leave">Is this employee on leave this year?</param>
	///<param name="totalYears">Total number of years employee has been in a professional position</param>
	///<param name="unitYears">Total number of years at current LEA</param>
	///<param name="education">Highest level of education attained by employee.</param>
	///
	public EmployeeCredential( DateTime? reportDate, int? schoolYear, string stateProvinceId, string ssn, Name name, RaceType race, Certifications certifications, MonetaryAmount salary, EmploymentStatus status, YesNo leave, decimal? totalYears, decimal? unitYears, TeachingCredentialBasis education ) : base( Adk.SifVersion, ProfdevDTD.EMPLOYEECREDENTIAL )
	{
		this.ReportDate = reportDate;
		this.SchoolYear = schoolYear;
		this.StateProvinceId = stateProvinceId;
		this.SSN = ssn;
		this.Name = name;
		this.SetRace( race );
		this.Certifications = certifications;
		this.Salary = salary;
		this.SetStatus( status );
		this.SetLeave( leave );
		this.TotalYears = totalYears;
		this.UnitYears = unitYears;
		this.SetEducation( education );
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected EmployeeCredential( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { ProfdevDTD.EMPLOYEECREDENTIAL_REPORTDATE, ProfdevDTD.EMPLOYEECREDENTIAL_STATEPROVINCEID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ReportDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>ReportDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Date that report snapshot was generated"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public DateTime? ReportDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_REPORTDATE ) ;
		}
		set
		{
			SetFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_REPORTDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SchoolYear&gt;</c> element.
	/// </summary>
	/// <value> The <c>SchoolYear</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "School year for which the information is applicable, expressed as the four-digit year in which the school year ends (e.g., "2004" for the 2003-04 school year)."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public int? SchoolYear
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_SCHOOLYEAR ) ;
		}
		set
		{
			SetFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_SCHOOLYEAR, new SifInt( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StateProvinceId&gt;</c> element.
	/// </summary>
	/// <value> The <c>StateProvinceId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "State assigned reporting unit number"</para>
	/// <para>This element is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering elements of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;StateProvinceId&gt;</description></item>
	/// </list>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string StateProvinceId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_STATEPROVINCEID ) ;
		}
		set
		{
			SetFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_STATEPROVINCEID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SSN&gt;</c> element.
	/// </summary>
	/// <value> The <c>SSN</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Employee social security number"</para>
	/// <para>This element is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering elements of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;SSN&gt;</description></item>
	/// </list>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string SSN
	{
		get
		{
			return (string) GetSifSimpleFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_SSN ) ;
		}
		set
		{
			SetFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_SSN, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;Name&gt;</c> element.</summary>
	/// <param name="Type">Code that specifies what type of name this is.  If unsure, use 04.</param>
	/// <param name="LastName">The last name.</param>
	/// <param name="FirstName">The first name.</param>
	///<remarks>
	/// <para>This form of <c>setName</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Name</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetName( NameType Type, string LastName, string FirstName ) {
		RemoveChild( ProfdevDTD.EMPLOYEECREDENTIAL_NAME);
		AddChild( ProfdevDTD.EMPLOYEECREDENTIAL_NAME, new Name( Type, LastName, FirstName ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Name&gt;</c> element.
	/// </summary>
	/// <value> A Name </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Name of employee."</para>
	/// <para>To remove the <c>Name</c>, set <c>Name</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public Name Name
	{
		get
		{
			return (Name)GetChild( ProfdevDTD.EMPLOYEECREDENTIAL_NAME);
		}
		set
		{
			RemoveChild( ProfdevDTD.EMPLOYEECREDENTIAL_NAME);
			if( value != null)
			{
				AddChild( ProfdevDTD.EMPLOYEECREDENTIAL_NAME, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Demographics&gt;</c> element.
	/// </summary>
	/// <value> A Demographics </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "This element contains information related to employee demographics."</para>
	/// <para>To remove the <c>Demographics</c>, set <c>Demographics</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public Demographics Demographics
	{
		get
		{
			return (Demographics)GetChild( ProfdevDTD.EMPLOYEECREDENTIAL_DEMOGRAPHICS);
		}
		set
		{
			RemoveChild( ProfdevDTD.EMPLOYEECREDENTIAL_DEMOGRAPHICS);
			if( value != null)
			{
				AddChild( ProfdevDTD.EMPLOYEECREDENTIAL_DEMOGRAPHICS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Race&gt;</c> element.
	/// </summary>
	/// <value> The <c>Race</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Primary employee's race"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string Race
	{
		get
		{ 
			return GetFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_RACE );
		}
		set
		{
			SetField( ProfdevDTD.EMPLOYEECREDENTIAL_RACE, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;Race&gt;</c> element.
	/// </summary>
	/// <param name="val">A RaceType object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Primary employee's race"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetRace( RaceType val )
	{
		SetField( ProfdevDTD.EMPLOYEECREDENTIAL_RACE, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Hispanic&gt;</c> element.
	/// </summary>
	/// <value> The <c>Hispanic</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Is this employee Hispanic or Latino?"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string Hispanic
	{
		get
		{ 
			return GetFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_HISPANIC );
		}
		set
		{
			SetField( ProfdevDTD.EMPLOYEECREDENTIAL_HISPANIC, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;Hispanic&gt;</c> element.
	/// </summary>
	/// <param name="val">A YesNo object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Is this employee Hispanic or Latino?"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetHispanic( YesNo val )
	{
		SetField( ProfdevDTD.EMPLOYEECREDENTIAL_HISPANIC, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Certifications&gt;</c> element.
	/// </summary>
	/// <value> A Certifications </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Employee certification area information"</para>
	/// <para>To remove the <c>Certifications</c>, set <c>Certifications</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public Certifications Certifications
	{
		get
		{
			return (Certifications)GetChild( ProfdevDTD.EMPLOYEECREDENTIAL_CERTIFICATIONS);
		}
		set
		{
			RemoveChild( ProfdevDTD.EMPLOYEECREDENTIAL_CERTIFICATIONS);
			if( value != null)
			{
				AddChild( ProfdevDTD.EMPLOYEECREDENTIAL_CERTIFICATIONS, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Salary&gt;</c> element.</summary>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;MonetaryAmount&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setSalary</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Salary</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetSalary( decimal? Value ) {
		RemoveChild( ProfdevDTD.EMPLOYEECREDENTIAL_SALARY);
		AddChild( ProfdevDTD.EMPLOYEECREDENTIAL_SALARY, new MonetaryAmount( Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Salary&gt;</c> element.
	/// </summary>
	/// <value> A MonetaryAmount </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Employee's salary"</para>
	/// <para>To remove the <c>MonetaryAmount</c>, set <c>Salary</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public MonetaryAmount Salary
	{
		get
		{
			return (MonetaryAmount)GetChild( ProfdevDTD.EMPLOYEECREDENTIAL_SALARY);
		}
		set
		{
			RemoveChild( ProfdevDTD.EMPLOYEECREDENTIAL_SALARY);
			if( value != null)
			{
				AddChild( ProfdevDTD.EMPLOYEECREDENTIAL_SALARY, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Status&gt;</c> element.
	/// </summary>
	/// <value> The <c>Status</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string Status
	{
		get
		{ 
			return GetFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_STATUS );
		}
		set
		{
			SetField( ProfdevDTD.EMPLOYEECREDENTIAL_STATUS, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;Status&gt;</c> element.
	/// </summary>
	/// <param name="val">A EmploymentStatus object</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetStatus( EmploymentStatus val )
	{
		SetField( ProfdevDTD.EMPLOYEECREDENTIAL_STATUS, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Leave&gt;</c> element.
	/// </summary>
	/// <value> The <c>Leave</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Is this employee on leave this year?"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string Leave
	{
		get
		{ 
			return GetFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_LEAVE );
		}
		set
		{
			SetField( ProfdevDTD.EMPLOYEECREDENTIAL_LEAVE, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;Leave&gt;</c> element.
	/// </summary>
	/// <param name="val">A YesNo object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Is this employee on leave this year?"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetLeave( YesNo val )
	{
		SetField( ProfdevDTD.EMPLOYEECREDENTIAL_LEAVE, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;TotalYears&gt;</c> element.
	/// </summary>
	/// <value> The <c>TotalYears</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Total number of years employee has been in a professional position"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public decimal? TotalYears
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_TOTALYEARS ) ;
		}
		set
		{
			SetFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_TOTALYEARS, new SifDecimal( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;UnitYears&gt;</c> element.
	/// </summary>
	/// <value> The <c>UnitYears</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Total number of years at current LEA"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public decimal? UnitYears
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_UNITYEARS ) ;
		}
		set
		{
			SetFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_UNITYEARS, new SifDecimal( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Education&gt;</c> element.
	/// </summary>
	/// <value> The <c>Education</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Highest level of education attained by employee."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string Education
	{
		get
		{ 
			return GetFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_EDUCATION );
		}
		set
		{
			SetField( ProfdevDTD.EMPLOYEECREDENTIAL_EDUCATION, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;Education&gt;</c> element.
	/// </summary>
	/// <param name="val">A TeachingCredentialBasis object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Highest level of education attained by employee."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetEducation( TeachingCredentialBasis val )
	{
		SetField( ProfdevDTD.EMPLOYEECREDENTIAL_EDUCATION, val );
	}

	/// <summary>Adds a new <c>&lt;TeachingCredentialType&gt;</c> child element.</summary>
	/// <param name="val">A TeachingCredential object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Category in which teacher is authorized to teach"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void AddTeachingCredentialType( TeachingCredential val ) { 
		AddChild( ProfdevDTD.EMPLOYEECREDENTIAL_TEACHINGCREDENTIALTYPE, val );
	}

	///<summary>Adds the value of the <c>&lt;TeachingCredentialType&gt;</c> element.</summary>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;TeachingCredential&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setTeachingCredentialType</c> is provided as a convenience method
	/// that is functionally equivalent to the method <c>AddTeachingCredentialType</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void AddTeachingCredentialType( TeachingCredentialType Value ) {
		AddChild( ProfdevDTD.EMPLOYEECREDENTIAL_TEACHINGCREDENTIALTYPE, new TeachingCredential( Value ) );
	}

	/// <summary>
	/// Removes a <see cref="TeachingCredential"/> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	/// </summary>
	/// <param name="Value">Identifies the TeachingCredential object to remove by its Value value</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void RemoveTeachingCredentialType( TeachingCredentialType Value ) { 
		RemoveChild( ProfdevDTD.EMPLOYEECREDENTIAL_TEACHINGCREDENTIALTYPE, new String[] { Value.ToString() } );
	}

	/// <summary>
	/// Gets a <see cref="TeachingCredential"/> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	/// </summary>
	/// <param name="Value">Identifies the TeachingCredential object to return by its "Value" attribute value</param>
	/// <returns>A TeachingCredential object</returns>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public TeachingCredential GetTeachingCredentialType( TeachingCredentialType Value ) { 
		return (TeachingCredential)GetChild( ProfdevDTD.EMPLOYEECREDENTIAL_TEACHINGCREDENTIALTYPE, new string[] { Value.ToString() } );
	}

	/// <summary>
	/// Gets all TeachingCredential object instances. More than once instance can be defined for this object because it is a repeatable field element.
	/// </summary>
	/// <returns>An array of TeachingCredential objects</returns>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public TeachingCredential[] GetTeachingCredentialTypes()
	{
		return GetChildren<TeachingCredential>().ToArray();
	}

	/// <summary>
	/// Sets all TeachingCredential object instances. All existing 
	/// <c>TeachingCredential</c> instances 
	/// are removed and replaced with this list. Calling this method with the 
	/// parameter value set to null removes all <c>TeachingCredentials</c>.
	/// </summary>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetTeachingCredentialTypes( TeachingCredential[] items)
	{
		SetChildren( ProfdevDTD.EMPLOYEECREDENTIAL_TEACHINGCREDENTIALTYPE, items );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;TerminationCode&gt;</c> element.
	/// </summary>
	/// <value> The <c>TerminationCode</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "If appropriate, employment separation reason"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string TerminationCode
	{
		get
		{ 
			return GetFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_TERMINATIONCODE );
		}
		set
		{
			SetField( ProfdevDTD.EMPLOYEECREDENTIAL_TERMINATIONCODE, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;TerminationCode&gt;</c> element.
	/// </summary>
	/// <param name="val">A EmploymentSeperationReason object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "If appropriate, employment separation reason"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetTerminationCode( EmploymentSeperationReason val )
	{
		SetField( ProfdevDTD.EMPLOYEECREDENTIAL_TERMINATIONCODE, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;BackgroundChecks&gt;</c> element.
	/// </summary>
	/// <value> A BackgroundChecks </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Information about background checks done on employee"</para>
	/// <para>To remove the <c>BackgroundChecks</c>, set <c>BackgroundChecks</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public BackgroundChecks BackgroundChecks
	{
		get
		{
			return (BackgroundChecks)GetChild( ProfdevDTD.EMPLOYEECREDENTIAL_BACKGROUNDCHECKS);
		}
		set
		{
			RemoveChild( ProfdevDTD.EMPLOYEECREDENTIAL_BACKGROUNDCHECKS);
			if( value != null)
			{
				AddChild( ProfdevDTD.EMPLOYEECREDENTIAL_BACKGROUNDCHECKS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Assignments&gt;</c> element.
	/// </summary>
	/// <value> An EmployeeAssignments </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Information about the school and assignment of employee"</para>
	/// <para>To remove the <c>EmployeeAssignments</c>, set <c>Assignments</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public EmployeeAssignments Assignments
	{
		get
		{
			return (EmployeeAssignments)GetChild( ProfdevDTD.EMPLOYEECREDENTIAL_ASSIGNMENTS);
		}
		set
		{
			RemoveChild( ProfdevDTD.EMPLOYEECREDENTIAL_ASSIGNMENTS);
			if( value != null)
			{
				AddChild( ProfdevDTD.EMPLOYEECREDENTIAL_ASSIGNMENTS, value );
			}
		}
	}

}}
