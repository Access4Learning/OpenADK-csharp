// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using OpenADK.Library;

namespace OpenADK.Library.us.Profdev
{
	///<summary>
	/// Defines the set of values that can be specified whenever a TeachingCredentialType
	/// is used as a parameter to a method or constructor. 
	///</summary>
	/// <remarks>
	/// Alternatively, the static
	///  <see cref="Wrap"/> method can be called to encapsulate any string value in
	///  a TeachingCredentialType object.
	/// <para>Author: Generated by adkgen</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	[Serializable]
	public class TeachingCredentialType : SifEnum
	{
	/// <summary>Retired ("1231")</summary>
	public static readonly TeachingCredentialType RETIRED = new TeachingCredentialType("1231");

	/// <summary>Master ("1226")</summary>
	public static readonly TeachingCredentialType MASTER = new TeachingCredentialType("1226");

	/// <summary>Professional ("1225")</summary>
	public static readonly TeachingCredentialType PROFESSIONAL = new TeachingCredentialType("1225");

	/// <summary>Other ("9999")</summary>
	public static readonly TeachingCredentialType OTHER = new TeachingCredentialType("9999");

	/// <summary>Nonrenewable ("1230")</summary>
	public static readonly TeachingCredentialType NONRENEWABLE = new TeachingCredentialType("1230");

	/// <summary>Emergency ("1229")</summary>
	public static readonly TeachingCredentialType EMERGENCY = new TeachingCredentialType("1229");

	/// <summary>Probationary/initial ("1223")</summary>
	public static readonly TeachingCredentialType PROBATIONARY_INITIAL = new TeachingCredentialType("1223");

	/// <summary>Substitute ("1232")</summary>
	public static readonly TeachingCredentialType SUBSTITUTE = new TeachingCredentialType("1232");

	/// <summary>Provisional ("1224")</summary>
	public static readonly TeachingCredentialType PROVISIONAL = new TeachingCredentialType("1224");

	/// <summary>Teacher assistant ("1233")</summary>
	public static readonly TeachingCredentialType TEACHER_ASSISTANT = new TeachingCredentialType("1233");

	/// <summary>Temporary ("1228")</summary>
	public static readonly TeachingCredentialType TEMPORARY = new TeachingCredentialType("1228");

	/// <summary>Specialist ("1227")</summary>
	public static readonly TeachingCredentialType SPECIALIST = new TeachingCredentialType("1227");

	/// <summary>Intern ("1234")</summary>
	public static readonly TeachingCredentialType INTERN = new TeachingCredentialType("1234");

	/// <summary>Regular/standard ("1222")</summary>
	public static readonly TeachingCredentialType REGULAR_STANDARD = new TeachingCredentialType("1222");

	///<summary>Wrap an arbitrary string value in a TeachingCredentialType object.</summary>
	///<param name="wrappedValue">The element/attribute value.</param>
	///<remarks>This method does not verify
	///that the value is valid according to the SIF Specification</remarks>
	public static TeachingCredentialType Wrap( String wrappedValue ) {
		return new TeachingCredentialType( wrappedValue );
	}

	private TeachingCredentialType( string enumDefValue ) : base( enumDefValue ) {}
	}
}
