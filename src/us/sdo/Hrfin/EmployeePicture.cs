// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Hrfin{

/// <summary>This object contains information about an employee's picture. SIF_Events are reported.</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 1.5r1</para>
/// </remarks>
[Serializable]
public class EmployeePicture : SifDataObject
{
	/// <summary>
	/// Creates an instance of an EmployeePicture
	/// </summary>
	public EmployeePicture() : base( Adk.SifVersion, HrfinDTD.EMPLOYEEPICTURE ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="employeePersonalRefId">This is the GUID of the Employee whose picture this is.</param>
	///<param name="pictureSource">This element defines the picture. If the Type attribute is URL, this is the location of the picture in [JPEG] format; if Type is JPEG, this is the [JPEG] image data encoded using the Base64 Content-Transfer-Encoding defined in Section 6.8 of [RFC 2045].</param>
	///
	public EmployeePicture( string employeePersonalRefId, PictureSource pictureSource ) : base( Adk.SifVersion, HrfinDTD.EMPLOYEEPICTURE )
	{
		this.EmployeePersonalRefId = employeePersonalRefId;
		this.PictureSource = pictureSource;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected EmployeePicture( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { HrfinDTD.EMPLOYEEPICTURE_EMPLOYEEPERSONALREFID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>EmployeePersonalRefId</c> attribute.
	/// </summary>
	/// <value> The <c>EmployeePersonalRefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "This is the GUID of the Employee whose picture this is."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string EmployeePersonalRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( HrfinDTD.EMPLOYEEPICTURE_EMPLOYEEPERSONALREFID ) ;
		}
		set
		{
			SetFieldValue( HrfinDTD.EMPLOYEEPICTURE_EMPLOYEEPERSONALREFID, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;PictureSource&gt;</c> element.</summary>
	/// <param name="Type">The way the picture is specified.</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;PictureSource&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setPictureSource</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>PictureSource</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetPictureSource( PictureType Type, string Value ) {
		RemoveChild( HrfinDTD.EMPLOYEEPICTURE_PICTURESOURCE);
		AddChild( HrfinDTD.EMPLOYEEPICTURE_PICTURESOURCE, new PictureSource( Type, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PictureSource&gt;</c> element.
	/// </summary>
	/// <value> A PictureSource </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "This element defines the picture. If the Type attribute is URL, this is the location of the picture in [JPEG] format; if Type is JPEG, this is the [JPEG] image data encoded using the Base64 Content-Transfer-Encoding defined in Section 6.8 of [RFC 2045]."</para>
	/// <para>To remove the <c>PictureSource</c>, set <c>PictureSource</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public PictureSource PictureSource
	{
		get
		{
			return (PictureSource)GetChild( HrfinDTD.EMPLOYEEPICTURE_PICTURESOURCE);
		}
		set
		{
			RemoveChild( HrfinDTD.EMPLOYEEPICTURE_PICTURESOURCE);
			if( value != null)
			{
				AddChild( HrfinDTD.EMPLOYEEPICTURE_PICTURESOURCE, value );
			}
		}
	}

}}
