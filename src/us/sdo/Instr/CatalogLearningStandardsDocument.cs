// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Instr{

/// <summary>A curriculum standards document or the like published by a national, state, district, school site, professional association or other interested party.</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 2.4</para>
/// </remarks>
[Serializable]
public class CatalogLearningStandardsDocument : SifElement
{
	/// <summary>
	/// Creates an instance of a CatalogLearningStandardsDocument
	/// </summary>
	public CatalogLearningStandardsDocument() : base ( InstrDTD.CATALOGLEARNINGSTANDARDSDOCUMENT ){}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected CatalogLearningStandardsDocument( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets or sets the value of the <c>&lt;Title&gt;</c> element.
	/// </summary>
	/// <value> The <c>Title</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Name of the standard document, e.g., "Washington Essential Academic Learning Requirements.""</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public string Title
	{
		get
		{
			return (string) GetSifSimpleFieldValue( InstrDTD.CATALOGLEARNINGSTANDARDSDOCUMENT_TITLE ) ;
		}
		set
		{
			SetFieldValue( InstrDTD.CATALOGLEARNINGSTANDARDSDOCUMENT_TITLE, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;StandardsSettingBody&gt;</c> element.</summary>
	/// <param name="Country">The country of the standard setting body.</param>
	///<remarks>
	/// <para>This form of <c>setStandardsSettingBody</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>StandardsSettingBody</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public void SetStandardsSettingBody( CountryCode Country ) {
		RemoveChild( InstrDTD.CATALOGLEARNINGSTANDARDSDOCUMENT_STANDARDSSETTINGBODY);
		AddChild( InstrDTD.CATALOGLEARNINGSTANDARDSDOCUMENT_STANDARDSSETTINGBODY, new StandardSettingBody( Country ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StandardsSettingBody&gt;</c> element.
	/// </summary>
	/// <value> A StandardSettingBody </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The name of the state or organization that authored and manages updates to the standards document (e.g., NCTM, Ohio Department of Education)."</para>
	/// <para>To remove the <c>StandardSettingBody</c>, set <c>StandardsSettingBody</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public StandardSettingBody StandardsSettingBody
	{
		get
		{
			return (StandardSettingBody)GetChild( InstrDTD.CATALOGLEARNINGSTANDARDSDOCUMENT_STANDARDSSETTINGBODY);
		}
		set
		{
			RemoveChild( InstrDTD.CATALOGLEARNINGSTANDARDSDOCUMENT_STANDARDSSETTINGBODY);
			if( value != null)
			{
				AddChild( InstrDTD.CATALOGLEARNINGSTANDARDSDOCUMENT_STANDARDSSETTINGBODY, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;StatementCodes&gt;</c> element.</summary>
	/// <param name="StatementCode">An alphanumeric ID code as defined by the organization to identify the statement.</param>
	///<remarks>
	/// <para>This form of <c>setStatementCodes</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>StatementCodes</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public void SetStatementCodes( StatementCode StatementCode ) {
		RemoveChild( InstrDTD.CATALOGLEARNINGSTANDARDSDOCUMENT_STATEMENTCODES);
		AddChild( InstrDTD.CATALOGLEARNINGSTANDARDSDOCUMENT_STATEMENTCODES, new StatementCodes( StatementCode ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StatementCodes&gt;</c> element.
	/// </summary>
	/// <value> A StatementCodes </value>
	/// <remarks>
	/// <para>To remove the <c>StatementCodes</c>, set <c>StatementCodes</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public StatementCodes StatementCodes
	{
		get
		{
			return (StatementCodes)GetChild( InstrDTD.CATALOGLEARNINGSTANDARDSDOCUMENT_STATEMENTCODES);
		}
		set
		{
			RemoveChild( InstrDTD.CATALOGLEARNINGSTANDARDSDOCUMENT_STATEMENTCODES);
			if( value != null)
			{
				AddChild( InstrDTD.CATALOGLEARNINGSTANDARDSDOCUMENT_STATEMENTCODES, value );
			}
		}
	}

}}
