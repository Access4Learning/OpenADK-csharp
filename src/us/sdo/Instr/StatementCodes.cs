// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Instr{

/// <summary>A StatementCodes</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 1.5r1</para>
/// </remarks>
[Serializable]
public class StatementCodes : SifKeyedList<StatementCode>
{
	/// <summary>
	/// Creates an instance of a StatementCodes
	/// </summary>
	public StatementCodes() : base ( InstrDTD.STATEMENTCODES ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="statementCode">An alphanumeric ID code as defined by the organization to identify the statement.</param>
	///
	public StatementCodes( StatementCode statementCode ) : base( InstrDTD.STATEMENTCODES )
	{
		this.SafeAddChild( InstrDTD.STATEMENTCODES_STATEMENTCODE, statementCode );
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected StatementCodes( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public  IElementDef[] KeyFields {
		get { return new IElementDef[] { InstrDTD.STATEMENTCODES_STATEMENTCODE }; }
	}

	///<summary>Adds the value of the <c>&lt;StatementCode&gt;</c> element.</summary>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;StatementCode&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setStatementCode</c> is provided as a convenience method
	/// that is functionally equivalent to the method <c>AddStatementCode</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void AddStatementCode( string Value ) {
		AddChild( InstrDTD.STATEMENTCODES_STATEMENTCODE, new StatementCode( Value ) );
	}

}}
