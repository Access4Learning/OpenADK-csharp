// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Instr{

/// <summary>A TargetObjects</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.6</para>
/// </remarks>
[Serializable]
public class TargetObjects : SifElement
{
	/// <summary>
	/// Creates an instance of a TargetObjects
	/// </summary>
	public TargetObjects() : base ( InstrDTD.TARGETOBJECTS ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="targetObject">At least one target for the learning standard linkage.</param>
	///<param name="sifRefId">The RefId for the LearningResource or AssessmentItem</param>
	///
	public TargetObjects( TargetObject targetObject, string sifRefId ) : base( InstrDTD.TARGETOBJECTS )
	{
		this.AddTargetObject( targetObject );
		this.SIF_RefId = sifRefId;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected TargetObjects( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public  IElementDef[] KeyFields {
		get { return new IElementDef[] { InstrDTD.TARGETOBJECTS_TARGETOBJECT, InstrDTD.TARGETOBJECTS_SIF_REFID }; }
	}

	/// <summary>Adds a new <c>&lt;TargetObject&gt;</c> child element.</summary>
	/// <param name="val">A TargetObject object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "At least one target for the learning standard linkage."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void AddTargetObject( TargetObject val ) { 
		AddChild( InstrDTD.TARGETOBJECTS_TARGETOBJECT, val );
	}

	///<summary>Adds the value of the <c>&lt;TargetObject&gt;</c> element.</summary>
	/// <param name="ObjectType">The Target Object name referenced.</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;TargetObject&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setTargetObject</c> is provided as a convenience method
	/// that is functionally equivalent to the method <c>AddTargetObject</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void AddTargetObject( ObjectTypeTarget ObjectType, string Value ) {
		AddChild( InstrDTD.TARGETOBJECTS_TARGETOBJECT, new TargetObject( ObjectType, Value ) );
	}

	/// <summary>
	/// Removes a <see cref="TargetObject"/> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	/// </summary>
	/// <param name="ObjectType">Identifies the TargetObject object to remove by its ObjectType value</param>
	/// <remarks>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void RemoveTargetObject( ObjectTypeTarget ObjectType ) { 
		RemoveChild( InstrDTD.TARGETOBJECTS_TARGETOBJECT, new String[] { ObjectType.ToString() } );
	}

	/// <summary>
	/// Gets a <see cref="TargetObject"/> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	/// </summary>
	/// <param name="ObjectType">Identifies the TargetObject object to return by its "ObjectType" attribute value</param>
	/// <returns>A TargetObject object</returns>
	/// <remarks>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public TargetObject GetTargetObject( ObjectTypeTarget ObjectType ) { 
		return (TargetObject)GetChild( InstrDTD.TARGETOBJECTS_TARGETOBJECT, new string[] { ObjectType.ToString() } );
	}

	/// <summary>
	/// Gets all TargetObject object instances. More than once instance can be defined for this object because it is a repeatable field element.
	/// </summary>
	/// <returns>An array of TargetObject objects</returns>
	/// <remarks>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public TargetObject[] GetTargetObjects()
	{
		return GetChildren<TargetObject>().ToArray();
	}

	/// <summary>
	/// Sets all TargetObject object instances. All existing 
	/// <c>TargetObject</c> instances 
	/// are removed and replaced with this list. Calling this method with the 
	/// parameter value set to null removes all <c>TargetObjects</c>.
	/// </summary>
	/// <remarks>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void SetTargetObjects( TargetObject[] items)
	{
		SetChildren( InstrDTD.TARGETOBJECTS_TARGETOBJECT, items );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SIF_RefId&gt;</c> element.
	/// </summary>
	/// <value> The <c>SIF_RefId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The RefId for the LearningResource or AssessmentItem"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string SIF_RefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( InstrDTD.TARGETOBJECTS_SIF_REFID ) ;
		}
		set
		{
			SetFieldValue( InstrDTD.TARGETOBJECTS_SIF_REFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AssociationStrength&gt;</c> element.
	/// </summary>
	/// <value> The <c>AssociationStrength</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "A number greater than 0 and less than or equal to 1. This indicates the strength of the association between the one or more Learning Standards and this target object."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public decimal? AssociationStrength
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( InstrDTD.TARGETOBJECTS_ASSOCIATIONSTRENGTH ) ;
		}
		set
		{
			SetFieldValue( InstrDTD.TARGETOBJECTS_ASSOCIATIONSTRENGTH, new SifDecimal( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AssociationType&gt;</c> element.
	/// </summary>
	/// <value> The <c>AssociationType</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The type of relationship or cardinality being modeled, e.g., predecessor, prerequisite, unidirectional, nondirectional, is a component of, etc."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string AssociationType
	{
		get
		{
			return (string) GetSifSimpleFieldValue( InstrDTD.TARGETOBJECTS_ASSOCIATIONTYPE ) ;
		}
		set
		{
			SetFieldValue( InstrDTD.TARGETOBJECTS_ASSOCIATIONTYPE, new SifString( value ), value );
		}
	}

}}
