// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Instr{

/// <summary>The work assigned to students, an educational event planned by a teacher to deliver a particular educational concept or skill.  SIF_Events are reported.</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 1.5r1</para>
/// </remarks>
[Serializable]
public class Activity : SifDataObject
{
	/// <summary>
	/// Creates an instance of an Activity
	/// </summary>
	public Activity() : base( Adk.SifVersion, InstrDTD.ACTIVITY ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="refId">A RefId</param>
	///<param name="language">A Language</param>
	///<param name="activityTime">Time structures for the activity.</param>
	///
	public Activity( string refId, LanguageCode language, ActivityTime activityTime ) : base( Adk.SifVersion, InstrDTD.ACTIVITY )
	{
		this.RefId = refId;
		this.SetLanguage( language );
		this.ActivityTime = activityTime;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected Activity( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { InstrDTD.ACTIVITY_REFID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>RefId</c> attribute.
	/// </summary>
	/// <value> The <c>RefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public override string RefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( InstrDTD.ACTIVITY_REFID ) ;
		}
		set
		{
			SetFieldValue( InstrDTD.ACTIVITY_REFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>Language</c> attribute.
	/// </summary>
	/// <value> The <c>Language</c> attribute of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string Language
	{
		get
		{ 
			return GetFieldValue( InstrDTD.ACTIVITY_LANGUAGE );
		}
		set
		{
			SetField( InstrDTD.ACTIVITY_LANGUAGE, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>Language</c> attribute.
	/// </summary>
	/// <param name="val">A LanguageCode object</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetLanguage( LanguageCode val )
	{
		SetField( InstrDTD.ACTIVITY_LANGUAGE, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;TechnicalRequirements&gt;</c> element.
	/// </summary>
	/// <value> A TechnicalRequirements </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Applications, OS, and network requirements for activity if applicable."</para>
	/// <para>To remove the <c>TechnicalRequirements</c>, set <c>TechnicalRequirements</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public TechnicalRequirements TechnicalRequirements
	{
		get
		{
			return (TechnicalRequirements)GetChild( InstrDTD.ACTIVITY_TECHNICALREQUIREMENTS);
		}
		set
		{
			RemoveChild( InstrDTD.ACTIVITY_TECHNICALREQUIREMENTS);
			if( value != null)
			{
				AddChild( InstrDTD.ACTIVITY_TECHNICALREQUIREMENTS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EssentialMaterials&gt;</c> element.
	/// </summary>
	/// <value> An EssentialMaterials </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Essential materials required to engage in this activity."</para>
	/// <para>To remove the <c>EssentialMaterials</c>, set <c>EssentialMaterials</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public EssentialMaterials EssentialMaterials
	{
		get
		{
			return (EssentialMaterials)GetChild( InstrDTD.ACTIVITY_ESSENTIALMATERIALS);
		}
		set
		{
			RemoveChild( InstrDTD.ACTIVITY_ESSENTIALMATERIALS);
			if( value != null)
			{
				AddChild( InstrDTD.ACTIVITY_ESSENTIALMATERIALS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Title&gt;</c> element.
	/// </summary>
	/// <value> The <c>Title</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Descriptive name of the activity."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string Title
	{
		get
		{
			return (string) GetSifSimpleFieldValue( InstrDTD.ACTIVITY_TITLE ) ;
		}
		set
		{
			SetFieldValue( InstrDTD.ACTIVITY_TITLE, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Preamble&gt;</c> element.
	/// </summary>
	/// <value> The <c>Preamble</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Description and context for the activity."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string Preamble
	{
		get
		{
			return (string) GetSifSimpleFieldValue( InstrDTD.ACTIVITY_PREAMBLE ) ;
		}
		set
		{
			SetFieldValue( InstrDTD.ACTIVITY_PREAMBLE, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;LearningObjectives&gt;</c> element.
	/// </summary>
	/// <value> A LearningObjectives </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Description of the educational objective of the activity."</para>
	/// <para>To remove the <c>LearningObjectives</c>, set <c>LearningObjectives</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public LearningObjectives LearningObjectives
	{
		get
		{
			return (LearningObjectives)GetChild( InstrDTD.ACTIVITY_LEARNINGOBJECTIVES);
		}
		set
		{
			RemoveChild( InstrDTD.ACTIVITY_LEARNINGOBJECTIVES);
			if( value != null)
			{
				AddChild( InstrDTD.ACTIVITY_LEARNINGOBJECTIVES, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;LearningStandards&gt;</c> element.
	/// </summary>
	/// <value> A LearningStandards </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Link from activity to associated LearningStandardItem objects."</para>
	/// <para>To remove the <c>LearningStandards</c>, set <c>LearningStandards</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public LearningStandards LearningStandards
	{
		get
		{
			return (LearningStandards)GetChild( InstrDTD.ACTIVITY_LEARNINGSTANDARDS);
		}
		set
		{
			RemoveChild( InstrDTD.ACTIVITY_LEARNINGSTANDARDS);
			if( value != null)
			{
				AddChild( InstrDTD.ACTIVITY_LEARNINGSTANDARDS, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;SubjectArea&gt;</c> element.</summary>
	/// <param name="Code">The subject area code (i.e. the first two digits of the course classification code)</param>
	///<remarks>
	/// <para>This form of <c>setSubjectArea</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>SubjectArea</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetSubjectArea( string Code ) {
		RemoveChild( InstrDTD.ACTIVITY_SUBJECTAREA);
		AddChild( InstrDTD.ACTIVITY_SUBJECTAREA, new SubjectArea( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SubjectArea&gt;</c> element.
	/// </summary>
	/// <value> A SubjectArea </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Refer to section 5.1.30 SubjectArea."</para>
	/// <para>To remove the <c>SubjectArea</c>, set <c>SubjectArea</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public SubjectArea SubjectArea
	{
		get
		{
			return (SubjectArea)GetChild( InstrDTD.ACTIVITY_SUBJECTAREA);
		}
		set
		{
			RemoveChild( InstrDTD.ACTIVITY_SUBJECTAREA);
			if( value != null)
			{
				AddChild( InstrDTD.ACTIVITY_SUBJECTAREA, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Prerequisites&gt;</c> element.
	/// </summary>
	/// <value> A Prerequisites </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Skills or competencies the student must have to engage in activity."</para>
	/// <para>To remove the <c>Prerequisites</c>, set <c>Prerequisites</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public Prerequisites Prerequisites
	{
		get
		{
			return (Prerequisites)GetChild( InstrDTD.ACTIVITY_PREREQUISITES);
		}
		set
		{
			RemoveChild( InstrDTD.ACTIVITY_PREREQUISITES);
			if( value != null)
			{
				AddChild( InstrDTD.ACTIVITY_PREREQUISITES, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Students&gt;</c> element.</summary>
	/// <param name="StudentPersonalRefId">GUID that identifies the student that this element refers to.</param>
	///<remarks>
	/// <para>This form of <c>setStudents</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Students</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetStudents( StudentPersonalRefId StudentPersonalRefId ) {
		RemoveChild( InstrDTD.ACTIVITY_STUDENTS);
		AddChild( InstrDTD.ACTIVITY_STUDENTS, new Students( StudentPersonalRefId ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Students&gt;</c> element.
	/// </summary>
	/// <value> A Students </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Link to any student or group or category of students that this activity is for."</para>
	/// <para>To remove the <c>Students</c>, set <c>Students</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public Students Students
	{
		get
		{
			return (Students)GetChild( InstrDTD.ACTIVITY_STUDENTS);
		}
		set
		{
			RemoveChild( InstrDTD.ACTIVITY_STUDENTS);
			if( value != null)
			{
				AddChild( InstrDTD.ACTIVITY_STUDENTS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SourceObjects&gt;</c> element.
	/// </summary>
	/// <value> A SourceObjects </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "GUID assigned to the source object.  The source object is the "thing" being assigned to a student."</para>
	/// <para>To remove the <c>SourceObjects</c>, set <c>SourceObjects</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public SourceObjects SourceObjects
	{
		get
		{
			return (SourceObjects)GetChild( InstrDTD.ACTIVITY_SOURCEOBJECTS);
		}
		set
		{
			RemoveChild( InstrDTD.ACTIVITY_SOURCEOBJECTS);
			if( value != null)
			{
				AddChild( InstrDTD.ACTIVITY_SOURCEOBJECTS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Points&gt;</c> element.
	/// </summary>
	/// <value> The <c>Points</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Number of possible points for an activity."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public int? Points
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( InstrDTD.ACTIVITY_POINTS ) ;
		}
		set
		{
			SetFieldValue( InstrDTD.ACTIVITY_POINTS, new SifInt( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;ActivityTime&gt;</c> element.</summary>
	/// <param name="CreationDate">Creation date of the activity.</param>
	///<remarks>
	/// <para>This form of <c>setActivityTime</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ActivityTime</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetActivityTime( DateTime? CreationDate ) {
		RemoveChild( InstrDTD.ACTIVITY_ACTIVITYTIME);
		AddChild( InstrDTD.ACTIVITY_ACTIVITYTIME, new ActivityTime( CreationDate ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ActivityTime&gt;</c> element.
	/// </summary>
	/// <value> An ActivityTime </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Time structures for the activity."</para>
	/// <para>To remove the <c>ActivityTime</c>, set <c>ActivityTime</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public ActivityTime ActivityTime
	{
		get
		{
			return (ActivityTime)GetChild( InstrDTD.ACTIVITY_ACTIVITYTIME);
		}
		set
		{
			RemoveChild( InstrDTD.ACTIVITY_ACTIVITYTIME);
			if( value != null)
			{
				AddChild( InstrDTD.ACTIVITY_ACTIVITYTIME, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AssessmentRefId&gt;</c> element.
	/// </summary>
	/// <value> The <c>AssessmentRefId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Link to the SIF Assessment object containing the evaluation information for this activity."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string AssessmentRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( InstrDTD.ACTIVITY_ASSESSMENTREFID ) ;
		}
		set
		{
			SetFieldValue( InstrDTD.ACTIVITY_ASSESSMENTREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;MaxAttemptsAllowed&gt;</c> element.
	/// </summary>
	/// <value> The <c>MaxAttemptsAllowed</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "How many tries allowed."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public int? MaxAttemptsAllowed
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( InstrDTD.ACTIVITY_MAXATTEMPTSALLOWED ) ;
		}
		set
		{
			SetFieldValue( InstrDTD.ACTIVITY_MAXATTEMPTSALLOWED, new SifInt( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ActivityWeight&gt;</c> element.
	/// </summary>
	/// <value> The <c>ActivityWeight</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The percentage weight of the activity during the particular course or term."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public decimal? ActivityWeight
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( InstrDTD.ACTIVITY_ACTIVITYWEIGHT ) ;
		}
		set
		{
			SetFieldValue( InstrDTD.ACTIVITY_ACTIVITYWEIGHT, new SifDecimal( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;Evaluation&gt;</c> element.</summary>
	/// <param name="EvaluationType">A qualifer for what type of evaluation this is.  Valid values are "Inline" and "RefId".  Inline values are contained in the optional Description element, RefIds are contained in the AssessmentRefId element.</param>
	///<remarks>
	/// <para>This form of <c>setEvaluation</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Evaluation</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetEvaluation( EvaluationType EvaluationType ) {
		RemoveChild( InstrDTD.ACTIVITY_EVALUATION);
		AddChild( InstrDTD.ACTIVITY_EVALUATION, new Evaluation( EvaluationType ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Evaluation&gt;</c> element.
	/// </summary>
	/// <value> An Evaluation </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Field for non-numeric types of grading and evaluation such as "narrative.""</para>
	/// <para>To remove the <c>Evaluation</c>, set <c>Evaluation</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public Evaluation Evaluation
	{
		get
		{
			return (Evaluation)GetChild( InstrDTD.ACTIVITY_EVALUATION);
		}
		set
		{
			RemoveChild( InstrDTD.ACTIVITY_EVALUATION);
			if( value != null)
			{
				AddChild( InstrDTD.ACTIVITY_EVALUATION, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;LearningResources&gt;</c> element.
	/// </summary>
	/// <value> A LearningResources </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "A GUID reference to a SIF LearningResource object that support this activity"</para>
	/// <para>To remove the <c>LearningResources</c>, set <c>LearningResources</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public LearningResources LearningResources
	{
		get
		{
			return (LearningResources)GetChild( InstrDTD.ACTIVITY_LEARNINGRESOURCES);
		}
		set
		{
			RemoveChild( InstrDTD.ACTIVITY_LEARNINGRESOURCES);
			if( value != null)
			{
				AddChild( InstrDTD.ACTIVITY_LEARNINGRESOURCES, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SoftwareRequirementList&gt;</c> element.
	/// </summary>
	/// <value> A SoftwareRequirementList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Contains information about required software."</para>
	/// <para>To remove the <c>SoftwareRequirementList</c>, set <c>SoftwareRequirementList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public SoftwareRequirementList SoftwareRequirementList
	{
		get
		{
			return (SoftwareRequirementList)GetChild( InstrDTD.ACTIVITY_SOFTWAREREQUIREMENTLIST);
		}
		set
		{
			RemoveChild( InstrDTD.ACTIVITY_SOFTWAREREQUIREMENTLIST);
			if( value != null)
			{
				AddChild( InstrDTD.ACTIVITY_SOFTWAREREQUIREMENTLIST, value );
			}
		}
	}

}}
