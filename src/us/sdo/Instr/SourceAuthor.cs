// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Instr{

/// <summary>A SourceAuthor</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 1.5r1</para>
/// </remarks>
[Serializable]
public class SourceAuthor : SifElement
{
	/// <summary>
	/// Creates an instance of a SourceAuthor
	/// </summary>
	public SourceAuthor() : base ( InstrDTD.SOURCEAUTHOR ){}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected SourceAuthor( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	///<summary>Sets the value of the <c>&lt;Name&gt;</c> element.</summary>
	/// <param name="Type">Code that specifies what type of name this is.  If unsure, use 04.</param>
	/// <param name="LastName">The last name.</param>
	/// <param name="FirstName">The first name.</param>
	///<remarks>
	/// <para>This form of <c>setName</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Name</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetName( NameType Type, string LastName, string FirstName ) {
		RemoveChild( InstrDTD.SOURCEAUTHOR_NAME);
		AddChild( InstrDTD.SOURCEAUTHOR_NAME, new Name( Type, LastName, FirstName ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Name&gt;</c> element.
	/// </summary>
	/// <value> A Name </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Name of the author."</para>
	/// <para>To remove the <c>Name</c>, set <c>Name</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public Name Name
	{
		get
		{
			return (Name)GetChild( InstrDTD.SOURCEAUTHOR_NAME);
		}
		set
		{
			RemoveChild( InstrDTD.SOURCEAUTHOR_NAME);
			if( value != null)
			{
				AddChild( InstrDTD.SOURCEAUTHOR_NAME, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Organization&gt;</c> element.
	/// </summary>
	/// <value> The <c>Organization</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Organization name."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string Organization
	{
		get
		{
			return (string) GetSifSimpleFieldValue( InstrDTD.SOURCEAUTHOR_ORGANIZATION ) ;
		}
		set
		{
			SetFieldValue( InstrDTD.SOURCEAUTHOR_ORGANIZATION, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;Address&gt;</c> element.</summary>
	/// <param name="Type">Code that defines the location of the address.  Note:  A subset of specific valid values for each instance in a data object may be listed in that object.</param>
	/// <param name="Street">The street part of the address</param>
	/// <param name="City">The city part of the address.</param>
	/// <param name="StateProvince">The state or province code.</param>
	/// <param name="Country">The country code.</param>
	/// <param name="PostalCode">The ZIP/postal code.</param>
	///<remarks>
	/// <para>This form of <c>setAddress</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Address</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetAddress( AddressType Type, Street Street, string City, StatePrCode StateProvince, CountryCode Country, string PostalCode ) {
		RemoveChild( InstrDTD.SOURCEAUTHOR_ADDRESS);
		AddChild( InstrDTD.SOURCEAUTHOR_ADDRESS, new Address( Type, Street, City, StateProvince, Country, PostalCode ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Address&gt;</c> element.
	/// </summary>
	/// <value> An Address </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Address of the author."</para>
	/// <para>To remove the <c>Address</c>, set <c>Address</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public Address Address
	{
		get
		{
			return (Address)GetChild( InstrDTD.SOURCEAUTHOR_ADDRESS);
		}
		set
		{
			RemoveChild( InstrDTD.SOURCEAUTHOR_ADDRESS);
			if( value != null)
			{
				AddChild( InstrDTD.SOURCEAUTHOR_ADDRESS, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Email&gt;</c> element.</summary>
	/// <param name="Type">This attribute specifies the type of e-mail address.</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;Email&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setEmail</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Email</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetEmail( EmailType Type, string Value ) {
		RemoveChild( InstrDTD.SOURCEAUTHOR_EMAIL);
		AddChild( InstrDTD.SOURCEAUTHOR_EMAIL, new Email( Type, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Email&gt;</c> element.
	/// </summary>
	/// <value> An Email </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Email address of the author."</para>
	/// <para>To remove the <c>Email</c>, set <c>Email</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public Email Email
	{
		get
		{
			return (Email)GetChild( InstrDTD.SOURCEAUTHOR_EMAIL);
		}
		set
		{
			RemoveChild( InstrDTD.SOURCEAUTHOR_EMAIL);
			if( value != null)
			{
				AddChild( InstrDTD.SOURCEAUTHOR_EMAIL, value );
			}
		}
	}

}}
