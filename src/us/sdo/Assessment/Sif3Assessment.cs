// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Assessment{

/// <summary>A Sif3Assessment</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.6</para>
/// </remarks>
[Serializable]
public class Sif3Assessment : SifDataObject
{
	/// <summary>
	/// Creates an instance of a Sif3Assessment
	/// </summary>
	public Sif3Assessment() : base( Adk.SifVersion, AssessmentDTD.SIF3ASSESSMENT ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="refId">The GUID that uniquely identifies this object.</param>
	///<param name="name">Name of the test.</param>
	///
	public Sif3Assessment( string refId, string name ) : base( Adk.SifVersion, AssessmentDTD.SIF3ASSESSMENT )
	{
		this.RefId = refId;
		this.Name = name;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected Sif3Assessment( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { AssessmentDTD.SIF3ASSESSMENT_REFID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>RefId</c> attribute.
	/// </summary>
	/// <value> The <c>RefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The GUID that uniquely identifies this object."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public override string RefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENT_REFID ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.SIF3ASSESSMENT_REFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Name&gt;</c> element.
	/// </summary>
	/// <value> The <c>Name</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Name of the test."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string Name
	{
		get
		{
			return (string) GetSifSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENT_NAME ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.SIF3ASSESSMENT_NAME, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;AssessmentIdentifiers&gt;</c> element.</summary>
	/// <param name="AssessmentIdentifier">A list of all assessment identifiers that may be associated with this assessment.</param>
	///<remarks>
	/// <para>This form of <c>setAssessmentIdentifiers</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>AssessmentIdentifiers</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void SetAssessmentIdentifiers( AssessmentIdentifier AssessmentIdentifier ) {
		RemoveChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTIDENTIFIERS);
		AddChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTIDENTIFIERS, new AssessmentIdentifiers( AssessmentIdentifier ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AssessmentIdentifiers&gt;</c> element.
	/// </summary>
	/// <value> An AssessmentIdentifiers </value>
	/// <remarks>
	/// <para>To remove the <c>AssessmentIdentifiers</c>, set <c>AssessmentIdentifiers</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public AssessmentIdentifiers AssessmentIdentifiers
	{
		get
		{
			return (AssessmentIdentifiers)GetChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTIDENTIFIERS);
		}
		set
		{
			RemoveChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTIDENTIFIERS);
			if( value != null)
			{
				AddChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTIDENTIFIERS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AssessmentPackageRefId&gt;</c> element.
	/// </summary>
	/// <value> The <c>AssessmentPackageRefId</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string AssessmentPackageRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTPACKAGEREFID ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTPACKAGEREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AssessmentDescriptors&gt;</c> element.
	/// </summary>
	/// <value> An AssessmentDescriptors </value>
	/// <remarks>
	/// <para>To remove the <c>AssessmentDescriptors</c>, set <c>AssessmentDescriptors</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public AssessmentDescriptors AssessmentDescriptors
	{
		get
		{
			return (AssessmentDescriptors)GetChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTDESCRIPTORS);
		}
		set
		{
			RemoveChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTDESCRIPTORS);
			if( value != null)
			{
				AddChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTDESCRIPTORS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AssessmentProvider&gt;</c> element.
	/// </summary>
	/// <value> The <c>AssessmentProvider</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Identifies the provider or publisher of the assessment."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string AssessmentProvider
	{
		get
		{
			return (string) GetSifSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTPROVIDER ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTPROVIDER, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;AssessmentItemBanks&gt;</c> element.</summary>
	/// <param name="AssessmentItemBank">A wrapper for the Item Bank elements.</param>
	///<remarks>
	/// <para>This form of <c>setAssessmentItemBanks</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>AssessmentItemBanks</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void SetAssessmentItemBanks( AssessmentItemBank AssessmentItemBank ) {
		RemoveChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTITEMBANKS);
		AddChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTITEMBANKS, new AssessmentItemBanks( AssessmentItemBank ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AssessmentItemBanks&gt;</c> element.
	/// </summary>
	/// <value> An AssessmentItemBanks </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Assessments may be part of one or more item banks."</para>
	/// <para>To remove the <c>AssessmentItemBanks</c>, set <c>AssessmentItemBanks</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public AssessmentItemBanks AssessmentItemBanks
	{
		get
		{
			return (AssessmentItemBanks)GetChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTITEMBANKS);
		}
		set
		{
			RemoveChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTITEMBANKS);
			if( value != null)
			{
				AddChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTITEMBANKS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AssessmentSubjects&gt;</c> element.
	/// </summary>
	/// <value> A SubjectAreaList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The assessment may be designed to measure specific subject areas. Note that grade levels are also
	///                 included in the Assessment Form object. Specific forms of an assessment may have more granularity.
	///             "</para>
	/// <para>To remove the <c>SubjectAreaList</c>, set <c>AssessmentSubjects</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public SubjectAreaList AssessmentSubjects
	{
		get
		{
			return (SubjectAreaList)GetChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTSUBJECTS);
		}
		set
		{
			RemoveChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTSUBJECTS);
			if( value != null)
			{
				AddChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTSUBJECTS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AssessmentGradeLevels&gt;</c> element.
	/// </summary>
	/// <value> A GradeLevels </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The assessment may be designed for specific grade levels. Note that grade levels are also included in
	///                 the Assessment Form object. Specific forms of an assessment may have more granularity.
	///             "</para>
	/// <para>To remove the <c>GradeLevels</c>, set <c>AssessmentGradeLevels</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public GradeLevels AssessmentGradeLevels
	{
		get
		{
			return (GradeLevels)GetChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTGRADELEVELS);
		}
		set
		{
			RemoveChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTGRADELEVELS);
			if( value != null)
			{
				AddChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTGRADELEVELS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AssessmentLanguages&gt;</c> element.
	/// </summary>
	/// <value> A LanguageList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The assessment may be available in multiple languages. This list will indicate which languages are
	///                 available.
	///             "</para>
	/// <para>To remove the <c>LanguageList</c>, set <c>AssessmentLanguages</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public LanguageList AssessmentLanguages
	{
		get
		{
			return (LanguageList)GetChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTLANGUAGES);
		}
		set
		{
			RemoveChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTLANGUAGES);
			if( value != null)
			{
				AddChild( AssessmentDTD.SIF3ASSESSMENT_ASSESSMENTLANGUAGES, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;LearningStandardItemRefIds&gt;</c> element.
	/// </summary>
	/// <value> A LearningStandardItemRefIds </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "This list identifies all learning standards that may be measured by this assessment"</para>
	/// <para>To remove the <c>LearningStandardItemRefIds</c>, set <c>LearningStandardItemRefIds</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public LearningStandardItemRefIds LearningStandardItemRefIds
	{
		get
		{
			return (LearningStandardItemRefIds)GetChild( AssessmentDTD.SIF3ASSESSMENT_LEARNINGSTANDARDITEMREFIDS);
		}
		set
		{
			RemoveChild( AssessmentDTD.SIF3ASSESSMENT_LEARNINGSTANDARDITEMREFIDS);
			if( value != null)
			{
				AddChild( AssessmentDTD.SIF3ASSESSMENT_LEARNINGSTANDARDITEMREFIDS, value );
			}
		}
	}

}}
