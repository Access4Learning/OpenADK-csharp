// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Assessment{

/// <summary>A psychological construct measured by the assessment. Operationally, a subtest is a class of scores on an assessment. Some assessments may have only one subtest or type of score but most assessments measure more than one psychological construct. The subtest can be based upon items in a section or items that are empirically related. Subtests can also be composites of other subtests that are combined using a particular algorithm. Examples of subtests of an assessment are math total, reading composite, total test, and English composition.</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.6</para>
/// </remarks>
[Serializable]
public class Sif3AssessmentSubTest : SifDataObject
{
	/// <summary>
	/// Creates an instance of a Sif3AssessmentSubTest
	/// </summary>
	public Sif3AssessmentSubTest() : base( Adk.SifVersion, AssessmentDTD.SIF3ASSESSMENTSUBTEST ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="refId">A RefId</param>
	///<param name="subTestName">Text name of the subtest</param>
	///
	public Sif3AssessmentSubTest( string refId, string subTestName ) : base( Adk.SifVersion, AssessmentDTD.SIF3ASSESSMENTSUBTEST )
	{
		this.RefId = refId;
		this.SubTestName = subTestName;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected Sif3AssessmentSubTest( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { AssessmentDTD.SIF3ASSESSMENTSUBTEST_REFID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>RefId</c> attribute.
	/// </summary>
	/// <value> The <c>RefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public override string RefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_REFID ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_REFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SubTestVersion&gt;</c> element.
	/// </summary>
	/// <value> The <c>SubTestVersion</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Identifies the version of the subtest that this object instance represents. Note that new versions of subtests must generate new RefIds and therefore a new subtest object instance. The format of the numbering system is determined by the assessment provider."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string SubTestVersion
	{
		get
		{
			return (string) GetSifSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTVERSION ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTVERSION, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SubTestPublishDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>SubTestPublishDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Identifies the date that this version of the subtest was published (published means made available for use). If a SubTestVersion is provided, then this element should also be provided."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public DateTime? SubTestPublishDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTPUBLISHDATE ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTPUBLISHDATE, new SifDateTime( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;SubTestIdentifiers&gt;</c> element.</summary>
	/// <param name="SubTestIdentifier">An internal or natural identifier for the SubTest used by the assessment system</param>
	///<remarks>
	/// <para>This form of <c>setSubTestIdentifiers</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>SubTestIdentifiers</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void SetSubTestIdentifiers( SubTestIdentifier SubTestIdentifier ) {
		RemoveChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTIDENTIFIERS);
		AddChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTIDENTIFIERS, new SubTestIdentifiers( SubTestIdentifier ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SubTestIdentifiers&gt;</c> element.
	/// </summary>
	/// <value> A SubTestIdentifiers </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "If the authoring system provides for a unique coding system for subtests then this element is used to store that information."</para>
	/// <para>To remove the <c>SubTestIdentifiers</c>, set <c>SubTestIdentifiers</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public SubTestIdentifiers SubTestIdentifiers
	{
		get
		{
			return (SubTestIdentifiers)GetChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTIDENTIFIERS);
		}
		set
		{
			RemoveChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTIDENTIFIERS);
			if( value != null)
			{
				AddChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTIDENTIFIERS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SubTestName&gt;</c> element.
	/// </summary>
	/// <value> The <c>SubTestName</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Text name of the subtest"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string SubTestName
	{
		get
		{
			return (string) GetSifSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTNAME ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTNAME, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;ScoreReporting&gt;</c> element.</summary>
	/// <param name="ScoreMetric">The metric or scale used to report the scores.</param>
	///<remarks>
	/// <para>This form of <c>setScoreReporting</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ScoreReporting</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void SetScoreReporting( AssessmentReportingMethod ScoreMetric ) {
		RemoveChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SCOREREPORTING);
		AddChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SCOREREPORTING, new ScoreReporting( ScoreMetric ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ScoreReporting&gt;</c> element.
	/// </summary>
	/// <value> A ScoreReporting </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Information about the scores reported about the subtest."</para>
	/// <para>To remove the <c>ScoreReporting</c>, set <c>ScoreReporting</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public ScoreReporting ScoreReporting
	{
		get
		{
			return (ScoreReporting)GetChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SCOREREPORTING);
		}
		set
		{
			RemoveChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SCOREREPORTING);
			if( value != null)
			{
				AddChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SCOREREPORTING, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SubTestSubjectAreas&gt;</c> element.
	/// </summary>
	/// <value> A SubjectAreaList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Content area covered by the subtest."</para>
	/// <para>To remove the <c>SubjectAreaList</c>, set <c>SubTestSubjectAreas</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public SubjectAreaList SubTestSubjectAreas
	{
		get
		{
			return (SubjectAreaList)GetChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTSUBJECTAREAS);
		}
		set
		{
			RemoveChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTSUBJECTAREAS);
			if( value != null)
			{
				AddChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTSUBJECTAREAS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SubTestGradeLevels&gt;</c> element.
	/// </summary>
	/// <value> A GradeLevels </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Grade levels for which the subtest scores are valid."</para>
	/// <para>To remove the <c>GradeLevels</c>, set <c>SubTestGradeLevels</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public GradeLevels SubTestGradeLevels
	{
		get
		{
			return (GradeLevels)GetChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTGRADELEVELS);
		}
		set
		{
			RemoveChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTGRADELEVELS);
			if( value != null)
			{
				AddChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTGRADELEVELS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AssessmentSubTestRefIds&gt;</c> element.
	/// </summary>
	/// <value> An AssessmentSubTestRefIds </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "References (possibly recursive) to other SIF AssessmentSubTests. This enables subtests or scores to be composites of other scores creating a parent/child hierachy. If any references are given here, the score is a composite score (it is a parent). The most common composite score is for total test score. The list must be unique. It is also important to note that composite scores may not be simple sums of the subordinate sub test scores."</para>
	/// <para>To remove the <c>AssessmentSubTestRefIds</c>, set <c>AssessmentSubTestRefIds</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public AssessmentSubTestRefIds AssessmentSubTestRefIds
	{
		get
		{
			return (AssessmentSubTestRefIds)GetChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ASSESSMENTSUBTESTREFIDS);
		}
		set
		{
			RemoveChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ASSESSMENTSUBTESTREFIDS);
			if( value != null)
			{
				AddChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ASSESSMENTSUBTESTREFIDS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ContainerOnly&gt;</c> element.
	/// </summary>
	/// <value> The <c>ContainerOnly</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Indicator describing the purpose of an AssessmentSubTest as being that of a container for the child AssessmentSubTests. There will be no scores within this subtest."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public bool? ContainerOnly
	{
		get
		{
			return (bool?) GetSifSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_CONTAINERONLY ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_CONTAINERONLY, new SifBoolean( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SubTestTier&gt;</c> element.
	/// </summary>
	/// <value> The <c>SubTestTier</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "An integer that defines the level or tier of the score in a multi-level arrangement of composite scores. Zero indicates the highest or root level."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public int? SubTestTier
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTTIER ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTTIER, new SifInt( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;LearningStandardItemRefIds&gt;</c> element.
	/// </summary>
	/// <value> A LearningStandardItemRefIds </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "References to LearningStandardItems that this subtest measures. The list must be unique. If the subtest measures a higher order standard, then only the parent standard should be identified in the list."</para>
	/// <para>To remove the <c>LearningStandardItemRefIds</c>, set <c>LearningStandardItemRefIds</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public LearningStandardItemRefIds LearningStandardItemRefIds
	{
		get
		{
			return (LearningStandardItemRefIds)GetChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_LEARNINGSTANDARDITEMREFIDS);
		}
		set
		{
			RemoveChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_LEARNINGSTANDARDITEMREFIDS);
			if( value != null)
			{
				AddChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_LEARNINGSTANDARDITEMREFIDS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Abbreviation&gt;</c> element.
	/// </summary>
	/// <value> The <c>Abbreviation</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "This is the short version of the name of, or code identifying, the assessment subtest. It is often used for quick reference and used in reports."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string Abbreviation
	{
		get
		{
			return (string) GetSifSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ABBREVIATION ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ABBREVIATION, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Description&gt;</c> element.
	/// </summary>
	/// <value> The <c>Description</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The description element provides an opportunity to pass additional information about the assessment and also be used for describing elements in a test hierarchy."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string Description
	{
		get
		{
			return (string) GetSifSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_DESCRIPTION ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_DESCRIPTION, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;NumberOfItems&gt;</c> element.
	/// </summary>
	/// <value> The <c>NumberOfItems</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "This element records the number of items included on the assessment. This number may be different than the possible score."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public int? NumberOfItems
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_NUMBEROFITEMS ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_NUMBEROFITEMS, new SifInt( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;AssessmentItems&gt;</c> element.</summary>
	/// <param name="AssessmentItemSif3">An AssessmentItemSif3</param>
	///<remarks>
	/// <para>This form of <c>setAssessmentItems</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>AssessmentItems</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void SetAssessmentItems( AssessmentItemSif3 AssessmentItemSif3 ) {
		RemoveChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ASSESSMENTITEMS);
		AddChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ASSESSMENTITEMS, new AssessmentItems( AssessmentItemSif3 ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AssessmentItems&gt;</c> element.
	/// </summary>
	/// <value> An AssessmentItems </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "This is a list of the items that are used to compute the sub-test score."</para>
	/// <para>To remove the <c>AssessmentItems</c>, set <c>AssessmentItems</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public AssessmentItems AssessmentItems
	{
		get
		{
			return (AssessmentItems)GetChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ASSESSMENTITEMS);
		}
		set
		{
			RemoveChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ASSESSMENTITEMS);
			if( value != null)
			{
				AddChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ASSESSMENTITEMS, value );
			}
		}
	}

}}
