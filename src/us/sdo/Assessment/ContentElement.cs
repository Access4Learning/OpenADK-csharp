// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Assessment{

/// <summary>A ContentElement</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 2.2</para>
/// </remarks>
[Serializable]
public class ContentElement : SifElement
{
	/// <summary>
	/// Creates an instance of a ContentElement
	/// </summary>
	public ContentElement() : base ( AssessmentDTD.CONTENTELEMENT ){}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected ContentElement( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets or sets the value of the <c>&lt;XMLData&gt;</c> element.
	/// </summary>
	/// <value> A XMLData </value>
	/// <remarks>
	/// <para>To remove the <c>XMLData</c>, set <c>XMLData</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public XMLData XMLData
	{
		get
		{
			return (XMLData)GetChild( AssessmentDTD.CONTENTELEMENT_XMLDATA);
		}
		set
		{
			RemoveChild( AssessmentDTD.CONTENTELEMENT_XMLDATA);
			if( value != null)
			{
				AddChild( AssessmentDTD.CONTENTELEMENT_XMLDATA, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;TextData&gt;</c> element.</summary>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;TextData&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setTextData</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>TextData</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public void SetTextData( string Value ) {
		RemoveChild( AssessmentDTD.CONTENTELEMENT_TEXTDATA);
		AddChild( AssessmentDTD.CONTENTELEMENT_TEXTDATA, new TextData( Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;TextData&gt;</c> element.
	/// </summary>
	/// <value> A TextData </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Contains arbitrary text, encoded in UTF-8."</para>
	/// <para>To remove the <c>TextData</c>, set <c>TextData</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public TextData TextData
	{
		get
		{
			return (TextData)GetChild( AssessmentDTD.CONTENTELEMENT_TEXTDATA);
		}
		set
		{
			RemoveChild( AssessmentDTD.CONTENTELEMENT_TEXTDATA);
			if( value != null)
			{
				AddChild( AssessmentDTD.CONTENTELEMENT_TEXTDATA, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;BinaryData&gt;</c> element.</summary>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;BinaryData&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setBinaryData</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>BinaryData</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public void SetBinaryData( string Value ) {
		RemoveChild( AssessmentDTD.CONTENTELEMENT_BINARYDATA);
		AddChild( AssessmentDTD.CONTENTELEMENT_BINARYDATA, new BinaryData( Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;BinaryData&gt;</c> element.
	/// </summary>
	/// <value> A BinaryData </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Contains the base64Binary encoding of binary or text data not encoded in UTF-8."</para>
	/// <para>To remove the <c>BinaryData</c>, set <c>BinaryData</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public BinaryData BinaryData
	{
		get
		{
			return (BinaryData)GetChild( AssessmentDTD.CONTENTELEMENT_BINARYDATA);
		}
		set
		{
			RemoveChild( AssessmentDTD.CONTENTELEMENT_BINARYDATA);
			if( value != null)
			{
				AddChild( AssessmentDTD.CONTENTELEMENT_BINARYDATA, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Reference&gt;</c> element.</summary>
	/// <param name="Url">Location of external content.</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;Reference&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setReference</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Reference</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public void SetReference( string Url, string Value ) {
		RemoveChild( AssessmentDTD.CONTENTELEMENT_REFERENCE);
		AddChild( AssessmentDTD.CONTENTELEMENT_REFERENCE, new Reference( Url, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Reference&gt;</c> element.
	/// </summary>
	/// <value> A Reference </value>
	/// <remarks>
	/// <para>To remove the <c>Reference</c>, set <c>Reference</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public Reference Reference
	{
		get
		{
			return (Reference)GetChild( AssessmentDTD.CONTENTELEMENT_REFERENCE);
		}
		set
		{
			RemoveChild( AssessmentDTD.CONTENTELEMENT_REFERENCE);
			if( value != null)
			{
				AddChild( AssessmentDTD.CONTENTELEMENT_REFERENCE, value );
			}
		}
	}

}}
