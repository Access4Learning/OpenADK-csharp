// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Assessment{

/// <summary>An ItemSif3</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.6</para>
/// </remarks>
[Serializable]
public class ItemSif3 : SifKeyedElement
{
	/// <summary>
	/// Creates an instance of an ItemSif3
	/// </summary>
	public ItemSif3() : base ( AssessmentDTD.ITEMSIF3 ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="response">Answer selected or student work in raw format.</param>
	///
	public ItemSif3( string response ) : base( AssessmentDTD.ITEMSIF3 )
	{
		this.Response = response;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected ItemSif3( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { AssessmentDTD.ITEMSIF3_RESPONSE }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Response&gt;</c> element.
	/// </summary>
	/// <value> The <c>Response</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Answer selected or student work in raw format."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string Response
	{
		get
		{
			return (string) GetSifSimpleFieldValue( AssessmentDTD.ITEMSIF3_RESPONSE ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.ITEMSIF3_RESPONSE, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ResponseLocation&gt;</c> element.
	/// </summary>
	/// <value> The <c>ResponseLocation</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "An optional element that contains a URL pointing to the location of the response or additional
	///                 response.
	///             "</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string ResponseLocation
	{
		get
		{
			return (string) GetSifSimpleFieldValue( AssessmentDTD.ITEMSIF3_RESPONSELOCATION ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.ITEMSIF3_RESPONSELOCATION, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ResponseCorrectness&gt;</c> element.
	/// </summary>
	/// <value> The <c>ResponseCorrectness</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "After the test has been scored, this value will indicate the correctness of the response. This element will be missing if the response has not yet been scored. For open ended items that are scored using a rubric, this value will also likely be missing. These items do not fall nicely into the right/wrong category."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string ResponseCorrectness
	{
		get
		{ 
			return GetFieldValue( AssessmentDTD.ITEMSIF3_RESPONSECORRECTNESS );
		}
		set
		{
			SetField( AssessmentDTD.ITEMSIF3_RESPONSECORRECTNESS, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;ResponseCorrectness&gt;</c> element.
	/// </summary>
	/// <param name="val">A ResponseCorrectness object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "After the test has been scored, this value will indicate the correctness of the response. This element will be missing if the response has not yet been scored. For open ended items that are scored using a rubric, this value will also likely be missing. These items do not fall nicely into the right/wrong category."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void SetResponseCorrectness( ResponseCorrectness val )
	{
		SetField( AssessmentDTD.ITEMSIF3_RESPONSECORRECTNESS, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ViewStatus&gt;</c> element.
	/// </summary>
	/// <value> The <c>ViewStatus</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "This element will indicate if the item has been viewed or not by the student. Note this value can only be determined for online delivered tests. Paper tests should not use this attribute."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string ViewStatus
	{
		get
		{ 
			return GetFieldValue( AssessmentDTD.ITEMSIF3_VIEWSTATUS );
		}
		set
		{
			SetField( AssessmentDTD.ITEMSIF3_VIEWSTATUS, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;ViewStatus&gt;</c> element.
	/// </summary>
	/// <param name="val">A ViewStatus object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "This element will indicate if the item has been viewed or not by the student. Note this value can only be determined for online delivered tests. Paper tests should not use this attribute."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void SetViewStatus( ViewStatus val )
	{
		SetField( AssessmentDTD.ITEMSIF3_VIEWSTATUS, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AttemptStatus&gt;</c> element.
	/// </summary>
	/// <value> The <c>AttemptStatus</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "This element indicates if the student attempted the item. If a full or partial response is present then the item should be considered attempted. If the student never responded then the item was not attempted. If the item was answered and then later the answer was removed, then it is the rule of the assessment system that would determine if that was considered an attempt. For paper tests, an erasure would also be determined by the rules of the assessment system (assuming gray scanning scale capabilities)."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string AttemptStatus
	{
		get
		{ 
			return GetFieldValue( AssessmentDTD.ITEMSIF3_ATTEMPTSTATUS );
		}
		set
		{
			SetField( AssessmentDTD.ITEMSIF3_ATTEMPTSTATUS, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;AttemptStatus&gt;</c> element.
	/// </summary>
	/// <param name="val">A AttemptStatus object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "This element indicates if the student attempted the item. If a full or partial response is present then the item should be considered attempted. If the student never responded then the item was not attempted. If the item was answered and then later the answer was removed, then it is the rule of the assessment system that would determine if that was considered an attempt. For paper tests, an erasure would also be determined by the rules of the assessment system (assuming gray scanning scale capabilities)."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void SetAttemptStatus( AttemptStatus val )
	{
		SetField( AssessmentDTD.ITEMSIF3_ATTEMPTSTATUS, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;NumberOfAttempts&gt;</c> element.
	/// </summary>
	/// <value> The <c>NumberOfAttempts</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The number of times a student changes their answer or attempts a response. For online tests, this would represent each time an item was changed after the original (complete) response was provided and the student navigated away from the item. For paper-based tests, if erasure analysis is performed, this could represent either the number of erasures or be set to 2 if multiple responses are detected."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public int? NumberOfAttempts
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( AssessmentDTD.ITEMSIF3_NUMBEROFATTEMPTS ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.ITEMSIF3_NUMBEROFATTEMPTS, new SifInt( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;TimeOnItem&gt;</c> element.
	/// </summary>
	/// <value> The <c>TimeOnItem</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The length of time the student spent viewing or answering this item. Only applies for online tests. If the student viewed the item multiple times, then this would be the accumulated total time spent on the item. As much as is possible, the delivery system should remove inter-item latency or item presentation time."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public TimeSpan? TimeOnItem
	{
		get
		{
			return (TimeSpan?) GetSifSimpleFieldValue( AssessmentDTD.ITEMSIF3_TIMEONITEM ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.ITEMSIF3_TIMEONITEM, new SifDuration( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ItemNumber&gt;</c> element.
	/// </summary>
	/// <value> The <c>ItemNumber</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Identifies the sequence of the item as it was delivered to this student. For adaptive testing, this is the sequence in which the item was delivered. This should be the item sequence starting at 1 and continue to the end of the test (spanning all sections). This should include all items such as sample items."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string ItemNumber
	{
		get
		{
			return (string) GetSifSimpleFieldValue( AssessmentDTD.ITEMSIF3_ITEMNUMBER ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.ITEMSIF3_ITEMNUMBER, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ItemName&gt;</c> element.
	/// </summary>
	/// <value> The <c>ItemName</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Identifies the item on the assessment by name."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string ItemName
	{
		get
		{
			return (string) GetSifSimpleFieldValue( AssessmentDTD.ITEMSIF3_ITEMNAME ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.ITEMSIF3_ITEMNAME, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AssessmentRubricRefId&gt;</c> element.
	/// </summary>
	/// <value> The <c>AssessmentRubricRefId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "This identifies the rubric that was used to determine the score that is being recorded for this item response. This is only used for items that are scored using one or more rubrics."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string AssessmentRubricRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( AssessmentDTD.ITEMSIF3_ASSESSMENTRUBRICREFID ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.ITEMSIF3_ASSESSMENTRUBRICREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ItemScore&gt;</c> element.
	/// </summary>
	/// <value> The <c>ItemScore</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "This is the score the student received on the specific item."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string ItemScore
	{
		get
		{
			return (string) GetSifSimpleFieldValue( AssessmentDTD.ITEMSIF3_ITEMSCORE ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.ITEMSIF3_ITEMSCORE, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ItemScoreCode&gt;</c> element.
	/// </summary>
	/// <value> The <c>ItemScoreCode</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "This is the score code the student received for the specific item. Generally only applies to open ended items. Values are program specific, but example values might be 'BL = blank', 'OT = off topic', 'FL = foreign language'."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string ItemScoreCode
	{
		get
		{
			return (string) GetSifSimpleFieldValue( AssessmentDTD.ITEMSIF3_ITEMSCORECODE ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.ITEMSIF3_ITEMSCORECODE, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;Comments&gt;</c> element.</summary>
	/// <param name="Comment">A Comment</param>
	///<remarks>
	/// <para>This form of <c>setComments</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Comments</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void SetComments( Comment Comment ) {
		RemoveChild( AssessmentDTD.ITEMSIF3_COMMENTS);
		AddChild( AssessmentDTD.ITEMSIF3_COMMENTS, new Comments( Comment ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Comments&gt;</c> element.
	/// </summary>
	/// <value> A Comments </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "If the scoring process provides for comment codes, then this list will contain each comment code provided with the item score."</para>
	/// <para>To remove the <c>Comments</c>, set <c>Comments</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public Comments Comments
	{
		get
		{
			return (Comments)GetChild( AssessmentDTD.ITEMSIF3_COMMENTS);
		}
		set
		{
			RemoveChild( AssessmentDTD.ITEMSIF3_COMMENTS);
			if( value != null)
			{
				AddChild( AssessmentDTD.ITEMSIF3_COMMENTS, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;TraitScores&gt;</c> element.</summary>
	/// <param name="TraitScore">This is the container for the trait score elements.</param>
	///<remarks>
	/// <para>This form of <c>setTraitScores</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>TraitScores</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void SetTraitScores( TraitScore TraitScore ) {
		RemoveChild( AssessmentDTD.ITEMSIF3_TRAITSCORES);
		AddChild( AssessmentDTD.ITEMSIF3_TRAITSCORES, new TraitScores( TraitScore ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;TraitScores&gt;</c> element.
	/// </summary>
	/// <value> A TraitScores </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "If the item includes trait scores – typically open ended items – then this list will support one or more trait scores."</para>
	/// <para>To remove the <c>TraitScores</c>, set <c>TraitScores</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public TraitScores TraitScores
	{
		get
		{
			return (TraitScores)GetChild( AssessmentDTD.ITEMSIF3_TRAITSCORES);
		}
		set
		{
			RemoveChild( AssessmentDTD.ITEMSIF3_TRAITSCORES);
			if( value != null)
			{
				AddChild( AssessmentDTD.ITEMSIF3_TRAITSCORES, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;FeedbackItems&gt;</c> element.</summary>
	/// <param name="FeedbackItem">A FeedbackItem</param>
	///<remarks>
	/// <para>This form of <c>setFeedbackItems</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>FeedbackItems</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void SetFeedbackItems( FeedbackItem FeedbackItem ) {
		RemoveChild( AssessmentDTD.ITEMSIF3_FEEDBACKITEMS);
		AddChild( AssessmentDTD.ITEMSIF3_FEEDBACKITEMS, new FeedbackItems( FeedbackItem ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;FeedbackItems&gt;</c> element.
	/// </summary>
	/// <value> A FeedbackItems </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "This list will support providing feedback to the student from multiple sources."</para>
	/// <para>To remove the <c>FeedbackItems</c>, set <c>FeedbackItems</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public FeedbackItems FeedbackItems
	{
		get
		{
			return (FeedbackItems)GetChild( AssessmentDTD.ITEMSIF3_FEEDBACKITEMS);
		}
		set
		{
			RemoveChild( AssessmentDTD.ITEMSIF3_FEEDBACKITEMS);
			if( value != null)
			{
				AddChild( AssessmentDTD.ITEMSIF3_FEEDBACKITEMS, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;ItemAids&gt;</c> element.</summary>
	/// <param name="ItemAid">An ItemAid</param>
	///<remarks>
	/// <para>This form of <c>setItemAids</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ItemAids</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void SetItemAids( ItemAid ItemAid ) {
		RemoveChild( AssessmentDTD.ITEMSIF3_ITEMAIDS);
		AddChild( AssessmentDTD.ITEMSIF3_ITEMAIDS, new ItemAids( ItemAid ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ItemAids&gt;</c> element.
	/// </summary>
	/// <value> An ItemAids </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "This is a list of the assessment item aids that were used (or accessed) by the student to answer the question."</para>
	/// <para>To remove the <c>ItemAids</c>, set <c>ItemAids</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public ItemAids ItemAids
	{
		get
		{
			return (ItemAids)GetChild( AssessmentDTD.ITEMSIF3_ITEMAIDS);
		}
		set
		{
			RemoveChild( AssessmentDTD.ITEMSIF3_ITEMAIDS);
			if( value != null)
			{
				AddChild( AssessmentDTD.ITEMSIF3_ITEMAIDS, value );
			}
		}
	}

}}
