// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Assessment{

/// <summary>An AssessmentItemSif3</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.6</para>
/// </remarks>
[Serializable]
public class AssessmentItemSif3 : SifElement
{
	/// <summary>
	/// Creates an instance of an AssessmentItemSif3
	/// </summary>
	public AssessmentItemSif3() : base ( AssessmentDTD.ASSESSMENTITEMSIF3 ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="assessmentItemRefId">This identifies the specific item that contributes to a sub-test score.</param>
	///<param name="itemWeightCorrect">This provides a weighting factor for how the item score is used to compute a sub-test score when the item is correct or partially correct. Item weight of 1 indicates the full item score is used. A weight of .5 would indicate the item only contributes one half of the item score to the subtest. A weight of 0 indicates the item does not affect the sub test score.</param>
	///<param name="itemWeightIncorrect">This provides a weighting factor for how the item score is used to compute a sub-test score when the item is attempted and incorrect. Item weight should be a negative value if the item subtracts from the score if missed.</param>
	///<param name="itemWeightNotAttempted">This provides a weighting factor for how the item score is used to compute a sub-test score when the item has not been attempted by the student. Item weight should be a negative value if the item subtracts from the score if not attempted.</param>
	///
	public AssessmentItemSif3( string assessmentItemRefId, decimal? itemWeightCorrect, decimal? itemWeightIncorrect, decimal? itemWeightNotAttempted ) : base( AssessmentDTD.ASSESSMENTITEMSIF3 )
	{
		this.AssessmentItemRefId = assessmentItemRefId;
		this.ItemWeightCorrect = itemWeightCorrect;
		this.ItemWeightIncorrect = itemWeightIncorrect;
		this.ItemWeightNotAttempted = itemWeightNotAttempted;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected AssessmentItemSif3( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public  IElementDef[] KeyFields {
		get { return new IElementDef[] { AssessmentDTD.ASSESSMENTITEMSIF3_ASSESSMENTITEMREFID, AssessmentDTD.ASSESSMENTITEMSIF3_ITEMWEIGHTCORRECT, AssessmentDTD.ASSESSMENTITEMSIF3_ITEMWEIGHTINCORRECT, AssessmentDTD.ASSESSMENTITEMSIF3_ITEMWEIGHTNOTATTEMPTED }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AssessmentItemRefId&gt;</c> element.
	/// </summary>
	/// <value> The <c>AssessmentItemRefId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "This identifies the specific item that contributes to a sub-test score."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string AssessmentItemRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( AssessmentDTD.ASSESSMENTITEMSIF3_ASSESSMENTITEMREFID ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.ASSESSMENTITEMSIF3_ASSESSMENTITEMREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ItemWeightCorrect&gt;</c> element.
	/// </summary>
	/// <value> The <c>ItemWeightCorrect</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "This provides a weighting factor for how the item score is used to compute a sub-test score when the item is correct or partially correct. Item weight of 1 indicates the full item score is used. A weight of .5 would indicate the item only contributes one half of the item score to the subtest. A weight of 0 indicates the item does not affect the sub test score."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public decimal? ItemWeightCorrect
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( AssessmentDTD.ASSESSMENTITEMSIF3_ITEMWEIGHTCORRECT ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.ASSESSMENTITEMSIF3_ITEMWEIGHTCORRECT, new SifDecimal( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ItemWeightIncorrect&gt;</c> element.
	/// </summary>
	/// <value> The <c>ItemWeightIncorrect</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "This provides a weighting factor for how the item score is used to compute a sub-test score when the item is attempted and incorrect. Item weight should be a negative value if the item subtracts from the score if missed."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public decimal? ItemWeightIncorrect
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( AssessmentDTD.ASSESSMENTITEMSIF3_ITEMWEIGHTINCORRECT ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.ASSESSMENTITEMSIF3_ITEMWEIGHTINCORRECT, new SifDecimal( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ItemWeightNotAttempted&gt;</c> element.
	/// </summary>
	/// <value> The <c>ItemWeightNotAttempted</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "This provides a weighting factor for how the item score is used to compute a sub-test score when the item has not been attempted by the student. Item weight should be a negative value if the item subtracts from the score if not attempted."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public decimal? ItemWeightNotAttempted
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( AssessmentDTD.ASSESSMENTITEMSIF3_ITEMWEIGHTNOTATTEMPTED ) ;
		}
		set
		{
			SetFieldValue( AssessmentDTD.ASSESSMENTITEMSIF3_ITEMWEIGHTNOTATTEMPTED, new SifDecimal( value ), value );
		}
	}

}}
