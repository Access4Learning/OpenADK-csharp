// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Trans{

/// <summary>This object exposes telematics information to the zone.  SIF_Events are reported.</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 1.5r1</para>
/// </remarks>
[Serializable]
public class BusPositionInfo : SifDataObject
{
	/// <summary>
	/// Creates an instance of a BusPositionInfo
	/// </summary>
	public BusPositionInfo() : base( Adk.SifVersion, TransDTD.BUSPOSITIONINFO ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="busInfoRefId">The GUID that identifies the bus. This object only has meaning as current data for this particular bus.</param>
	///<param name="date">The date of the report from the bus.</param>
	///<param name="time">The time of the report from the bus.</param>
	///<param name="gridLocation">The location of the bus.</param>
	///
	public BusPositionInfo( string busInfoRefId, DateTime? date, DateTime? time, GridLocation gridLocation ) : base( Adk.SifVersion, TransDTD.BUSPOSITIONINFO )
	{
		this.BusInfoRefId = busInfoRefId;
		this.Date = date;
		this.Time = time;
		this.GridLocation = gridLocation;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected BusPositionInfo( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { TransDTD.BUSPOSITIONINFO_BUSINFOREFID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>BusInfoRefId</c> attribute.
	/// </summary>
	/// <value> The <c>BusInfoRefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The GUID that identifies the bus. This object only has meaning as current data for this particular bus."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string BusInfoRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( TransDTD.BUSPOSITIONINFO_BUSINFOREFID ) ;
		}
		set
		{
			SetFieldValue( TransDTD.BUSPOSITIONINFO_BUSINFOREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Date&gt;</c> element.
	/// </summary>
	/// <value> The <c>Date</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The date of the report from the bus."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public DateTime? Date
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( TransDTD.BUSPOSITIONINFO_DATE ) ;
		}
		set
		{
			SetFieldValue( TransDTD.BUSPOSITIONINFO_DATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Time&gt;</c> element.
	/// </summary>
	/// <value> The <c>Time</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The time of the report from the bus."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public DateTime? Time
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( TransDTD.BUSPOSITIONINFO_TIME ) ;
		}
		set
		{
			SetFieldValue( TransDTD.BUSPOSITIONINFO_TIME, new SifTime( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;GridLocation&gt;</c> element.</summary>
	/// <param name="Latitude">The latitude coordinate of this location expressed in decimal format (e.g. "41.7699657")</param>
	/// <param name="Longitude">The longitude coordinate of this location expressed in decimal format (e.g. "79.548445")</param>
	///<remarks>
	/// <para>This form of <c>setGridLocation</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>GridLocation</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetGridLocation( decimal? Latitude, decimal? Longitude ) {
		RemoveChild( TransDTD.BUSPOSITIONINFO_GRIDLOCATION);
		AddChild( TransDTD.BUSPOSITIONINFO_GRIDLOCATION, new GridLocation( Latitude, Longitude ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;GridLocation&gt;</c> element.
	/// </summary>
	/// <value> A GridLocation </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The location of the bus."</para>
	/// <para>To remove the <c>GridLocation</c>, set <c>GridLocation</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public GridLocation GridLocation
	{
		get
		{
			return (GridLocation)GetChild( TransDTD.BUSPOSITIONINFO_GRIDLOCATION);
		}
		set
		{
			RemoveChild( TransDTD.BUSPOSITIONINFO_GRIDLOCATION);
			if( value != null)
			{
				AddChild( TransDTD.BUSPOSITIONINFO_GRIDLOCATION, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;TelematicsId&gt;</c> element.
	/// </summary>
	/// <value> The <c>TelematicsId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "ID of the hardware unit on the bus that tracks &amp;amp; reports location and status. The interpretation of the content is deployment specific, but the format must be compact."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string TelematicsId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( TransDTD.BUSPOSITIONINFO_TELEMATICSID ) ;
		}
		set
		{
			SetFieldValue( TransDTD.BUSPOSITIONINFO_TELEMATICSID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;TelemetryList&gt;</c> element.
	/// </summary>
	/// <value> A TelemetryList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Indicators and values provided by the hardware along with this position snapshot. For events, it is safe to assume that one of these items triggered the hardware to issue an update."</para>
	/// <para>To remove the <c>TelemetryList</c>, set <c>TelemetryList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public TelemetryList TelemetryList
	{
		get
		{
			return (TelemetryList)GetChild( TransDTD.BUSPOSITIONINFO_TELEMETRYLIST);
		}
		set
		{
			RemoveChild( TransDTD.BUSPOSITIONINFO_TELEMETRYLIST);
			if( value != null)
			{
				AddChild( TransDTD.BUSPOSITIONINFO_TELEMETRYLIST, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;BusDriver&gt;</c> element.</summary>
	/// <param name="Status">Boarding status of the driver.</param>
	///<remarks>
	/// <para>This form of <c>setBusDriver</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>BusDriver</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetBusDriver( StaffBoardingStatus Status ) {
		RemoveChild( TransDTD.BUSPOSITIONINFO_BUSDRIVER);
		AddChild( TransDTD.BUSPOSITIONINFO_BUSDRIVER, new BusDriver( Status ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;BusDriver&gt;</c> element.
	/// </summary>
	/// <value> A BusDriver </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Information identifying the driver."</para>
	/// <para>To remove the <c>BusDriver</c>, set <c>BusDriver</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public BusDriver BusDriver
	{
		get
		{
			return (BusDriver)GetChild( TransDTD.BUSPOSITIONINFO_BUSDRIVER);
		}
		set
		{
			RemoveChild( TransDTD.BUSPOSITIONINFO_BUSDRIVER);
			if( value != null)
			{
				AddChild( TransDTD.BUSPOSITIONINFO_BUSDRIVER, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;BusStaffList&gt;</c> element.
	/// </summary>
	/// <value> A BusStaffList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "List identifying other staff.  This may include aides, nurses, proctors, etc."</para>
	/// <para>To remove the <c>BusStaffList</c>, set <c>BusStaffList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public BusStaffList BusStaffList
	{
		get
		{
			return (BusStaffList)GetChild( TransDTD.BUSPOSITIONINFO_BUSSTAFFLIST);
		}
		set
		{
			RemoveChild( TransDTD.BUSPOSITIONINFO_BUSSTAFFLIST);
			if( value != null)
			{
				AddChild( TransDTD.BUSPOSITIONINFO_BUSSTAFFLIST, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;RouteStatus&gt;</c> element.</summary>
	/// <param name="Status">Status of the route.</param>
	/// <param name="BusRouteInfoRefId">GUID</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;RouteStatus&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setRouteStatus</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>RouteStatus</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetRouteStatus( RouteStatusStatus Status, string BusRouteInfoRefId, string Value ) {
		RemoveChild( TransDTD.BUSPOSITIONINFO_ROUTESTATUS);
		AddChild( TransDTD.BUSPOSITIONINFO_ROUTESTATUS, new RouteStatus( Status, BusRouteInfoRefId, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;RouteStatus&gt;</c> element.
	/// </summary>
	/// <value> A RouteStatus </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "If the bus is running a route, this element must be included in the object.  Absence means the bus is not operating a route."</para>
	/// <para>To remove the <c>RouteStatus</c>, set <c>RouteStatus</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public RouteStatus RouteStatus
	{
		get
		{
			return (RouteStatus)GetChild( TransDTD.BUSPOSITIONINFO_ROUTESTATUS);
		}
		set
		{
			RemoveChild( TransDTD.BUSPOSITIONINFO_ROUTESTATUS);
			if( value != null)
			{
				AddChild( TransDTD.BUSPOSITIONINFO_ROUTESTATUS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;OtherStatus&gt;</c> element.
	/// </summary>
	/// <value> The <c>OtherStatus</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "If the bus is not running a regularly scheduled route but is transporting (or positioning to transport) passengers as approved and directed by the school district, this element describes the activity. It's also used for maintenance, repair, and other authorized movements. This element is mutually exclusive with RouteStatus. Absence of both RouteStatus and OtherStatus is acceptable, but may indicate unauthorized operation."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string OtherStatus
	{
		get
		{
			return (string) GetSifSimpleFieldValue( TransDTD.BUSPOSITIONINFO_OTHERSTATUS ) ;
		}
		set
		{
			SetFieldValue( TransDTD.BUSPOSITIONINFO_OTHERSTATUS, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;Odometer&gt;</c> element.</summary>
	/// <param name="Unit">Units used in the odometer reading.</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;Odometer&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setOdometer</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Odometer</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetOdometer( DistanceUnit Unit, decimal? Value ) {
		RemoveChild( TransDTD.BUSPOSITIONINFO_ODOMETER);
		AddChild( TransDTD.BUSPOSITIONINFO_ODOMETER, new Odometer( Unit, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Odometer&gt;</c> element.
	/// </summary>
	/// <value> An Odometer </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Current odometer reading."</para>
	/// <para>To remove the <c>Odometer</c>, set <c>Odometer</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public Odometer Odometer
	{
		get
		{
			return (Odometer)GetChild( TransDTD.BUSPOSITIONINFO_ODOMETER);
		}
		set
		{
			RemoveChild( TransDTD.BUSPOSITIONINFO_ODOMETER);
			if( value != null)
			{
				AddChild( TransDTD.BUSPOSITIONINFO_ODOMETER, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Speedometer&gt;</c> element.</summary>
	/// <param name="Unit">Units used in the speedometer reading. </param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;Speedometer&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setSpeedometer</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Speedometer</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetSpeedometer( DistanceUnit Unit, decimal? Value ) {
		RemoveChild( TransDTD.BUSPOSITIONINFO_SPEEDOMETER);
		AddChild( TransDTD.BUSPOSITIONINFO_SPEEDOMETER, new Speedometer( Unit, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Speedometer&gt;</c> element.
	/// </summary>
	/// <value> A Speedometer </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Current speedometer reading."</para>
	/// <para>To remove the <c>Speedometer</c>, set <c>Speedometer</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public Speedometer Speedometer
	{
		get
		{
			return (Speedometer)GetChild( TransDTD.BUSPOSITIONINFO_SPEEDOMETER);
		}
		set
		{
			RemoveChild( TransDTD.BUSPOSITIONINFO_SPEEDOMETER);
			if( value != null)
			{
				AddChild( TransDTD.BUSPOSITIONINFO_SPEEDOMETER, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Students&gt;</c> element.
	/// </summary>
	/// <value> A TransStudents </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "List of students and their status.  The complete list may be sent with some events (e.g. change in RouteStatus) per district policy, but it is more typical of responses."</para>
	/// <para>To remove the <c>TransStudents</c>, set <c>Students</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public TransStudents Students
	{
		get
		{
			return (TransStudents)GetChild( TransDTD.BUSPOSITIONINFO_STUDENTS);
		}
		set
		{
			RemoveChild( TransDTD.BUSPOSITIONINFO_STUDENTS);
			if( value != null)
			{
				AddChild( TransDTD.BUSPOSITIONINFO_STUDENTS, value );
			}
		}
	}

}}
