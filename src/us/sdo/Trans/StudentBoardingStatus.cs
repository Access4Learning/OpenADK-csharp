// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using OpenADK.Library;

namespace OpenADK.Library.us.Trans
{
	///<summary>
	/// Defines the set of values that can be specified whenever a StudentBoardingStatus
	/// is used as a parameter to a method or constructor. 
	///</summary>
	/// <remarks>
	/// Alternatively, the static
	///  <see cref="Wrap"/> method can be called to encapsulate any string value in
	///  a StudentBoardingStatus object.
	/// <para>Author: Generated by adkgen</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	[Serializable]
	public class StudentBoardingStatus : SifEnum
	{
	/// <summary>scheduled for this run, but either hasn't boarded or the telematics hardware can't confirm their identity ("Sched")</summary>
	public static readonly StudentBoardingStatus SCHED = new StudentBoardingStatus("Sched");

	/// <summary>boarded the bus since previous event ("Entered")</summary>
	public static readonly StudentBoardingStatus ENTERED = new StudentBoardingStatus("Entered");

	/// <summary>boarded the bus and no exit detected ("On")</summary>
	public static readonly StudentBoardingStatus ON = new StudentBoardingStatus("On");

	/// <summary>left the bus since previous event ("Exited")</summary>
	public static readonly StudentBoardingStatus EXITED = new StudentBoardingStatus("Exited");

	/// <summary>Off ("Off")</summary>
	public static readonly StudentBoardingStatus OFF = new StudentBoardingStatus("Off");

	///<summary>Wrap an arbitrary string value in a StudentBoardingStatus object.</summary>
	///<param name="wrappedValue">The element/attribute value.</param>
	///<remarks>This method does not verify
	///that the value is valid according to the SIF Specification</remarks>
	public static StudentBoardingStatus Wrap( String wrappedValue ) {
		return new StudentBoardingStatus( wrappedValue );
	}

	private StudentBoardingStatus( string enumDefValue ) : base( enumDefValue ) {}
	}
}
