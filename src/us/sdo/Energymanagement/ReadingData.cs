// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Energymanagement{

/// <summary>A ReadingData</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.6</para>
/// </remarks>
[Serializable]
public class ReadingData : SifElement
{
	/// <summary>
	/// Creates an instance of a ReadingData
	/// </summary>
	public ReadingData() : base ( EnergymanagementDTD.READINGDATA ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="measurement">Measurement type</param>
	///<param name="energyUnits">One of enumerated list of unit types for energy readings (temperature, electrical energy usage, gas usage and the price for both).</param>
	///
	public ReadingData( Measurement measurement, EnergyUnits energyUnits ) : base( EnergymanagementDTD.READINGDATA )
	{
		this.SetMeasurement( measurement );
		this.SetEnergyUnits( energyUnits );
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected ReadingData( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public  IElementDef[] KeyFields {
		get { return new IElementDef[] { EnergymanagementDTD.READINGDATA_MEASUREMENT, EnergymanagementDTD.READINGDATA_ENERGYUNITS }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Measurement&gt;</c> element.
	/// </summary>
	/// <value> The <c>Measurement</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Measurement type"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string Measurement
	{
		get
		{ 
			return GetFieldValue( EnergymanagementDTD.READINGDATA_MEASUREMENT );
		}
		set
		{
			SetField( EnergymanagementDTD.READINGDATA_MEASUREMENT, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;Measurement&gt;</c> element.
	/// </summary>
	/// <param name="val">A Measurement object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Measurement type"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void SetMeasurement( Measurement val )
	{
		SetField( EnergymanagementDTD.READINGDATA_MEASUREMENT, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SensorId&gt;</c> element.
	/// </summary>
	/// <value> The <c>SensorId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Identification of internal meter or data source."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string SensorId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( EnergymanagementDTD.READINGDATA_SENSORID ) ;
		}
		set
		{
			SetFieldValue( EnergymanagementDTD.READINGDATA_SENSORID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Interval&gt;</c> element.
	/// </summary>
	/// <value> The <c>Interval</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Time in seconds between Measurements."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public int? Interval
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( EnergymanagementDTD.READINGDATA_INTERVAL ) ;
		}
		set
		{
			SetFieldValue( EnergymanagementDTD.READINGDATA_INTERVAL, new SifInt( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EnergyUnits&gt;</c> element.
	/// </summary>
	/// <value> The <c>EnergyUnits</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "One of enumerated list of unit types for energy readings (temperature, electrical energy usage, gas usage and the price for both)."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string EnergyUnits
	{
		get
		{ 
			return GetFieldValue( EnergymanagementDTD.READINGDATA_ENERGYUNITS );
		}
		set
		{
			SetField( EnergymanagementDTD.READINGDATA_ENERGYUNITS, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;EnergyUnits&gt;</c> element.
	/// </summary>
	/// <param name="val">A EnergyUnits object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "One of enumerated list of unit types for energy readings (temperature, electrical energy usage, gas usage and the price for both)."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void SetEnergyUnits( EnergyUnits val )
	{
		SetField( EnergymanagementDTD.READINGDATA_ENERGYUNITS, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ReadingName&gt;</c> element.
	/// </summary>
	/// <value> The <c>ReadingName</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Description of collection of readings"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string ReadingName
	{
		get
		{
			return (string) GetSifSimpleFieldValue( EnergymanagementDTD.READINGDATA_READINGNAME ) ;
		}
		set
		{
			SetFieldValue( EnergymanagementDTD.READINGDATA_READINGNAME, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ReadingList&gt;</c> element.
	/// </summary>
	/// <value> A ReadingList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Collection of reported data readings, in time order."</para>
	/// <para>To remove the <c>ReadingList</c>, set <c>ReadingList</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public ReadingList ReadingList
	{
		get
		{
			return (ReadingList)GetChild( EnergymanagementDTD.READINGDATA_READINGLIST);
		}
		set
		{
			RemoveChild( EnergymanagementDTD.READINGDATA_READINGLIST);
			if( value != null)
			{
				AddChild( EnergymanagementDTD.READINGDATA_READINGLIST, value );
			}
		}
	}

}}
