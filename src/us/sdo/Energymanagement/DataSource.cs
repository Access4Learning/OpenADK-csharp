// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Energymanagement{

/// <summary>A DataSource</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.6</para>
/// </remarks>
[Serializable]
public class DataSource : SifElement
{
	/// <summary>
	/// Creates an instance of a DataSource
	/// </summary>
	public DataSource() : base ( EnergymanagementDTD.DATASOURCE ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="system">Identifier of the reporting system.</param>
	///<param name="startTime">Start time of measurements that follow.</param>
	///<param name="readingDataList">List of ReadingData</param>
	///
	public DataSource( string system, DateTime? startTime, ReadingData readingDataList ) : base( EnergymanagementDTD.DATASOURCE )
	{
		this.System = system;
		this.StartTime = startTime;
		this.ReadingDataList =  new ReadingDataList( readingDataList );
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected DataSource( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public  IElementDef[] KeyFields {
		get { return new IElementDef[] { EnergymanagementDTD.DATASOURCE_SYSTEM, EnergymanagementDTD.DATASOURCE_STARTTIME, EnergymanagementDTD.DATASOURCE_READINGDATALIST }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;System&gt;</c> element.
	/// </summary>
	/// <value> The <c>System</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Identifier of the reporting system."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string System
	{
		get
		{
			return (string) GetSifSimpleFieldValue( EnergymanagementDTD.DATASOURCE_SYSTEM ) ;
		}
		set
		{
			SetFieldValue( EnergymanagementDTD.DATASOURCE_SYSTEM, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StartTime&gt;</c> element.
	/// </summary>
	/// <value> The <c>StartTime</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Start time of measurements that follow."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public DateTime? StartTime
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( EnergymanagementDTD.DATASOURCE_STARTTIME ) ;
		}
		set
		{
			SetFieldValue( EnergymanagementDTD.DATASOURCE_STARTTIME, new SifDateTime( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;ReadingDataList&gt;</c> element.</summary>
	/// <param name="ReadingData">Complex element defining a set of parameters that apply to all the actual readings that follow.</param>
	///<remarks>
	/// <para>This form of <c>setReadingDataList</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ReadingDataList</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void SetReadingDataList( ReadingData ReadingData ) {
		RemoveChild( EnergymanagementDTD.DATASOURCE_READINGDATALIST);
		AddChild( EnergymanagementDTD.DATASOURCE_READINGDATALIST, new ReadingDataList( ReadingData ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ReadingDataList&gt;</c> element.
	/// </summary>
	/// <value> A ReadingDataList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "List of ReadingData"</para>
	/// <para>To remove the <c>ReadingDataList</c>, set <c>ReadingDataList</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public ReadingDataList ReadingDataList
	{
		get
		{
			return (ReadingDataList)GetChild( EnergymanagementDTD.DATASOURCE_READINGDATALIST);
		}
		set
		{
			RemoveChild( EnergymanagementDTD.DATASOURCE_READINGDATALIST);
			if( value != null)
			{
				AddChild( EnergymanagementDTD.DATASOURCE_READINGDATALIST, value );
			}
		}
	}

}}
