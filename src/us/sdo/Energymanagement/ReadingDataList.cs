// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Energymanagement{

/// <summary>A ReadingDataList</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.6</para>
/// </remarks>
[Serializable]
public class ReadingDataList : SifList<ReadingData>
{
	/// <summary>
	/// Creates an instance of a ReadingDataList
	/// </summary>
	public ReadingDataList() : base ( EnergymanagementDTD.READINGDATALIST ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="readingData">Complex element defining a set of parameters that apply to all the actual readings that follow.</param>
	///
	public ReadingDataList( ReadingData readingData ) : base( EnergymanagementDTD.READINGDATALIST )
	{
		this.SafeAddChild( EnergymanagementDTD.READINGDATALIST_READINGDATA, readingData );
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected ReadingDataList( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public  IElementDef[] KeyFields {
		get { return new IElementDef[] { EnergymanagementDTD.READINGDATALIST_READINGDATA }; }
	}

	///<summary>Adds the value of the <c>&lt;ReadingData&gt;</c> element.</summary>
	/// <param name="Measurement">Measurement type</param>
	/// <param name="EnergyUnits">One of enumerated list of unit types for energy readings (temperature, electrical energy usage, gas usage and the price for both).</param>
	///<remarks>
	/// <para>This form of <c>setReadingData</c> is provided as a convenience method
	/// that is functionally equivalent to the method <c>AddReadingData</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void AddReadingData( Measurement Measurement, EnergyUnits EnergyUnits ) {
		AddChild( EnergymanagementDTD.READINGDATALIST_READINGDATA, new ReadingData( Measurement, EnergyUnits ) );
	}

}}
