// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using OpenADK.Library;

namespace OpenADK.Library.us.Energymanagement
{
	///<summary>
	/// Defines the set of values that can be specified whenever an EnergyUnits
	/// is used as a parameter to a method or constructor. 
	///</summary>
	/// <remarks>
	/// Alternatively, the static
	///  <see cref="Wrap"/> method can be called to encapsulate any string value in
	///  an EnergyUnits object.
	/// <para>Author: Generated by adkgen</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	[Serializable]
	public class EnergyUnits : SifEnum
	{
	/// <summary>Other ("Other")</summary>
	public static readonly EnergyUnits OTHER = new EnergyUnits("Other");

	/// <summary>$/Kilowatt-Hour ("$Kilowatt-Hour")</summary>
	public static readonly EnergyUnits DOLLAR_KILOWATT_HOUR = new EnergyUnits("$Kilowatt-Hour");

	/// <summary>Thousand Cubic Feet ("ThousandCubicFeet")</summary>
	public static readonly EnergyUnits THOUSAND_CUBIC_FEET = new EnergyUnits("ThousandCubicFeet");

	/// <summary>$/Thousand Cubic Feet ("$ThousandCubicFeet")</summary>
	public static readonly EnergyUnits DOLLAR_THOUSAND_CUBIC_FEET = new EnergyUnits("$ThousandCubicFeet");

	/// <summary>Kilowatt-Hour ("Kilowatt-Hour")</summary>
	public static readonly EnergyUnits KILOWATT_HOUR = new EnergyUnits("Kilowatt-Hour");

	/// <summary>Degree Centigrade ("DegreeCentigrade")</summary>
	public static readonly EnergyUnits DEGREECENTIGRADE = new EnergyUnits("DegreeCentigrade");

	///<summary>Wrap an arbitrary string value in an EnergyUnits object.</summary>
	///<param name="wrappedValue">The element/attribute value.</param>
	///<remarks>This method does not verify
	///that the value is valid according to the SIF Specification</remarks>
	public static EnergyUnits Wrap( String wrappedValue ) {
		return new EnergyUnits( wrappedValue );
	}

	private EnergyUnits( string enumDefValue ) : base( enumDefValue ) {}
	}
}
