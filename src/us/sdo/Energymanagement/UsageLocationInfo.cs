// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Energymanagement{

/// <summary>An UsageLocationInfo</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.6</para>
/// </remarks>
[Serializable]
public class UsageLocationInfo : SifElement
{
	/// <summary>
	/// Creates an instance of an UsageLocationInfo
	/// </summary>
	public UsageLocationInfo() : base ( EnergymanagementDTD.USAGELOCATIONINFO ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="schoolId">"e.g., urn:sif:school:AcmeMiddleSchool1.CoyoteDistrict.Arizona.
	///                    e.g., urn:sif:school:AcmeMiddleSchool1.CoyoteDistrict.Arizona."</param>
	///<param name="building">Name of the School Building.</param>
	///
	public UsageLocationInfo( BinaryData schoolId, string building ) : base( EnergymanagementDTD.USAGELOCATIONINFO )
	{
		this.SchoolId = schoolId;
		this.Building = building;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected UsageLocationInfo( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public  IElementDef[] KeyFields {
		get { return new IElementDef[] { EnergymanagementDTD.USAGELOCATIONINFO_SCHOOLID, EnergymanagementDTD.USAGELOCATIONINFO_BUILDING }; }
	}

	///<summary>Sets the value of the <c>&lt;SchoolId&gt;</c> element.</summary>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;BinaryData&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setSchoolId</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>SchoolId</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void SetSchoolId( string Value ) {
		RemoveChild( EnergymanagementDTD.USAGELOCATIONINFO_SCHOOLID);
		AddChild( EnergymanagementDTD.USAGELOCATIONINFO_SCHOOLID, new BinaryData( Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SchoolId&gt;</c> element.
	/// </summary>
	/// <value> A BinaryData </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: ""e.g., urn:sif:school:AcmeMiddleSchool1.CoyoteDistrict.Arizona.
	///                    e.g., urn:sif:school:AcmeMiddleSchool1.CoyoteDistrict.Arizona.""</para>
	/// <para>To remove the <c>BinaryData</c>, set <c>SchoolId</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public BinaryData SchoolId
	{
		get
		{
			return (BinaryData)GetChild( EnergymanagementDTD.USAGELOCATIONINFO_SCHOOLID);
		}
		set
		{
			RemoveChild( EnergymanagementDTD.USAGELOCATIONINFO_SCHOOLID);
			if( value != null)
			{
				AddChild( EnergymanagementDTD.USAGELOCATIONINFO_SCHOOLID, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Building&gt;</c> element.
	/// </summary>
	/// <value> The <c>Building</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Name of the School Building."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string Building
	{
		get
		{
			return (string) GetSifSimpleFieldValue( EnergymanagementDTD.USAGELOCATIONINFO_BUILDING ) ;
		}
		set
		{
			SetFieldValue( EnergymanagementDTD.USAGELOCATIONINFO_BUILDING, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;EnergyZone&gt;</c> element.</summary>
	/// <param name="Type">Complex type of the facility or location supported by the Energy Zone.</param>
	///<remarks>
	/// <para>This form of <c>setEnergyZone</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>EnergyZone</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void SetEnergyZone( Type Type ) {
		RemoveChild( EnergymanagementDTD.USAGELOCATIONINFO_ENERGYZONE);
		AddChild( EnergymanagementDTD.USAGELOCATIONINFO_ENERGYZONE, new EnergyZone( Type ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EnergyZone&gt;</c> element.
	/// </summary>
	/// <value> An EnergyZone </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Complex element refining and narrowing the location of the contained readings within the School/Building."</para>
	/// <para>To remove the <c>EnergyZone</c>, set <c>EnergyZone</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public EnergyZone EnergyZone
	{
		get
		{
			return (EnergyZone)GetChild( EnergymanagementDTD.USAGELOCATIONINFO_ENERGYZONE);
		}
		set
		{
			RemoveChild( EnergymanagementDTD.USAGELOCATIONINFO_ENERGYZONE);
			if( value != null)
			{
				AddChild( EnergymanagementDTD.USAGELOCATIONINFO_ENERGYZONE, value );
			}
		}
	}

}}
