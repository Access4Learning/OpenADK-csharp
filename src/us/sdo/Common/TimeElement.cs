// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;

namespace OpenADK.Library.us.Common{

/// <summary>This element is designed to contain the time period attached to an object. Very long periods (school year, quarter, etc.) and very small periods (second, millisecond, etc.) can be defined. This element provides a scoping description of the time metadata enclosed.</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 2.0</para>
/// </remarks>
[Serializable]
public class TimeElement : SifKeyedElement
{
	/// <summary>
	/// Creates an instance of a TimeElement
	/// </summary>
	public TimeElement() : base ( CommonDTD.TIMEELEMENT ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="type">A Type</param>
	///<param name="code">This element provides a place for the application to send structured data (code values, unique identifier, timestamps). This code value can, depending upon the use case agreement between agents, be used to qualify the data in the Value element.</param>
	///<param name="name">Contains a human-readable description of the value in Value.</param>
	///<param name="value">Contains the human-readable value.</param>
	///
	public TimeElement( TimeElementType type, string code, string name, string value ) : base( CommonDTD.TIMEELEMENT )
	{
		this.SetType( type );
		this.Code = code;
		this.Name = name;
		this.Value = value;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected TimeElement( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { CommonDTD.TIMEELEMENT_CODE }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Type&gt;</c> element.
	/// </summary>
	/// <value> The <c>Type</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Type
	{
		get
		{ 
			return GetFieldValue( CommonDTD.TIMEELEMENT_TYPE );
		}
		set
		{
			SetField( CommonDTD.TIMEELEMENT_TYPE, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;Type&gt;</c> element.
	/// </summary>
	/// <param name="val">A TimeElementType object</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetType( TimeElementType val )
	{
		SetField( CommonDTD.TIMEELEMENT_TYPE, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Code&gt;</c> element.
	/// </summary>
	/// <value> The <c>Code</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "This element provides a place for the application to send structured data (code values, unique identifier, timestamps). This code value can, depending upon the use case agreement between agents, be used to qualify the data in the Value element."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Code
	{
		get
		{
			return (string) GetSifSimpleFieldValue( CommonDTD.TIMEELEMENT_CODE ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.TIMEELEMENT_CODE, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Name&gt;</c> element.
	/// </summary>
	/// <value> The <c>Name</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Contains a human-readable description of the value in Value."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Name
	{
		get
		{
			return (string) GetSifSimpleFieldValue( CommonDTD.TIMEELEMENT_NAME ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.TIMEELEMENT_NAME, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Value&gt;</c> element.
	/// </summary>
	/// <value> The <c>Value</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Contains the human-readable value."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Value
	{
		get
		{
			return (string) GetSifSimpleFieldValue( CommonDTD.TIMEELEMENT_VALUE ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.TIMEELEMENT_VALUE, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StartDateTime&gt;</c> element.
	/// </summary>
	/// <value> The <c>StartDateTime</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public DateTime? StartDateTime
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( CommonDTD.TIMEELEMENT_STARTDATETIME ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.TIMEELEMENT_STARTDATETIME, new SifDateTime( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EndDateTime&gt;</c> element.
	/// </summary>
	/// <value> The <c>EndDateTime</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public DateTime? EndDateTime
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( CommonDTD.TIMEELEMENT_ENDDATETIME ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.TIMEELEMENT_ENDDATETIME, new SifDateTime( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SpanGaps&gt;</c> element.
	/// </summary>
	/// <value> A SpanGaps </value>
	/// <remarks>
	/// <para>To remove the <c>SpanGaps</c>, set <c>SpanGaps</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public SpanGaps SpanGaps
	{
		get
		{
			return (SpanGaps)GetChild( CommonDTD.TIMEELEMENT_SPANGAPS);
		}
		set
		{
			RemoveChild( CommonDTD.TIMEELEMENT_SPANGAPS);
			if( value != null)
			{
				AddChild( CommonDTD.TIMEELEMENT_SPANGAPS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;IsCurrent&gt;</c> element.
	/// </summary>
	/// <value> The <c>IsCurrent</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public bool? IsCurrent
	{
		get
		{
			return (bool?) GetSifSimpleFieldValue( CommonDTD.TIMEELEMENT_ISCURRENT ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.TIMEELEMENT_ISCURRENT, new SifBoolean( value ), value );
		}
	}

}}
