// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;

namespace OpenADK.Library.us.Common{

/// <summary>Exceptionality description/code which will identify the exceptionality of the student.  Not all programs require identification of an exceptionality.  If required for this program type, must have at least one element with Type attribute = "Primary".</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 1.5r1</para>
/// </remarks>
[Serializable]
public class ExceptionalityCategory : SifKeyedElement
{
	/// <summary>
	/// Creates an instance of an ExceptionalityCategory
	/// </summary>
	public ExceptionalityCategory() : base ( CommonDTD.EXCEPTIONALITYCATEGORY ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="codeType">If CodeType = "NCES" then use code set 0768 Primary Disability Type [NCES Handbooks]</param>
	///<param name="exceptionalityPriority">Identifies priority of the exceptionality.  "Primary" is the first and is required even if only one exceptionality is specified. "Secondary", etc. are of lower priority. Primary, Secondary, and Tertiary must be specified before "Additional" is used.</param>
	///<param name="code">Exceptionality description/code which identifies the exceptionality or areas of need of the student.  Not all programs require identification of an exceptionality.  If required for this program type, must have at least one element with ExceptionalityPriority attribute = "Primary".</param>
	///
	public ExceptionalityCategory( string codeType, ExceptionalityPriority exceptionalityPriority, ExceptionalityCategoryCode code ) : base( CommonDTD.EXCEPTIONALITYCATEGORY )
	{
		this.CodeType = codeType;
		this.SetExceptionalityPriority( exceptionalityPriority );
		this.SetCode( code );
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected ExceptionalityCategory( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { CommonDTD.EXCEPTIONALITYCATEGORY_EXCEPTIONALITYPRIORITY }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>CodeType</c> attribute.
	/// </summary>
	/// <value> The <c>CodeType</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "If CodeType = "NCES" then use code set 0768 Primary Disability Type [NCES Handbooks]"</para>
	/// <para>Version: 1.5r1</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string CodeType
	{
		get
		{
			return (string) GetSifSimpleFieldValue( CommonDTD.EXCEPTIONALITYCATEGORY_CODETYPE ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.EXCEPTIONALITYCATEGORY_CODETYPE, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>ExceptionalityPriority</c> attribute.
	/// </summary>
	/// <value> The <c>ExceptionalityPriority</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "Identifies priority of the exceptionality.  "Primary" is the first and is required even if only one exceptionality is specified. "Secondary", etc. are of lower priority. Primary, Secondary, and Tertiary must be specified before "Additional" is used."</para>
	/// <para>This attribute is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering attributes of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;ExceptionalityPriority&gt;</description></item>
	/// </list>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string ExceptionalityPriority
	{
		get
		{ 
			return GetFieldValue( CommonDTD.EXCEPTIONALITYCATEGORY_EXCEPTIONALITYPRIORITY );
		}
		set
		{
			SetField( CommonDTD.EXCEPTIONALITYCATEGORY_EXCEPTIONALITYPRIORITY, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>ExceptionalityPriority</c> attribute.
	/// </summary>
	/// <param name="val">A ExceptionalityPriority object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "Identifies priority of the exceptionality.  "Primary" is the first and is required even if only one exceptionality is specified. "Secondary", etc. are of lower priority. Primary, Secondary, and Tertiary must be specified before "Additional" is used."</para>
	/// <para>This attribute is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering attributes of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;ExceptionalityPriority&gt;</description></item>
	/// </list>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetExceptionalityPriority( ExceptionalityPriority val )
	{
		SetField( CommonDTD.EXCEPTIONALITYCATEGORY_EXCEPTIONALITYPRIORITY, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;OtherCodeList&gt;</c> element.
	/// </summary>
	/// <value> An OtherCodeList </value>
	/// <remarks>
	/// <para>To remove the <c>OtherCodeList</c>, set <c>OtherCodeList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public OtherCodeList OtherCodeList
	{
		get
		{
			return (OtherCodeList)GetChild( CommonDTD.EXCEPTIONALITYCATEGORY_OTHERCODELIST);
		}
		set
		{
			RemoveChild( CommonDTD.EXCEPTIONALITYCATEGORY_OTHERCODELIST);
			if( value != null)
			{
				AddChild( CommonDTD.EXCEPTIONALITYCATEGORY_OTHERCODELIST, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Code&gt;</c> element.
	/// </summary>
	/// <value> The <c>Code</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Exceptionality description/code which identifies the exceptionality or areas of need of the student.  Not all programs require identification of an exceptionality.  If required for this program type, must have at least one element with ExceptionalityPriority attribute = "Primary"."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string Code
	{
		get
		{ 
			return GetFieldValue( CommonDTD.EXCEPTIONALITYCATEGORY_CODE );
		}
		set
		{
			SetField( CommonDTD.EXCEPTIONALITYCATEGORY_CODE, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;Code&gt;</c> element.
	/// </summary>
	/// <param name="val">A ExceptionalityCategoryCode object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Exceptionality description/code which identifies the exceptionality or areas of need of the student.  Not all programs require identification of an exceptionality.  If required for this program type, must have at least one element with ExceptionalityPriority attribute = "Primary"."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetCode( ExceptionalityCategoryCode val )
	{
		SetField( CommonDTD.EXCEPTIONALITYCATEGORY_CODE, val );
	}

}}
