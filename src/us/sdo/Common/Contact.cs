// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;

namespace OpenADK.Library.us.Common{

/// <summary>Typically used to provide the state information about a person's parents and legal guardians.</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 2.4</para>
/// </remarks>
[Serializable]
public class Contact : SifKeyedElement
{
	/// <summary>
	/// Creates an instance of a Contact
	/// </summary>
	public Contact() : base ( CommonDTD.CONTACT ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="relationship">Relationship to the person.</param>
	///
	public Contact( Relationship relationship ) : base( CommonDTD.CONTACT )
	{
		this.Relationship = relationship;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected Contact( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { CommonDTD.CONTACT_RELATIONSHIP }; }
	}

	///<summary>Sets the value of the <c>&lt;Relationship&gt;</c> element.</summary>
	/// <param name="Code">Code representing the relationship.</param>
	///<remarks>
	/// <para>This form of <c>setRelationship</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Relationship</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public void SetRelationship( RelationshipCode Code ) {
		RemoveChild( CommonDTD.CONTACT_RELATIONSHIP);
		AddChild( CommonDTD.CONTACT_RELATIONSHIP, new Relationship( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Relationship&gt;</c> element.
	/// </summary>
	/// <value> A Relationship </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Relationship to the person."</para>
	/// <para>To remove the <c>Relationship</c>, set <c>Relationship</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public Relationship Relationship
	{
		get
		{
			return (Relationship)GetChild( CommonDTD.CONTACT_RELATIONSHIP);
		}
		set
		{
			RemoveChild( CommonDTD.CONTACT_RELATIONSHIP);
			if( value != null)
			{
				AddChild( CommonDTD.CONTACT_RELATIONSHIP, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Names&gt;</c> element.
	/// </summary>
	/// <value> A Names </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The name(s) of the contact."</para>
	/// <para>To remove the <c>Names</c>, set <c>Names</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public Names Names
	{
		get
		{
			return (Names)GetChild( CommonDTD.CONTACT_NAMES);
		}
		set
		{
			RemoveChild( CommonDTD.CONTACT_NAMES);
			if( value != null)
			{
				AddChild( CommonDTD.CONTACT_NAMES, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;OtherIdList&gt;</c> element.
	/// </summary>
	/// <value> An OtherIdList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "OtherIds associated with the contact."</para>
	/// <para>To remove the <c>OtherIdList</c>, set <c>OtherIdList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public OtherIdList OtherIdList
	{
		get
		{
			return (OtherIdList)GetChild( CommonDTD.CONTACT_OTHERIDLIST);
		}
		set
		{
			RemoveChild( CommonDTD.CONTACT_OTHERIDLIST);
			if( value != null)
			{
				AddChild( CommonDTD.CONTACT_OTHERIDLIST, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EducationalLevel&gt;</c> element.
	/// </summary>
	/// <value> The <c>EducationalLevel</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The highest level of education completed by the contact person."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public string EducationalLevel
	{
		get
		{ 
			return GetFieldValue( CommonDTD.CONTACT_EDUCATIONALLEVEL );
		}
		set
		{
			SetField( CommonDTD.CONTACT_EDUCATIONALLEVEL, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;EducationalLevel&gt;</c> element.
	/// </summary>
	/// <param name="val">A EducationalLevelCode object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The highest level of education completed by the contact person."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public void SetEducationalLevel( EducationalLevelCode val )
	{
		SetField( CommonDTD.CONTACT_EDUCATIONALLEVEL, val );
	}

}}
