// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;

namespace OpenADK.Library.us.Common{

/// <summary>AbstractContentPackageType used as an element rather than an object,
	///    omitting RefId, SIF_Metadata and SIF_ExtendedElements.
	///    </summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.6</para>
/// </remarks>
[Serializable]
public class AbstractContentElementType : SifKeyedElement
{
	/// <summary>
	/// Creates an instance of an AbstractContentElementType
	/// </summary>
	public AbstractContentElementType() : base ( CommonDTD.ABSTRACTCONTENTELEMENTTYPE ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="mimeType">MIME type to indicate the content type.</param>
	///
	public AbstractContentElementType( string mimeType ) : base( CommonDTD.ABSTRACTCONTENTELEMENTTYPE )
	{
		this.MIMEType = mimeType;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected AbstractContentElementType( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { CommonDTD.ABSTRACTCONTENTELEMENTTYPE_MIMETYPE }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;XMLData&gt;</c> element.
	/// </summary>
	/// <value> The <c>XMLData</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Contains an arbitary XML element, encoded in UTF-8."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string XMLData
	{
		get
		{
			return (string) GetSifSimpleFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_XMLDATA ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_XMLDATA, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>Description</c> attribute.
	/// </summary>
	/// <value> The <c>Description</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "Contains an optional description of the content or a processing hint with
	///    regard to its structure (e.g. named standard, file layout or XSD). Contents may
	///    be mandated in instances of this type, or types that follow the AbstractContentPackageType
	///    pattern.
	///    "</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string Description
	{
		get
		{
			return (string) GetSifSimpleFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_DESCRIPTION ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_DESCRIPTION, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;TextData&gt;</c> element.
	/// </summary>
	/// <value> The <c>TextData</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Contains arbitrary text, encoded in UTF-8."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string TextData
	{
		get
		{
			return (string) GetSifSimpleFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_TEXTDATA ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_TEXTDATA, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>MIMEType</c> attribute.
	/// </summary>
	/// <value> The <c>MIMEType</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "MIME type to indicate the content type."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string MIMEType
	{
		get
		{
			return (string) GetSifSimpleFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_MIMETYPE ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_MIMETYPE, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>FileName</c> attribute.
	/// </summary>
	/// <value> The <c>FileName</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "Optional file name to indicate the file from which the content originated,
	///    or to suggest a name to use when saving the content.
	///    "</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string FileName
	{
		get
		{
			return (string) GetSifSimpleFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_FILENAME ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_FILENAME, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;BinaryData&gt;</c> element.
	/// </summary>
	/// <value> The <c>BinaryData</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Contains the base64Binary encoding of binary or text data not encoded in UTF-8."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public string BinaryData
	{
		get
		{
			return (string) GetSifSimpleFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_BINARYDATA ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_BINARYDATA, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;Reference&gt;</c> element.</summary>
	/// <param name="Url">Location of external content.</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;Reference&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setReference</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Reference</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public void SetReference( string Url, string Value ) {
		RemoveChild( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_REFERENCE);
		AddChild( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_REFERENCE, new Reference( Url, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Reference&gt;</c> element.
	/// </summary>
	/// <value> A Reference </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "References external content via a URL."</para>
	/// <para>To remove the <c>Reference</c>, set <c>Reference</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.6</para>
	/// </remarks>
	public Reference Reference
	{
		get
		{
			return (Reference)GetChild( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_REFERENCE);
		}
		set
		{
			RemoveChild( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_REFERENCE);
			if( value != null)
			{
				AddChild( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_REFERENCE, value );
			}
		}
	}

}}
