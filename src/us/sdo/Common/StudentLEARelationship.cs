// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;

namespace OpenADK.Library.us.Common{

/// <summary>
	///       The purpose of the StudentLEARelationship object is to represent the current information available regarding a single student's relationship/affiliation to a single LEA for a specific school year as of the time a SIF_Event or SIF_Response is generated by the system of record. This object is not designed to operate on a historical/longitudinal basis in the default context.
	/// 
	///       StudentLEARelationship instances must not span multiple school years.
	/// 
	///       Only one instance of the StudentLEARelationship object with MembershipType=Home may exist for a specific time interval between EntryDate and ExitDate (inclusive) for a given student, LEA, and school year.
	/// 
	///       Multiple instances of the StudentLEARelationship object with MembershipType=Concurrent may exist for a specific time interval between EntryDate and ExitDate (inclusive) for a given student, LEA, and school year.
	/// 
	///       Multiple instances of StudentLEARelationship will occur for specific or overlapping time intervals if a student has affiliations with multiple LEA's. This will most likely be detected during aggregate data collection from multiple LEA's. Since StudentLEARelationship/@RefId and StudentLEARelationship/@StudentPersonalRefId are zone-specific, external mechanisms (e.g. student locator) would be required to correlate multiple instances of a single student affiliating with multiple LEA's.
	///     </summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.2</para>
/// </remarks>
[Serializable]
public class StudentLEARelationship : SifDataObject
{
	/// <summary>
	/// Creates an instance of a StudentLEARelationship
	/// </summary>
	public StudentLEARelationship() : base( Adk.SifVersion, CommonDTD.STUDENTLEARELATIONSHIP ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="refId">The unique identifier for a particular affiliation between a student and a LEA.</param>
	///<param name="studentPersonalRefId">The SIF RefId of the StudentPersonal object to which this instance of StudentLEARelationship refers.</param>
	///<param name="leaInfoRefId">The SIF RefId of the LEAInfo object to which this instance of StudentLEARelationship refers.</param>
	///<param name="schoolYear">Contains the SIF school year to which this instance of StudentLEARelationship applies. StudentLEARelationship must not span multiple school years.</param>
	///<param name="membershipType">The type of this affiliation as it relates to the LEA identified in LEAInfoRefId.</param>
	///<param name="leaRelationshipType">An instance of the OrganizationRelationshipType common element that describes the details of the student's affiliation with the LEA.</param>
	///<param name="entryDate">The date from when this affiliation is valid.</param>
	///
	public StudentLEARelationship( string refId, string studentPersonalRefId, string leaInfoRefId, int? schoolYear, MembershipType membershipType, OrganizationRelationshipType leaRelationshipType, DateTime? entryDate ) : base( Adk.SifVersion, CommonDTD.STUDENTLEARELATIONSHIP )
	{
		this.RefId = refId;
		this.StudentPersonalRefId = studentPersonalRefId;
		this.LEAInfoRefId = leaInfoRefId;
		this.SchoolYear = schoolYear;
		this.SetMembershipType( membershipType );
		this.LEARelationshipType = leaRelationshipType;
		this.EntryDate = entryDate;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected StudentLEARelationship( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { CommonDTD.STUDENTLEARELATIONSHIP_REFID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>RefId</c> attribute.
	/// </summary>
	/// <value> The <c>RefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The unique identifier for a particular affiliation between a student and a LEA."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public override string RefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_REFID ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_REFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>StudentPersonalRefId</c> attribute.
	/// </summary>
	/// <value> The <c>StudentPersonalRefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The SIF RefId of the StudentPersonal object to which this instance of StudentLEARelationship refers."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public string StudentPersonalRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_STUDENTPERSONALREFID ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_STUDENTPERSONALREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>LEAInfoRefId</c> attribute.
	/// </summary>
	/// <value> The <c>LEAInfoRefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The SIF RefId of the LEAInfo object to which this instance of StudentLEARelationship refers."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public string LEAInfoRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_LEAINFOREFID ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_LEAINFOREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>SchoolYear</c> attribute.
	/// </summary>
	/// <value> The <c>SchoolYear</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "Contains the SIF school year to which this instance of StudentLEARelationship applies. StudentLEARelationship must not span multiple school years."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public int? SchoolYear
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_SCHOOLYEAR ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_SCHOOLYEAR, new SifInt( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;MembershipType&gt;</c> element.
	/// </summary>
	/// <value> The <c>MembershipType</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The type of this affiliation as it relates to the LEA identified in LEAInfoRefId."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public string MembershipType
	{
		get
		{ 
			return GetFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_MEMBERSHIPTYPE );
		}
		set
		{
			SetField( CommonDTD.STUDENTLEARELATIONSHIP_MEMBERSHIPTYPE, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;MembershipType&gt;</c> element.
	/// </summary>
	/// <param name="val">A MembershipType object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The type of this affiliation as it relates to the LEA identified in LEAInfoRefId."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public void SetMembershipType( MembershipType val )
	{
		SetField( CommonDTD.STUDENTLEARELATIONSHIP_MEMBERSHIPTYPE, val );
	}

	///<summary>Sets the value of the <c>&lt;LEARelationshipType&gt;</c> element.</summary>
	/// <param name="ResidencyStatus">A ResidencyStatus</param>
	/// <param name="ProvidingInstruction">Flag that indicates if the reporting organization is providing instruction to the student.</param>
	/// <param name="ProvidingServices">Flag that indicates if the reporting organization is providing services that are not related to instruction to the student. An example of a non-instructional service is transportation.</param>
	/// <param name="FinanciallyResponsible">Flag that indicates if the reporting organization is financially responsible for the student.</param>
	///<remarks>
	/// <para>This form of <c>setLEARelationshipType</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>LEARelationshipType</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public void SetLEARelationshipType( ResidencyStatus ResidencyStatus, bool? ProvidingInstruction, bool? ProvidingServices, bool? FinanciallyResponsible ) {
		RemoveChild( CommonDTD.STUDENTLEARELATIONSHIP_LEARELATIONSHIPTYPE);
		AddChild( CommonDTD.STUDENTLEARELATIONSHIP_LEARELATIONSHIPTYPE, new OrganizationRelationshipType( ResidencyStatus, ProvidingInstruction, ProvidingServices, FinanciallyResponsible ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;LEARelationshipType&gt;</c> element.
	/// </summary>
	/// <value> An OrganizationRelationshipType </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "An instance of the OrganizationRelationshipType common element that describes the details of the student's affiliation with the LEA."</para>
	/// <para>To remove the <c>OrganizationRelationshipType</c>, set <c>LEARelationshipType</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public OrganizationRelationshipType LEARelationshipType
	{
		get
		{
			return (OrganizationRelationshipType)GetChild( CommonDTD.STUDENTLEARELATIONSHIP_LEARELATIONSHIPTYPE);
		}
		set
		{
			RemoveChild( CommonDTD.STUDENTLEARELATIONSHIP_LEARELATIONSHIPTYPE);
			if( value != null)
			{
				AddChild( CommonDTD.STUDENTLEARELATIONSHIP_LEARELATIONSHIPTYPE, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EntryDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>EntryDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The date from when this affiliation is valid."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public DateTime? EntryDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_ENTRYDATE ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_ENTRYDATE, new SifDate( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;EntryType&gt;</c> element.</summary>
	/// <param name="Code">Code indicating the type of entry for this enrollment</param>
	///<remarks>
	/// <para>This form of <c>setEntryType</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>EntryType</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public void SetEntryType( EntryTypeCode Code ) {
		RemoveChild( CommonDTD.STUDENTLEARELATIONSHIP_ENTRYTYPE);
		AddChild( CommonDTD.STUDENTLEARELATIONSHIP_ENTRYTYPE, new EntryType( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EntryType&gt;</c> element.
	/// </summary>
	/// <value> An EntryType </value>
	/// <remarks>
	/// <para>To remove the <c>EntryType</c>, set <c>EntryType</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public EntryType EntryType
	{
		get
		{
			return (EntryType)GetChild( CommonDTD.STUDENTLEARELATIONSHIP_ENTRYTYPE);
		}
		set
		{
			RemoveChild( CommonDTD.STUDENTLEARELATIONSHIP_ENTRYTYPE);
			if( value != null)
			{
				AddChild( CommonDTD.STUDENTLEARELATIONSHIP_ENTRYTYPE, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ExitDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>ExitDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The last school calendar day (membership day) the student was affiliated with the LEA (inclusive)."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public DateTime? ExitDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_EXITDATE ) ;
		}
		set
		{
			SetFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_EXITDATE, new SifDate( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;ExitType&gt;</c> element.</summary>
	/// <param name="Code">Code indicating the type of exit for this enrollment.</param>
	///<remarks>
	/// <para>This form of <c>setExitType</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ExitType</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public void SetExitType( ExitTypeCode Code ) {
		RemoveChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITTYPE);
		AddChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITTYPE, new ExitType( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ExitType&gt;</c> element.
	/// </summary>
	/// <value> An ExitType </value>
	/// <remarks>
	/// <para>To remove the <c>ExitType</c>, set <c>ExitType</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public ExitType ExitType
	{
		get
		{
			return (ExitType)GetChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITTYPE);
		}
		set
		{
			RemoveChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITTYPE);
			if( value != null)
			{
				AddChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITTYPE, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;ExitStatus&gt;</c> element.</summary>
	/// <param name="Code">Code indicating the exit status for this affiliation.</param>
	///<remarks>
	/// <para>This form of <c>setExitStatus</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ExitStatus</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public void SetExitStatus( ExitStatusCode Code ) {
		RemoveChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITSTATUS);
		AddChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITSTATUS, new ExitStatus( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ExitStatus&gt;</c> element.
	/// </summary>
	/// <value> An ExitStatus </value>
	/// <remarks>
	/// <para>To remove the <c>ExitStatus</c>, set <c>ExitStatus</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public ExitStatus ExitStatus
	{
		get
		{
			return (ExitStatus)GetChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITSTATUS);
		}
		set
		{
			RemoveChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITSTATUS);
			if( value != null)
			{
				AddChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITSTATUS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;NonResidentAttendReason&gt;</c> element.
	/// </summary>
	/// <value> The <c>NonResidentAttendReason</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Indicates the reason that the student has an affiliation with this LEA if the student is a not a resident of the LEA."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public string NonResidentAttendReason
	{
		get
		{ 
			return GetFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_NONRESIDENTATTENDREASON );
		}
		set
		{
			SetField( CommonDTD.STUDENTLEARELATIONSHIP_NONRESIDENTATTENDREASON, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;NonResidentAttendReason&gt;</c> element.
	/// </summary>
	/// <param name="val">A NonResidentAttendRationale object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Indicates the reason that the student has an affiliation with this LEA if the student is a not a resident of the LEA."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public void SetNonResidentAttendReason( NonResidentAttendRationale val )
	{
		SetField( CommonDTD.STUDENTLEARELATIONSHIP_NONRESIDENTATTENDREASON, val );
	}

	///<summary>Sets the value of the <c>&lt;GradeLevel&gt;</c> element.</summary>
	/// <param name="Code">Code representing the grade level.</param>
	///<remarks>
	/// <para>This form of <c>setGradeLevel</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>GradeLevel</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public void SetGradeLevel( GradeLevelCode Code ) {
		RemoveChild( CommonDTD.STUDENTLEARELATIONSHIP_GRADELEVEL);
		AddChild( CommonDTD.STUDENTLEARELATIONSHIP_GRADELEVEL, new GradeLevel( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;GradeLevel&gt;</c> element.
	/// </summary>
	/// <value> A GradeLevel </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The grade or academic level of the student."</para>
	/// <para>To remove the <c>GradeLevel</c>, set <c>GradeLevel</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.2</para>
	/// </remarks>
	public GradeLevel GradeLevel
	{
		get
		{
			return (GradeLevel)GetChild( CommonDTD.STUDENTLEARELATIONSHIP_GRADELEVEL);
		}
		set
		{
			RemoveChild( CommonDTD.STUDENTLEARELATIONSHIP_GRADELEVEL);
			if( value != null)
			{
				AddChild( CommonDTD.STUDENTLEARELATIONSHIP_GRADELEVEL, value );
			}
		}
	}

}}
