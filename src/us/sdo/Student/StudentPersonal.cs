// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Student{

/// <summary>The StudentPersonal object contains personal information related to a student.</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 1.1</para>
/// </remarks>
[Serializable]
public class StudentPersonal : SifDataObject
{
	/// <summary>
	/// Creates an instance of a StudentPersonal
	/// </summary>
	public StudentPersonal() : base( Adk.SifVersion, StudentDTD.STUDENTPERSONAL ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="refId">The GUID of the student.</param>
	///<param name="name">Name of the student.  Note: Always use Type value of 04.</param>
	///
	public StudentPersonal( string refId, Name name ) : base( Adk.SifVersion, StudentDTD.STUDENTPERSONAL )
	{
		this.RefId = refId;
		this.Name = name;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected StudentPersonal( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { StudentDTD.STUDENTPERSONAL_REFID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>RefId</c> attribute.
	/// </summary>
	/// <value> The <c>RefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The GUID of the student."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public override string RefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STUDENTPERSONAL_REFID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTPERSONAL_REFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AlertMessages&gt;</c> element.
	/// </summary>
	/// <value> An AlertMessages </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The AlertMessage element contains an alert message that is associated with the student."</para>
	/// <para>To remove the <c>AlertMessages</c>, set <c>AlertMessages</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public AlertMessages AlertMessages
	{
		get
		{
			return (AlertMessages)GetChild( StudentDTD.STUDENTPERSONAL_ALERTMESSAGES);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTPERSONAL_ALERTMESSAGES);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTPERSONAL_ALERTMESSAGES, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;LocalId&gt;</c> element.
	/// </summary>
	/// <value> The <c>LocalId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The locally-assigned identifier for this student."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string LocalId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STUDENTPERSONAL_LOCALID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTPERSONAL_LOCALID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;OtherIdList&gt;</c> element.
	/// </summary>
	/// <value> An OtherIdList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Lists all "other" IDs associated with the student."</para>
	/// <para>To remove the <c>OtherIdList</c>, set <c>OtherIdList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public OtherIdList OtherIdList
	{
		get
		{
			return (OtherIdList)GetChild( StudentDTD.STUDENTPERSONAL_OTHERIDLIST);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTPERSONAL_OTHERIDLIST);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTPERSONAL_OTHERIDLIST, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;MedicalAlertMessages&gt;</c> element.
	/// </summary>
	/// <value> A MedicalAlertMessages </value>
	/// <remarks>
	/// <para>To remove the <c>MedicalAlertMessages</c>, set <c>MedicalAlertMessages</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public MedicalAlertMessages MedicalAlertMessages
	{
		get
		{
			return (MedicalAlertMessages)GetChild( StudentDTD.STUDENTPERSONAL_MEDICALALERTMESSAGES);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTPERSONAL_MEDICALALERTMESSAGES);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTPERSONAL_MEDICALALERTMESSAGES, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StateProvinceId&gt;</c> element.
	/// </summary>
	/// <value> The <c>StateProvinceId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The state-assigned identifier for this student."</para>
	/// <para>This element is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering elements of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;StateProvinceId&gt;</description></item>
	/// </list>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string StateProvinceId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STUDENTPERSONAL_STATEPROVINCEID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTPERSONAL_STATEPROVINCEID, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;Name&gt;</c> element.</summary>
	/// <param name="Type">Code that specifies what type of name this is.  If unsure, use 04.</param>
	/// <param name="LastName">The last name.</param>
	/// <param name="FirstName">The first name.</param>
	///<remarks>
	/// <para>This form of <c>setName</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Name</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetName( NameType Type, string LastName, string FirstName ) {
		RemoveChild( StudentDTD.STUDENTPERSONAL_NAME);
		AddChild( StudentDTD.STUDENTPERSONAL_NAME, new Name( Type, LastName, FirstName ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Name&gt;</c> element.
	/// </summary>
	/// <value> A Name </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Name of the student.  Note: Always use Type value of 04."</para>
	/// <para>To remove the <c>Name</c>, set <c>Name</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public Name Name
	{
		get
		{
			return (Name)GetChild( StudentDTD.STUDENTPERSONAL_NAME);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTPERSONAL_NAME);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTPERSONAL_NAME, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ElectronicIdList&gt;</c> element.
	/// </summary>
	/// <value> An ElectronicIdList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Electronic identifier(s) associated with this entity."</para>
	/// <para>To remove the <c>ElectronicIdList</c>, set <c>ElectronicIdList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public ElectronicIdList ElectronicIdList
	{
		get
		{
			return (ElectronicIdList)GetChild( StudentDTD.STUDENTPERSONAL_ELECTRONICIDLIST);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTPERSONAL_ELECTRONICIDLIST);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTPERSONAL_ELECTRONICIDLIST, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EmailList&gt;</c> element.
	/// </summary>
	/// <value> An EmailList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The student's e-mail address(es)."</para>
	/// <para>To remove the <c>EmailList</c>, set <c>EmailList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public EmailList EmailList
	{
		get
		{
			return (EmailList)GetChild( StudentDTD.STUDENTPERSONAL_EMAILLIST);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTPERSONAL_EMAILLIST);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTPERSONAL_EMAILLIST, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ProjectedGraduationYear&gt;</c> element.
	/// </summary>
	/// <value> The <c>ProjectedGraduationYear</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Currently projected graduation year."</para>
	/// <para>This element is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering elements of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;ProjectedGraduationYear&gt;</description></item>
	/// </list>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public int? ProjectedGraduationYear
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( StudentDTD.STUDENTPERSONAL_PROJECTEDGRADUATIONYEAR ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTPERSONAL_PROJECTEDGRADUATIONYEAR, new SifInt( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;OnTimeGraduationYear&gt;</c> element.
	/// </summary>
	/// <value> The <c>OnTimeGraduationYear</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "First projected graduation year, usually determined when student is accepted into 9th grade."</para>
	/// <para>This element is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering elements of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;OnTimeGraduationYear&gt;</description></item>
	/// </list>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public int? OnTimeGraduationYear
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( StudentDTD.STUDENTPERSONAL_ONTIMEGRADUATIONYEAR ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTPERSONAL_ONTIMEGRADUATIONYEAR, new SifInt( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;GraduationDate&gt;</c> element.</summary>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;PartialDateType&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setGraduationDate</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>GraduationDate</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetGraduationDate( string Value ) {
		RemoveChild( StudentDTD.STUDENTPERSONAL_GRADUATIONDATE);
		AddChild( StudentDTD.STUDENTPERSONAL_GRADUATIONDATE, new PartialDateType( Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;GraduationDate&gt;</c> element.
	/// </summary>
	/// <value> A PartialDateType </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "First projected graduation year, usually determined when student is accepted into 9th grade."</para>
	/// <para>This null is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering nulls of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;GraduationDate&gt;</description></item>
	/// </list>
	/// <para>To remove the <c>PartialDateType</c>, set <c>GraduationDate</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public PartialDateType GraduationDate
	{
		get
		{
			return (PartialDateType)GetChild( StudentDTD.STUDENTPERSONAL_GRADUATIONDATE);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTPERSONAL_GRADUATIONDATE);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTPERSONAL_GRADUATIONDATE, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Demographics&gt;</c> element.
	/// </summary>
	/// <value> A Demographics </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "This element contains information related to student demographics."</para>
	/// <para>To remove the <c>Demographics</c>, set <c>Demographics</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public Demographics Demographics
	{
		get
		{
			return (Demographics)GetChild( StudentDTD.STUDENTPERSONAL_DEMOGRAPHICS);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTPERSONAL_DEMOGRAPHICS);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTPERSONAL_DEMOGRAPHICS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;OtherNames&gt;</c> element.
	/// </summary>
	/// <value> An OtherNames </value>
	/// <remarks>
	/// <para>To remove the <c>OtherNames</c>, set <c>OtherNames</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public OtherNames OtherNames
	{
		get
		{
			return (OtherNames)GetChild( StudentDTD.STUDENTPERSONAL_OTHERNAMES);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTPERSONAL_OTHERNAMES);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTPERSONAL_OTHERNAMES, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;AddressList&gt;</c> element.</summary>
	/// <param name="PickupOrDropoff">Specifies if this is a pickup or dropoff address</param>
	/// <param name="DayOfWeek">The days of the week for which the pickup or dropoff address is valid</param>
	/// <param name="Address">The street address</param>
	///<remarks>
	/// <para>This form of <c>setAddressList</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>AddressList</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetAddressList( PickupOrDropoff PickupOrDropoff, string DayOfWeek, Address Address ) {
		RemoveChild( StudentDTD.STUDENTPERSONAL_ADDRESSLIST);
		AddChild( StudentDTD.STUDENTPERSONAL_ADDRESSLIST, new StudentAddressList( PickupOrDropoff, DayOfWeek, Address ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AddressList&gt;</c> element.
	/// </summary>
	/// <value> A StudentAddressList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The student's address(es)"</para>
	/// <para>This null is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering nulls of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;AddressList&gt;</description></item>
	/// </list>
	/// <para>To remove the <c>StudentAddressList</c>, set <c>AddressList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public StudentAddressList AddressList
	{
		get
		{
			return (StudentAddressList)GetChild( StudentDTD.STUDENTPERSONAL_ADDRESSLIST);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTPERSONAL_ADDRESSLIST);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTPERSONAL_ADDRESSLIST, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PhoneNumberList&gt;</c> element.
	/// </summary>
	/// <value> A PhoneNumberList </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The student's phone number(s)."</para>
	/// <para>To remove the <c>PhoneNumberList</c>, set <c>PhoneNumberList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public PhoneNumberList PhoneNumberList
	{
		get
		{
			return (PhoneNumberList)GetChild( StudentDTD.STUDENTPERSONAL_PHONENUMBERLIST);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTPERSONAL_PHONENUMBERLIST);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTPERSONAL_PHONENUMBERLIST, value );
			}
		}
	}

	/// <summary>Adds a new <c>&lt;StudentAddress&gt;</c> child element.</summary>
	/// <param name="val">A StudentAddress object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "This element has the student's address information.  "</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0r1</para>
	/// </remarks>
	public void AddStudentAddress( StudentAddress val ) { 
		AddChild( StudentDTD.STUDENTPERSONAL_STUDENTADDRESS, val );
	}

	///<summary>Adds the value of the <c>&lt;StudentAddress&gt;</c> element.</summary>
	/// <param name="PickupOrDropoff">Specifies if this is a pickup or dropoff address. This property may be needed by a transportation application.</param>
	/// <param name="DayOfWeek">This attribute indicates the days of the week for which the pickup or dropoff address is valid. The attribute if relevant only if the value of the PickupOrDropoff attribute is "Pickup," "Dropoff" or "Both."</param>
	/// <param name="Address">This is the actual address.</param>
	///<remarks>
	/// <para>This form of <c>setStudentAddress</c> is provided as a convenience method
	/// that is functionally equivalent to the method <c>AddStudentAddress</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0r1</para>
	/// </remarks>
	public void AddStudentAddress( string PickupOrDropoff, string DayOfWeek, Address Address ) {
		AddChild( StudentDTD.STUDENTPERSONAL_STUDENTADDRESS, new StudentAddress( PickupOrDropoff, DayOfWeek, Address ) );
	}

	/// <summary>
	/// Removes a <see cref="StudentAddress"/> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	/// </summary>
	/// <param name="PickupOrDropoff">Identifies the StudentAddress object to remove by its PickupOrDropoff value</param>
	/// <param name="DayOfWeek">Identifies the StudentAddress object to remove by its DayOfWeek value</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0r1</para>
	/// </remarks>
	public void RemoveStudentAddress( string PickupOrDropoff, string DayOfWeek ) { 
		RemoveChild( StudentDTD.STUDENTPERSONAL_STUDENTADDRESS, new String[] { PickupOrDropoff.ToString(),DayOfWeek.ToString() } );
	}

	/// <summary>
	/// Gets a <see cref="StudentAddress"/> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	/// </summary>
	/// <param name="PickupOrDropoff">Identifies the StudentAddress object to return by its "PickupOrDropoff" attribute value</param>
	/// <param name="DayOfWeek">Identifies the StudentAddress object to return by its "DayOfWeek" attribute value</param>
	/// <returns>A StudentAddress object</returns>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0r1</para>
	/// </remarks>
	public StudentAddress GetStudentAddress( string PickupOrDropoff, string DayOfWeek ) { 
		return (StudentAddress)GetChild( StudentDTD.STUDENTPERSONAL_STUDENTADDRESS, new string[] { PickupOrDropoff.ToString(),DayOfWeek.ToString() } );
	}

	/// <summary>
	/// Gets all StudentAddress object instances. More than once instance can be defined for this object because it is a repeatable field element.
	/// </summary>
	/// <returns>An array of StudentAddress objects</returns>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0r1</para>
	/// </remarks>
	public StudentAddress[] GetStudentAddresses()
	{
		return GetChildren<StudentAddress>().ToArray();
	}

	/// <summary>
	/// Sets all StudentAddress object instances. All existing 
	/// <c>StudentAddress</c> instances 
	/// are removed and replaced with this list. Calling this method with the 
	/// parameter value set to null removes all <c>StudentAddresses</c>.
	/// </summary>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0r1</para>
	/// </remarks>
	public void SetStudentAddresses( StudentAddress[] items)
	{
		SetChildren( StudentDTD.STUDENTPERSONAL_STUDENTADDRESS, items );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;MostRecent&gt;</c> element.
	/// </summary>
	/// <value> A MostRecent </value>
	/// <remarks>
	/// <para>To remove the <c>MostRecent</c>, set <c>MostRecent</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public MostRecent MostRecent
	{
		get
		{
			return (MostRecent)GetChild( StudentDTD.STUDENTPERSONAL_MOSTRECENT);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTPERSONAL_MOSTRECENT);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTPERSONAL_MOSTRECENT, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AcceptableUsePolicy&gt;</c> element.
	/// </summary>
	/// <value> The <c>AcceptableUsePolicy</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Does the student have a current signed Acceptable Use Policy document for system access?"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string AcceptableUsePolicy
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTPERSONAL_ACCEPTABLEUSEPOLICY );
		}
		set
		{
			SetField( StudentDTD.STUDENTPERSONAL_ACCEPTABLEUSEPOLICY, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;AcceptableUsePolicy&gt;</c> element.
	/// </summary>
	/// <param name="val">A YesNo object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Does the student have a current signed Acceptable Use Policy document for system access?"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetAcceptableUsePolicy( YesNo val )
	{
		SetField( StudentDTD.STUDENTPERSONAL_ACCEPTABLEUSEPOLICY, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;IDEA&gt;</c> element.
	/// </summary>
	/// <value> The <c>IDEA</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string IDEA
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTPERSONAL_IDEA );
		}
		set
		{
			SetField( StudentDTD.STUDENTPERSONAL_IDEA, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;IDEA&gt;</c> element.
	/// </summary>
	/// <param name="val">A YesNoUnknown object</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetIDEA( YesNoUnknown val )
	{
		SetField( StudentDTD.STUDENTPERSONAL_IDEA, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Migrant&gt;</c> element.
	/// </summary>
	/// <value> The <c>Migrant</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Migrant
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTPERSONAL_MIGRANT );
		}
		set
		{
			SetField( StudentDTD.STUDENTPERSONAL_MIGRANT, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;Migrant&gt;</c> element.
	/// </summary>
	/// <param name="val">A YesNoUnknown object</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetMigrant( YesNoUnknown val )
	{
		SetField( StudentDTD.STUDENTPERSONAL_MIGRANT, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Title1&gt;</c> element.
	/// </summary>
	/// <value> The <c>Title1</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Title1
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTPERSONAL_TITLE1 );
		}
		set
		{
			SetField( StudentDTD.STUDENTPERSONAL_TITLE1, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;Title1&gt;</c> element.
	/// </summary>
	/// <param name="val">A YesNoUnknown object</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetTitle1( YesNoUnknown val )
	{
		SetField( StudentDTD.STUDENTPERSONAL_TITLE1, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;GiftedTalented&gt;</c> element.
	/// </summary>
	/// <value> The <c>GiftedTalented</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string GiftedTalented
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTPERSONAL_GIFTEDTALENTED );
		}
		set
		{
			SetField( StudentDTD.STUDENTPERSONAL_GIFTEDTALENTED, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;GiftedTalented&gt;</c> element.
	/// </summary>
	/// <param name="val">A YesNoUnknown object</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetGiftedTalented( YesNoUnknown val )
	{
		SetField( StudentDTD.STUDENTPERSONAL_GIFTEDTALENTED, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EconomicDisadvantage&gt;</c> element.
	/// </summary>
	/// <value> The <c>EconomicDisadvantage</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string EconomicDisadvantage
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTPERSONAL_ECONOMICDISADVANTAGE );
		}
		set
		{
			SetField( StudentDTD.STUDENTPERSONAL_ECONOMICDISADVANTAGE, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;EconomicDisadvantage&gt;</c> element.
	/// </summary>
	/// <param name="val">A YesNoUnknown object</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetEconomicDisadvantage( YesNoUnknown val )
	{
		SetField( StudentDTD.STUDENTPERSONAL_ECONOMICDISADVANTAGE, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ELL&gt;</c> element.
	/// </summary>
	/// <value> The <c>ELL</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string ELL
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTPERSONAL_ELL );
		}
		set
		{
			SetField( StudentDTD.STUDENTPERSONAL_ELL, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;ELL&gt;</c> element.
	/// </summary>
	/// <param name="val">A YesNoUnknown object</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetELL( YesNoUnknown val )
	{
		SetField( StudentDTD.STUDENTPERSONAL_ELL, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Homeless&gt;</c> element.
	/// </summary>
	/// <value> The <c>Homeless</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Homeless
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTPERSONAL_HOMELESS );
		}
		set
		{
			SetField( StudentDTD.STUDENTPERSONAL_HOMELESS, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;Homeless&gt;</c> element.
	/// </summary>
	/// <param name="val">A YesNoUnknown object</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetHomeless( YesNoUnknown val )
	{
		SetField( StudentDTD.STUDENTPERSONAL_HOMELESS, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Section504&gt;</c> element.
	/// </summary>
	/// <value> The <c>Section504</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Section504
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTPERSONAL_SECTION504 );
		}
		set
		{
			SetField( StudentDTD.STUDENTPERSONAL_SECTION504, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;Section504&gt;</c> element.
	/// </summary>
	/// <param name="val">A YesNoUnknown object</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetSection504( YesNoUnknown val )
	{
		SetField( StudentDTD.STUDENTPERSONAL_SECTION504, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;VocationalConcentrator&gt;</c> element.
	/// </summary>
	/// <value> The <c>VocationalConcentrator</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string VocationalConcentrator
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTPERSONAL_VOCATIONALCONCENTRATOR );
		}
		set
		{
			SetField( StudentDTD.STUDENTPERSONAL_VOCATIONALCONCENTRATOR, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;VocationalConcentrator&gt;</c> element.
	/// </summary>
	/// <param name="val">A YesNoUnknown object</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetVocationalConcentrator( YesNoUnknown val )
	{
		SetField( StudentDTD.STUDENTPERSONAL_VOCATIONALCONCENTRATOR, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Immigrant&gt;</c> element.
	/// </summary>
	/// <value> The <c>Immigrant</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Immigrant
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTPERSONAL_IMMIGRANT );
		}
		set
		{
			SetField( StudentDTD.STUDENTPERSONAL_IMMIGRANT, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;Immigrant&gt;</c> element.
	/// </summary>
	/// <param name="val">A YesNoUnknown object</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetImmigrant( YesNoUnknown val )
	{
		SetField( StudentDTD.STUDENTPERSONAL_IMMIGRANT, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;NeglectedDelinquent&gt;</c> element.
	/// </summary>
	/// <value> The <c>NeglectedDelinquent</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string NeglectedDelinquent
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTPERSONAL_NEGLECTEDDELINQUENT );
		}
		set
		{
			SetField( StudentDTD.STUDENTPERSONAL_NEGLECTEDDELINQUENT, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;NeglectedDelinquent&gt;</c> element.
	/// </summary>
	/// <param name="val">A YesNoUnknown object</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetNeglectedDelinquent( YesNoUnknown val )
	{
		SetField( StudentDTD.STUDENTPERSONAL_NEGLECTEDDELINQUENT, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;FirstUSEnrollment&gt;</c> element.
	/// </summary>
	/// <value> The <c>FirstUSEnrollment</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The date on which the student was first enrolled in the US school system."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public DateTime? FirstUSEnrollment
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( StudentDTD.STUDENTPERSONAL_FIRSTUSENROLLMENT ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTPERSONAL_FIRSTUSENROLLMENT, new SifDate( value ), value );
		}
	}

		#region EXTRA METHODS

// BEGIN EXTRA METHODS (C:/dev/OpenADK-java/adk-generator/datadef/us/sif20/StudentPersonal.txt.cs)

 /// <summary>
    /// Adds a StudentAddressList instance for interoperating with multiple addresses in SIF Version 1.x
    /// </summary>
    /// <remarks>
    /// <para>In SIF 2.0, the StudentAddressList object is not a repeatable element. Use this method of adding
    ///  student address only if you are creating an object for use in SIF 1.x
    /// </para>
    /// <para>In SIF 2.0, or if you are only dealing with a single Student address, you can add the address 
    /// to the StudentPersonal object by calling the <see cref="StudentAddressList#Add"/> method
    /// </remarks>
    /// <param name="value"></param>
	public void AddAddressList( StudentAddressList value ) { 
		AddChild( StudentDTD.STUDENTPERSONAL_ADDRESSLIST, value);
	}


    /// <summary>
    /// Adds a StudentAddressList instance for interoperating with multiple addresses in SIF Version 1.x
    /// </summary>
    /// <remarks>
    /// <para>In SIF 2.0, the StudentAddressList object is not a repeatable element. Use this method of adding
    ///  student address only if you are creating an object for use in SIF 1.x
    /// </para>
    /// <para>In SIF 2.0, or if you are only dealing with a single Student address, you can add the address 
    /// to the StudentPersonal object by calling the <see cref="StudentAddressList#Add"/> method
    /// </remarks>
    /// <param name="pickupOrDropoff">Specifies if this is a pickup or dropoff address</param>
    /// <param name="dayOfWeek"> The days of the week for which the pickup or dropoff address is valid</param>
    /// <param name="address">The street address</param>
    public void AddAddressList( PickupOrDropoff pickupOrDropoff, String dayOfWeek, Address address ) {
		AddChild( StudentDTD.STUDENTPERSONAL_ADDRESSLIST, new StudentAddressList( pickupOrDropoff, dayOfWeek, address ) );
	}





    /// <summary>
    ///  Gets all <code>StudentAddressList</code> object instances. More than one instance can be defined for this object in SIF 1.x,
    ///  but this object is not repeatable in SIF 2.x. In SIF 2.x, all of the student addresses can be obtained by calling
    ///  <see cref="StudentAddressList#Addresses"/> property
    /// </summary>
    /// <returns></returns>
	public StudentAddressList[] AddressLists {
        get
        {
            SifElementList v = GetChildList(StudentDTD.STUDENTPERSONAL_ADDRESSLIST );
            StudentAddressList[] cvt = new StudentAddressList[v.Count];
            v.CopyTo(cvt, 0);
            return cvt;
        }
	}		
	

// END EXTRA METHODS

		#endregion // EXTRA METHODS
}}
