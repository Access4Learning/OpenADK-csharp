// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Student{

/// <summary>
	///       This object defines information related to a student's enrollment. SIF_Events are reported. StudentSchoolEnrollment
	///       instances must not span multiple school years.
	///     </summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 1.1</para>
/// </remarks>
[Serializable]
public class StudentSchoolEnrollment : SifDataObject
{
	/// <summary>
	/// Creates an instance of a StudentSchoolEnrollment
	/// </summary>
	public StudentSchoolEnrollment() : base( Adk.SifVersion, StudentDTD.STUDENTSCHOOLENROLLMENT ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="refId">The ID (GUID) that uniquely identifies a particular enrollment.</param>
	///<param name="studentPersonalRefId">The ID (GUID) of the student to whom this information is linked.</param>
	///<param name="schoolInfoRefId">The ID (GUID) of the school to which this enrollment applies.</param>
	///<param name="membershipType">The type of this enrollment as it relates to the school identified in SchoolInfoRefId.</param>
	///<param name="timeFrame">The timeframe of the enrollment based on the SIF_Date in the SIF_Header of the message. For events, it is determined as of the date the event is generated. For requests and responses, it is calculated based on the date of the request.</param>
	///
	public StudentSchoolEnrollment( string refId, string studentPersonalRefId, string schoolInfoRefId, MembershipType membershipType, TimeFrame timeFrame ) : base( Adk.SifVersion, StudentDTD.STUDENTSCHOOLENROLLMENT )
	{
		this.RefId = refId;
		this.StudentPersonalRefId = studentPersonalRefId;
		this.SchoolInfoRefId = schoolInfoRefId;
		this.SetMembershipType( membershipType );
		this.SetTimeFrame( timeFrame );
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected StudentSchoolEnrollment( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { StudentDTD.STUDENTSCHOOLENROLLMENT_REFID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>RefId</c> attribute.
	/// </summary>
	/// <value> The <c>RefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The ID (GUID) that uniquely identifies a particular enrollment."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public override string RefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_REFID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_REFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>StudentPersonalRefId</c> attribute.
	/// </summary>
	/// <value> The <c>StudentPersonalRefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The ID (GUID) of the student to whom this information is linked."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public string StudentPersonalRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_STUDENTPERSONALREFID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_STUDENTPERSONALREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>SchoolInfoRefId</c> attribute.
	/// </summary>
	/// <value> The <c>SchoolInfoRefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The ID (GUID) of the school to which this enrollment applies."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public string SchoolInfoRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_SCHOOLINFOREFID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_SCHOOLINFOREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>MembershipType</c> attribute.
	/// </summary>
	/// <value> The <c>MembershipType</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The type of this enrollment as it relates to the school identified in SchoolInfoRefId."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public string MembershipType
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_MEMBERSHIPTYPE );
		}
		set
		{
			SetField( StudentDTD.STUDENTSCHOOLENROLLMENT_MEMBERSHIPTYPE, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>MembershipType</c> attribute.
	/// </summary>
	/// <param name="val">A MembershipType object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The type of this enrollment as it relates to the school identified in SchoolInfoRefId."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetMembershipType( MembershipType val )
	{
		SetField( StudentDTD.STUDENTSCHOOLENROLLMENT_MEMBERSHIPTYPE, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>TimeFrame</c> attribute.
	/// </summary>
	/// <value> The <c>TimeFrame</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The timeframe of the enrollment based on the SIF_Date in the SIF_Header of the message. For events, it is determined as of the date the event is generated. For requests and responses, it is calculated based on the date of the request."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public string TimeFrame
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_TIMEFRAME );
		}
		set
		{
			SetField( StudentDTD.STUDENTSCHOOLENROLLMENT_TIMEFRAME, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>TimeFrame</c> attribute.
	/// </summary>
	/// <param name="val">A TimeFrame object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The timeframe of the enrollment based on the SIF_Date in the SIF_Header of the message. For events, it is determined as of the date the event is generated. For requests and responses, it is calculated based on the date of the request."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetTimeFrame( TimeFrame val )
	{
		SetField( StudentDTD.STUDENTSCHOOLENROLLMENT_TIMEFRAME, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SchoolYear&gt;</c> element.
	/// </summary>
	/// <value> The <c>SchoolYear</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "
	///         School year for which this enrollment is applicable, expressed as the four-digit year in which the school year ends (e.g. 2007 for the 2006-07 school year). StudentSchoolEnrollment instances must not span multiple school years.
	///       "</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public int? SchoolYear
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_SCHOOLYEAR ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_SCHOOLYEAR, new SifInt( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;EnrollStatus&gt;</c> element.</summary>
	/// <param name="Code">A Code</param>
	///<remarks>
	/// <para>This form of <c>setEnrollStatus</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>EnrollStatus</c></para>
	/// <para>Version: 1.5r1</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetEnrollStatus( string Code ) {
		RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ENROLLSTATUS);
		AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ENROLLSTATUS, new EnrollStatus( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EnrollStatus&gt;</c> element.
	/// </summary>
	/// <value> An EnrollStatus </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The status of this enrollment (deprecated)"</para>
	/// <para>To remove the <c>EnrollStatus</c>, set <c>EnrollStatus</c> to <c>null</c></para>
	/// <para>Version: 1.5r1</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public EnrollStatus EnrollStatus
	{
		get
		{
			return (EnrollStatus)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ENROLLSTATUS);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ENROLLSTATUS);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ENROLLSTATUS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EntryDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>EntryDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The date from when this enrollment is valid."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public DateTime? EntryDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_ENTRYDATE ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_ENTRYDATE, new SifDate( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;EntryType&gt;</c> element.</summary>
	/// <param name="Code">Code indicating the type of entry for this enrollment</param>
	///<remarks>
	/// <para>This form of <c>setEntryType</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>EntryType</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetEntryType( EntryTypeCode Code ) {
		RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ENTRYTYPE);
		AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ENTRYTYPE, new EntryType( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EntryType&gt;</c> element.
	/// </summary>
	/// <value> An EntryType </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Code indicating the type of entry for this enrollment (deprecated)"</para>
	/// <para>To remove the <c>EntryType</c>, set <c>EntryType</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public EntryType EntryType
	{
		get
		{
			return (EntryType)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ENTRYTYPE);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ENTRYTYPE);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ENTRYTYPE, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;GradeLevel&gt;</c> element.</summary>
	/// <param name="Code">Code representing the grade level.</param>
	///<remarks>
	/// <para>This form of <c>setGradeLevel</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>GradeLevel</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetGradeLevel( GradeLevelCode Code ) {
		RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_GRADELEVEL);
		AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_GRADELEVEL, new GradeLevel( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;GradeLevel&gt;</c> element.
	/// </summary>
	/// <value> A GradeLevel </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Grade or academic level of student for this enrollment."</para>
	/// <para>To remove the <c>GradeLevel</c>, set <c>GradeLevel</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public GradeLevel GradeLevel
	{
		get
		{
			return (GradeLevel)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_GRADELEVEL);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_GRADELEVEL);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_GRADELEVEL, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Homeroom&gt;</c> element.</summary>
	/// <param name="SifRefObject">The name of the object referenced.</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;Homeroom&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setHomeroom</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Homeroom</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetHomeroom( string SifRefObject, string Value ) {
		RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_HOMEROOM);
		AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_HOMEROOM, new Homeroom( SifRefObject, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Homeroom&gt;</c> element.
	/// </summary>
	/// <value> An Homeroom </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Homeroom for this enrollment"</para>
	/// <para>To remove the <c>Homeroom</c>, set <c>Homeroom</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public Homeroom Homeroom
	{
		get
		{
			return (Homeroom)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_HOMEROOM);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_HOMEROOM);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_HOMEROOM, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Advisor&gt;</c> element.</summary>
	/// <param name="SifRefObject">A SIF_RefObject</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;SIF_RefId&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setAdvisor</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Advisor</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetAdvisor( string SifRefObject, string Value ) {
		RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ADVISOR);
		AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ADVISOR, new SIF_RefId( SifRefObject, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Advisor&gt;</c> element.
	/// </summary>
	/// <value> A SIF_RefId </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Staff member assigned as an advisor for this enrollment."</para>
	/// <para>To remove the <c>SIF_RefId</c>, set <c>Advisor</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public SIF_RefId Advisor
	{
		get
		{
			return (SIF_RefId)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ADVISOR);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ADVISOR);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_ADVISOR, value );
			}
		}
	}

	/// <summary>Adds a new <c>&lt;StaffAssigned&gt;</c> child element.</summary>
	/// <param name="val">A StaffAssigned object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Staff assigned to the student for this enrollment"</para>
	/// <para>Version: 1.5r1</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void AddStaffAssigned( StaffAssigned val ) { 
		AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_STAFFASSIGNED, val );
	}

	///<summary>Adds the value of the <c>&lt;StaffAssigned&gt;</c> element.</summary>
	/// <param name="Type">The type of assignment: Advisor or Counselor</param>
	/// <param name="StaffPersonalRefId">Reference to the StaffPersonal object associated with this enrollment</param>
	///<remarks>
	/// <para>This form of <c>setStaffAssigned</c> is provided as a convenience method
	/// that is functionally equivalent to the method <c>AddStaffAssigned</c></para>
	/// <para>Version: 1.5r1</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void AddStaffAssigned( string Type, string StaffPersonalRefId ) {
		AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_STAFFASSIGNED, new StaffAssigned( Type, StaffPersonalRefId ) );
	}

	/// <summary>
	/// Removes a <see cref="StaffAssigned"/> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	/// </summary>
	/// <param name="Type">Identifies the StaffAssigned object to remove by its Type value</param>
	/// <param name="StaffPersonalRefId">Identifies the StaffAssigned object to remove by its StaffPersonalRefId value</param>
	/// <remarks>
	/// <para>Version: 1.5r1</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void RemoveStaffAssigned( string Type, string StaffPersonalRefId ) { 
		RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_STAFFASSIGNED, new String[] { Type.ToString(),StaffPersonalRefId.ToString() } );
	}

	/// <summary>
	/// Gets a <see cref="StaffAssigned"/> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	/// </summary>
	/// <param name="Type">Identifies the StaffAssigned object to return by its "Type" attribute value</param>
	/// <param name="StaffPersonalRefId">Identifies the StaffAssigned object to return by its "StaffPersonalRefId" attribute value</param>
	/// <returns>A StaffAssigned object</returns>
	/// <remarks>
	/// <para>Version: 1.5r1</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public StaffAssigned GetStaffAssigned( string Type, string StaffPersonalRefId ) { 
		return (StaffAssigned)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_STAFFASSIGNED, new string[] { Type.ToString(),StaffPersonalRefId.ToString() } );
	}

	/// <summary>
	/// Gets all StaffAssigned object instances. More than once instance can be defined for this object because it is a repeatable field element.
	/// </summary>
	/// <returns>An array of StaffAssigned objects</returns>
	/// <remarks>
	/// <para>Version: 1.5r1</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public StaffAssigned[] GetStaffAssigneds()
	{
		return GetChildren<StaffAssigned>().ToArray();
	}

	/// <summary>
	/// Sets all StaffAssigned object instances. All existing 
	/// <c>StaffAssigned</c> instances 
	/// are removed and replaced with this list. Calling this method with the 
	/// parameter value set to null removes all <c>StaffAssigneds</c>.
	/// </summary>
	/// <remarks>
	/// <para>Version: 1.5r1</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetStaffAssigneds( StaffAssigned[] items)
	{
		SetChildren( StudentDTD.STUDENTSCHOOLENROLLMENT_STAFFASSIGNED, items );
	}

	///<summary>Sets the value of the <c>&lt;Counselor&gt;</c> element.</summary>
	/// <param name="SifRefObject">A SIF_RefObject</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;SIF_RefId&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setCounselor</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Counselor</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetCounselor( string SifRefObject, string Value ) {
		RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_COUNSELOR);
		AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_COUNSELOR, new SIF_RefId( SifRefObject, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Counselor&gt;</c> element.
	/// </summary>
	/// <value> A SIF_RefId </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Staff member assigned as a counselor for this enrollment."</para>
	/// <para>To remove the <c>SIF_RefId</c>, set <c>Counselor</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public SIF_RefId Counselor
	{
		get
		{
			return (SIF_RefId)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_COUNSELOR);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_COUNSELOR);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_COUNSELOR, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ExitDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>ExitDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The last School calendar day (membership day) the student was enrolled in the school (inclusive). If the student has existed the school, ExitDate must have a value."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public DateTime? ExitDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITDATE ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITDATE, new SifDate( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;ExitStatus&gt;</c> element.</summary>
	/// <param name="Code">Code indicating the exit status for this affiliation.</param>
	///<remarks>
	/// <para>This form of <c>setExitStatus</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ExitStatus</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetExitStatus( ExitStatusCode Code ) {
		RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITSTATUS);
		AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITSTATUS, new ExitStatus( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ExitStatus&gt;</c> element.
	/// </summary>
	/// <value> An ExitStatus </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Indicates whether this exit from the school is considered to be temporary or permanent"</para>
	/// <para>To remove the <c>ExitStatus</c>, set <c>ExitStatus</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public ExitStatus ExitStatus
	{
		get
		{
			return (ExitStatus)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITSTATUS);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITSTATUS);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITSTATUS, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Calendar&gt;</c> element.</summary>
	/// <param name="SifRefObject">A SIF_RefObject</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;SIF_RefId&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setCalendar</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Calendar</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public void SetCalendar( string SifRefObject, string Value ) {
		RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_CALENDAR);
		AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_CALENDAR, new SIF_RefId( SifRefObject, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Calendar&gt;</c> element.
	/// </summary>
	/// <value> A SIF_RefId </value>
	/// <remarks>
	/// <para>To remove the <c>SIF_RefId</c>, set <c>Calendar</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public SIF_RefId Calendar
	{
		get
		{
			return (SIF_RefId)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_CALENDAR);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_CALENDAR);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_CALENDAR, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;ExitType&gt;</c> element.</summary>
	/// <param name="Code">Code indicating the type of exit for this enrollment.</param>
	///<remarks>
	/// <para>This form of <c>setExitType</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ExitType</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetExitType( ExitTypeCode Code ) {
		RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITTYPE);
		AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITTYPE, new ExitType( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ExitType&gt;</c> element.
	/// </summary>
	/// <value> An ExitType </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Code indicating the type of exit for this enrollment (deprecated)"</para>
	/// <para>To remove the <c>ExitType</c>, set <c>ExitType</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public ExitType ExitType
	{
		get
		{
			return (ExitType)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITTYPE);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITTYPE);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_EXITTYPE, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;FTE&gt;</c> element.
	/// </summary>
	/// <value> The <c>FTE</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Full-time equivalent numeric value of the student's course load during this enrollment, expressed in decimal form, where 1.00 represents a full-time enrollment."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public decimal? FTE
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_FTE ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_FTE, new SifDecimal( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;FTPTStatus&gt;</c> element.
	/// </summary>
	/// <value> The <c>FTPTStatus</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "An indication of whether the student is enrolled full time or part time."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public string FTPTStatus
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_FTPTSTATUS );
		}
		set
		{
			SetField( StudentDTD.STUDENTSCHOOLENROLLMENT_FTPTSTATUS, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;FTPTStatus&gt;</c> element.
	/// </summary>
	/// <param name="val">A FTPTStatus object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "An indication of whether the student is enrolled full time or part time."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetFTPTStatus( FTPTStatus val )
	{
		SetField( StudentDTD.STUDENTSCHOOLENROLLMENT_FTPTSTATUS, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;RecordClosureReason&gt;</c> element.
	/// </summary>
	/// <value> The <c>RecordClosureReason</c> element of this object.</value>
	/// <remarks>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public string RecordClosureReason
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_RECORDCLOSUREREASON ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_RECORDCLOSUREREASON, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ResidencyStatus&gt;</c> element.
	/// </summary>
	/// <value> A ResidencyStatus </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Location of an individual's legal residence relative to (within or outside) the boundaries of the school for this enrollment. Source: 0598 (Public School Residence Status) [NCESHandbooks]"</para>
	/// <para>To remove the <c>ResidencyStatus</c>, set <c>ResidencyStatus</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public ResidencyStatus ResidencyStatus
	{
		get
		{
			return (ResidencyStatus)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_RESIDENCYSTATUS);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_RESIDENCYSTATUS);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_RESIDENCYSTATUS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PromotionInfo&gt;</c> element.
	/// </summary>
	/// <value> A PromotionInfo </value>
	/// <remarks>
	/// <para>To remove the <c>PromotionInfo</c>, set <c>PromotionInfo</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.3</para>
	/// </remarks>
	public PromotionInfo PromotionInfo
	{
		get
		{
			return (PromotionInfo)GetChild( StudentDTD.STUDENTSCHOOLENROLLMENT_PROMOTIONINFO);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTSCHOOLENROLLMENT_PROMOTIONINFO);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTSCHOOLENROLLMENT_PROMOTIONINFO, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;NonResidentAttendReason&gt;</c> element.
	/// </summary>
	/// <value> The <c>NonResidentAttendReason</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "
	///         If the school represented by this enrollment is outside of the student's usual attendance area
	///         (as indicated in the ResidencyStatus element), this element indicates the reason that the student attends this school.
	///       "</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string NonResidentAttendReason
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTSCHOOLENROLLMENT_NONRESIDENTATTENDREASON );
		}
		set
		{
			SetField( StudentDTD.STUDENTSCHOOLENROLLMENT_NONRESIDENTATTENDREASON, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;NonResidentAttendReason&gt;</c> element.
	/// </summary>
	/// <param name="val">A NonResidentAttendRationale object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "
	///         If the school represented by this enrollment is outside of the student's usual attendance area
	///         (as indicated in the ResidencyStatus element), this element indicates the reason that the student attends this school.
	///       "</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetNonResidentAttendReason( NonResidentAttendRationale val )
	{
		SetField( StudentDTD.STUDENTSCHOOLENROLLMENT_NONRESIDENTATTENDREASON, val );
	}

		#region EXTRA METHODS

// BEGIN EXTRA METHODS (C:/GitHub/rafidzal/OpenADK-java/adk-generator/../adk-generator/datadef/us/sif20/StudentSchoolEnrollment.txt.cs)


    /// <summary>
    /// Computes the "TimeFrame" element based on the given dates using the guidelines 
    /// published in the SIF Specification. In order for this calculation to be accurate,
    /// the EntryDate and ExitDate, if applicable need to be set on this object before calling
    /// this method.
    /// </summary>
    /// <param name="compareDate">The timestamp to base the calculation on. 
    /// For SIF_Requests, this must be the date of the SIF_Request, 
    /// and should be the value returned from <see cref="SifMessageInfo#TimeStamp"/> 
    /// For SIF_Events, this must be the timestamp of when the event is 
    /// going to be published, and can be the current time.</param>
    /// <returns>The TimeFrame value that was computed and set as the TimeFrame
    /// of this StudentSchoolEnrollment object. If the TimeFrame cannot be computed
    /// because there is no EntryDate set, null will be returned.</returns>
    public TimeFrame computeTimeFrame( DateTime compareDate )
	{
		DateTime? exitDate = ExitDate;
		DateTime? entryDate = EntryDate;
		
		TimeFrame tf = null;
		if( exitDate.HasValue ) {
			if( compareDate > exitDate.Value ) {
				tf = OpenADK.Library.us.Student.TimeFrame.HISTORICAL;
			}
		}
		if( (tf == null) && entryDate.HasValue ) {
			if ( compareDate < (entryDate.Value) ) {
		    	 tf = OpenADK.Library.us.Student.TimeFrame.FUTURE;
		    } else {
		    	 tf = OpenADK.Library.us.Student.TimeFrame.CURRENT;
		    }
		}
		
		this.SetTimeFrame( tf );
		return tf;
		
	}

// END EXTRA METHODS

		#endregion // EXTRA METHODS
}}
