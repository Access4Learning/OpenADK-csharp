// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Student{

/// <summary>Enrollment-related information for the school that is responsible for reporting the student's membership/child accounting information.  This is most likely the primary enrollment site for the student.</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 1.5r1</para>
/// </remarks>
[Serializable]
public class HomeEnrollment : SifElement
{
	/// <summary>
	/// Creates an instance of an HomeEnrollment
	/// </summary>
	public HomeEnrollment() : base ( StudentDTD.HOMEENROLLMENT ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="status">Enrollment status as of the SnapDate.</param>
	///<param name="gradeLevel">Grade or academic level of student.</param>
	///
	public HomeEnrollment( HomeEnrollmentStatus status, GradeLevel gradeLevel ) : base( StudentDTD.HOMEENROLLMENT )
	{
		this.SetStatus( status );
		this.GradeLevel = gradeLevel;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected HomeEnrollment( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public  IElementDef[] KeyFields {
		get { return new IElementDef[] { StudentDTD.HOMEENROLLMENT_STATUS, StudentDTD.HOMEENROLLMENT_GRADELEVEL }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StudentSchoolEnrollmentRefId&gt;</c> element.
	/// </summary>
	/// <value> The <c>StudentSchoolEnrollmentRefId</c> element of this object.</value>
	/// <remarks>
	/// <para>This element is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering elements of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;StudentSchoolEnrollmentRefId&gt;</description></item>
	/// </list>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string StudentSchoolEnrollmentRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.HOMEENROLLMENT_STUDENTSCHOOLENROLLMENTREFID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.HOMEENROLLMENT_STUDENTSCHOOLENROLLMENTREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SchoolName&gt;</c> element.
	/// </summary>
	/// <value> The <c>SchoolName</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Name of the school."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string SchoolName
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.HOMEENROLLMENT_SCHOOLNAME ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.HOMEENROLLMENT_SCHOOLNAME, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SchoolInfoRefId&gt;</c> element.
	/// </summary>
	/// <value> The <c>SchoolInfoRefId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Provide both the HomeEnrollment/SchoolId and HomeEnrollment/LocalId elements if possible. If not, one or the other must be provided."</para>
	/// <para>This element is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering elements of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;SchoolInfoRefId&gt;</description></item>
	/// </list>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string SchoolInfoRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.HOMEENROLLMENT_SCHOOLINFOREFID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.HOMEENROLLMENT_SCHOOLINFOREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;LocalId&gt;</c> element.
	/// </summary>
	/// <value> The <c>LocalId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "
	///         The locally-defined identifier for this school.
	///         Provide both the HomeEnrollment/LocalId and HomeEnrollment/SchoolId elements if possible.
	///         If not, one or the other must be provided.
	///       "</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string LocalId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.HOMEENROLLMENT_LOCALID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.HOMEENROLLMENT_LOCALID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StateProvinceId&gt;</c> element.
	/// </summary>
	/// <value> The <c>StateProvinceId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The state or province defined identifier for this school."</para>
	/// <para>This element is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering elements of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;StateProvinceId&gt;</description></item>
	/// </list>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string StateProvinceId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.HOMEENROLLMENT_STATEPROVINCEID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.HOMEENROLLMENT_STATEPROVINCEID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Status&gt;</c> element.
	/// </summary>
	/// <value> The <c>Status</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Enrollment status as of the SnapDate."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string Status
	{
		get
		{ 
			return GetFieldValue( StudentDTD.HOMEENROLLMENT_STATUS );
		}
		set
		{
			SetField( StudentDTD.HOMEENROLLMENT_STATUS, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;Status&gt;</c> element.
	/// </summary>
	/// <param name="val">A HomeEnrollmentStatus object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Enrollment status as of the SnapDate."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetStatus( HomeEnrollmentStatus val )
	{
		SetField( StudentDTD.HOMEENROLLMENT_STATUS, val );
	}

	///<summary>Sets the value of the <c>&lt;GradeLevel&gt;</c> element.</summary>
	/// <param name="Code">Code representing the grade level.</param>
	///<remarks>
	/// <para>This form of <c>setGradeLevel</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>GradeLevel</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetGradeLevel( GradeLevelCode Code ) {
		RemoveChild( StudentDTD.HOMEENROLLMENT_GRADELEVEL);
		AddChild( StudentDTD.HOMEENROLLMENT_GRADELEVEL, new GradeLevel( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;GradeLevel&gt;</c> element.
	/// </summary>
	/// <value> A GradeLevel </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Grade or academic level of student."</para>
	/// <para>To remove the <c>GradeLevel</c>, set <c>GradeLevel</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public GradeLevel GradeLevel
	{
		get
		{
			return (GradeLevel)GetChild( StudentDTD.HOMEENROLLMENT_GRADELEVEL);
		}
		set
		{
			RemoveChild( StudentDTD.HOMEENROLLMENT_GRADELEVEL);
			if( value != null)
			{
				AddChild( StudentDTD.HOMEENROLLMENT_GRADELEVEL, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;Homeroom&gt;</c> element.</summary>
	/// <param name="SifRefObject">The name of the object referenced.</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;Homeroom&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setHomeroom</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Homeroom</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetHomeroom( string SifRefObject, string Value ) {
		RemoveChild( StudentDTD.HOMEENROLLMENT_HOMEROOM);
		AddChild( StudentDTD.HOMEENROLLMENT_HOMEROOM, new Homeroom( SifRefObject, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Homeroom&gt;</c> element.
	/// </summary>
	/// <value> An Homeroom </value>
	/// <remarks>
	/// <para>This null is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering nulls of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;Homeroom&gt;</description></item>
	/// </list>
	/// <para>To remove the <c>Homeroom</c>, set <c>Homeroom</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public Homeroom Homeroom
	{
		get
		{
			return (Homeroom)GetChild( StudentDTD.HOMEENROLLMENT_HOMEROOM);
		}
		set
		{
			RemoveChild( StudentDTD.HOMEENROLLMENT_HOMEROOM);
			if( value != null)
			{
				AddChild( StudentDTD.HOMEENROLLMENT_HOMEROOM, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;HomeroomNumber&gt;</c> element.
	/// </summary>
	/// <value> The <c>HomeroomNumber</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The locally-defined identifier for this room."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string HomeroomNumber
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.HOMEENROLLMENT_HOMEROOMNUMBER ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.HOMEENROLLMENT_HOMEROOMNUMBER, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;FullYearEnrollment&gt;</c> element.
	/// </summary>
	/// <value> The <c>FullYearEnrollment</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "An indication as to whether or not the student was enrolled for the whole school year. If the SchoolYear is in progress as of the SnapDate, use the value "Unknown"."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string FullYearEnrollment
	{
		get
		{ 
			return GetFieldValue( StudentDTD.HOMEENROLLMENT_FULLYEARENROLLMENT );
		}
		set
		{
			SetField( StudentDTD.HOMEENROLLMENT_FULLYEARENROLLMENT, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;FullYearEnrollment&gt;</c> element.
	/// </summary>
	/// <param name="val">A YesNoUnknown object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "An indication as to whether or not the student was enrolled for the whole school year. If the SchoolYear is in progress as of the SnapDate, use the value "Unknown"."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetFullYearEnrollment( YesNoUnknown val )
	{
		SetField( StudentDTD.HOMEENROLLMENT_FULLYEARENROLLMENT, val );
	}

}}
