// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Student{

/// <summary>This object provides a summary of a student's daily attendance and membership information for a given school during the time period between the StartDate and EndDate, inclusive. As such, there may be multiple instances of this object for a student in a school over the course of a school year or reporting period.</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.0</para>
/// </remarks>
[Serializable]
public class StudentAttendanceSummary : SifDataObject
{
	/// <summary>
	/// Creates an instance of a StudentAttendanceSummary
	/// </summary>
	public StudentAttendanceSummary() : base( Adk.SifVersion, StudentDTD.STUDENTATTENDANCESUMMARY ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="studentPersonalRefId">The ID (GUID) of the student for whom this attendance information is being reported.</param>
	///<param name="schoolInfoRefId">The ID (GUID) of the school for which this attendance information is being reported.</param>
	///<param name="schoolYear">School year for which the information is applicable.</param>
	///<param name="startDate">The starting date on which the information in this object instance is applicable.</param>
	///<param name="startDay">Number of the first school day to which this object instance applies.</param>
	///<param name="endDate">The ending date on which the information in this object instance is applicable.</param>
	///<param name="endDay">Number of the last school day to which this object instance applies.</param>
	///<param name="resident">An indication as to whether or not the student's legal residence was within the boundaries of the school during the time between the StartDate and EndDate, inclusive.
	/// 
	/// Note: No SIF_Query SIF_Condition support is required for this element.</param>
	///<param name="daysAttended">The number of days the student attended school when school was in session between the StartDate and EndDate, inclusive.
	/// 
	/// Note: No SIF_Query SIF_Condition support is required for this element.</param>
	///<param name="excusedAbsences">The number of days the student was absent from school with a valid excuse when school was in session between the StartDate and EndDate, inclusive.
	/// 
	/// Note: No SIF_Query SIF_Condition support is required for this element.</param>
	///<param name="unexcusedAbsences">The number of days the student was absent from school without a valid excuse when school was in session between the StartDate and EndDate, inclusive.
	/// 
	/// Note: No SIF_Query SIF_Condition support is required for this element.</param>
	///<param name="daysInMembership">The number of days the student was present plus the number of days the student was absent when school was in session during the period between the StartDate and EndDate, inclusive.
	/// 
	/// Note: No SIF_Query SIF_Condition support is required for this element.</param>
	///
	public StudentAttendanceSummary( string studentPersonalRefId, string schoolInfoRefId, int? schoolYear, DateTime? startDate, int? startDay, DateTime? endDate, int? endDay, YesNoUnknown resident, decimal? daysAttended, decimal? excusedAbsences, decimal? unexcusedAbsences, decimal? daysInMembership ) : base( Adk.SifVersion, StudentDTD.STUDENTATTENDANCESUMMARY )
	{
		this.StudentPersonalRefId = studentPersonalRefId;
		this.SchoolInfoRefId = schoolInfoRefId;
		this.SchoolYear = schoolYear;
		this.StartDate = startDate;
		this.StartDay = startDay;
		this.EndDate = endDate;
		this.EndDay = endDay;
		this.SetResident( resident );
		this.DaysAttended = daysAttended;
		this.ExcusedAbsences = excusedAbsences;
		this.UnexcusedAbsences = unexcusedAbsences;
		this.DaysInMembership = daysInMembership;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected StudentAttendanceSummary( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { StudentDTD.STUDENTATTENDANCESUMMARY_STUDENTPERSONALREFID, StudentDTD.STUDENTATTENDANCESUMMARY_SCHOOLINFOREFID, StudentDTD.STUDENTATTENDANCESUMMARY_SCHOOLYEAR }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>StudentPersonalRefId</c> attribute.
	/// </summary>
	/// <value> The <c>StudentPersonalRefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The ID (GUID) of the student for whom this attendance information is being reported."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string StudentPersonalRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_STUDENTPERSONALREFID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_STUDENTPERSONALREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>SchoolInfoRefId</c> attribute.
	/// </summary>
	/// <value> The <c>SchoolInfoRefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The ID (GUID) of the school for which this attendance information is being reported."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string SchoolInfoRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_SCHOOLINFOREFID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_SCHOOLINFOREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>SchoolYear</c> attribute.
	/// </summary>
	/// <value> The <c>SchoolYear</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "School year for which the information is applicable."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public int? SchoolYear
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_SCHOOLYEAR ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_SCHOOLYEAR, new SifInt( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StartDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>StartDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The starting date on which the information in this object instance is applicable."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public DateTime? StartDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_STARTDATE ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_STARTDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StartDay&gt;</c> element.
	/// </summary>
	/// <value> The <c>StartDay</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Number of the first school day to which this object instance applies."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public int? StartDay
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_STARTDAY ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_STARTDAY, new SifInt( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EndDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>EndDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The ending date on which the information in this object instance is applicable."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public DateTime? EndDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_ENDDATE ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_ENDDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EndDay&gt;</c> element.
	/// </summary>
	/// <value> The <c>EndDay</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Number of the last school day to which this object instance applies."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public int? EndDay
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_ENDDAY ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_ENDDAY, new SifInt( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Resident&gt;</c> element.
	/// </summary>
	/// <value> The <c>Resident</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "An indication as to whether or not the student's legal residence was within the boundaries of the school during the time between the StartDate and EndDate, inclusive.
	/// 
	/// Note: No SIF_Query SIF_Condition support is required for this element."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Resident
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_RESIDENT );
		}
		set
		{
			SetField( StudentDTD.STUDENTATTENDANCESUMMARY_RESIDENT, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;Resident&gt;</c> element.
	/// </summary>
	/// <param name="val">A YesNoUnknown object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "An indication as to whether or not the student's legal residence was within the boundaries of the school during the time between the StartDate and EndDate, inclusive.
	/// 
	/// Note: No SIF_Query SIF_Condition support is required for this element."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetResident( YesNoUnknown val )
	{
		SetField( StudentDTD.STUDENTATTENDANCESUMMARY_RESIDENT, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;FTE&gt;</c> element.
	/// </summary>
	/// <value> The <c>FTE</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Full time equivalent numeric value of the student's course load during the time between the StartDate and EndDate, inclusive. Expressed in decimal form, where 1.00 represents a full time enrollment.
	/// 
	/// Deprecated in favor of using the StudentSchoolEnrollmentRefId element below."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public decimal? FTE
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_FTE ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_FTE, new SifDecimal( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;DaysAttended&gt;</c> element.
	/// </summary>
	/// <value> The <c>DaysAttended</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The number of days the student attended school when school was in session between the StartDate and EndDate, inclusive.
	/// 
	/// Note: No SIF_Query SIF_Condition support is required for this element."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public decimal? DaysAttended
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_DAYSATTENDED ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_DAYSATTENDED, new SifDecimal( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ExcusedAbsences&gt;</c> element.
	/// </summary>
	/// <value> The <c>ExcusedAbsences</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The number of days the student was absent from school with a valid excuse when school was in session between the StartDate and EndDate, inclusive.
	/// 
	/// Note: No SIF_Query SIF_Condition support is required for this element."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public decimal? ExcusedAbsences
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_EXCUSEDABSENCES ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_EXCUSEDABSENCES, new SifDecimal( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;UnexcusedAbsences&gt;</c> element.
	/// </summary>
	/// <value> The <c>UnexcusedAbsences</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The number of days the student was absent from school without a valid excuse when school was in session between the StartDate and EndDate, inclusive.
	/// 
	/// Note: No SIF_Query SIF_Condition support is required for this element."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public decimal? UnexcusedAbsences
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_UNEXCUSEDABSENCES ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_UNEXCUSEDABSENCES, new SifDecimal( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;DaysTardy&gt;</c> element.
	/// </summary>
	/// <value> The <c>DaysTardy</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The number of days the student was tardy when school was in session between the StartDate and EndDate, inclusive."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public decimal? DaysTardy
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_DAYSTARDY ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_DAYSTARDY, new SifDecimal( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;DaysInMembership&gt;</c> element.
	/// </summary>
	/// <value> The <c>DaysInMembership</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The number of days the student was present plus the number of days the student was absent when school was in session during the period between the StartDate and EndDate, inclusive.
	/// 
	/// Note: No SIF_Query SIF_Condition support is required for this element."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public decimal? DaysInMembership
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_DAYSINMEMBERSHIP ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_DAYSINMEMBERSHIP, new SifDecimal( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StudentSchoolEnrollmentRefId&gt;</c> element.
	/// </summary>
	/// <value> The <c>StudentSchoolEnrollmentRefId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "RefId (GUID) of the StudentSchoolEnrollment object instance that corresponds to this object instance."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public string StudentSchoolEnrollmentRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_STUDENTSCHOOLENROLLMENTREFID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTATTENDANCESUMMARY_STUDENTSCHOOLENROLLMENTREFID, new SifString( value ), value );
		}
	}

}}
