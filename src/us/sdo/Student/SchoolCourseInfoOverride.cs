// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Student{

/// <summary>Optional overrides of the course information for a section</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 1.1</para>
/// </remarks>
[Serializable]
public class SchoolCourseInfoOverride : SifKeyedElement
{
	/// <summary>
	/// Creates an instance of a SchoolCourseInfoOverride
	/// </summary>
	public SchoolCourseInfoOverride() : base ( StudentDTD.SCHOOLCOURSEINFOOVERRIDE ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="overrideValue">Designates whether or not SchoolCourseInfo information has been overridden with different values for this section</param>
	///
	public SchoolCourseInfoOverride( YesNo overrideValue ) : base( StudentDTD.SCHOOLCOURSEINFOOVERRIDE )
	{
		this.SetOverride( overrideValue );
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected SchoolCourseInfoOverride( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { StudentDTD.SCHOOLCOURSEINFOOVERRIDE_OVERRIDE }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>Override</c> attribute.
	/// </summary>
	/// <value> The <c>Override</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "Designates whether or not SchoolCourseInfo information has been overridden with different values for this section"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public string Override
	{
		get
		{ 
			return GetFieldValue( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_OVERRIDE );
		}
		set
		{
			SetField( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_OVERRIDE, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>Override</c> attribute.
	/// </summary>
	/// <param name="val">A YesNo object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "Designates whether or not SchoolCourseInfo information has been overridden with different values for this section"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetOverride( YesNo val )
	{
		SetField( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_OVERRIDE, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;CourseCode&gt;</c> element.
	/// </summary>
	/// <value> The <c>CourseCode</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Override of the school-defined course code for this section."</para>
	/// <para>This element is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering elements of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;CourseCode&gt;</description></item>
	/// </list>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public string CourseCode
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_COURSECODE ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_COURSECODE, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StateCourseCode&gt;</c> element.
	/// </summary>
	/// <value> The <c>StateCourseCode</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Override of the state-defined course code for this section."</para>
	/// <para>This element is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering elements of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;StateCourseCode&gt;</description></item>
	/// </list>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public string StateCourseCode
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_STATECOURSECODE ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_STATECOURSECODE, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;DistrictCourseCode&gt;</c> element.
	/// </summary>
	/// <value> The <c>DistrictCourseCode</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Override of the district course code for this section."</para>
	/// <para>This element is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering elements of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;DistrictCourseCode&gt;</description></item>
	/// </list>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public string DistrictCourseCode
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_DISTRICTCOURSECODE ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_DISTRICTCOURSECODE, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;SubjectArea&gt;</c> element.</summary>
	/// <param name="Code">The subject area code (i.e. the first two digits of the course classification code)</param>
	///<remarks>
	/// <para>This form of <c>setSubjectArea</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>SubjectArea</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetSubjectArea( string Code ) {
		RemoveChild( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_SUBJECTAREA);
		AddChild( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_SUBJECTAREA, new SubjectArea( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SubjectArea&gt;</c> element.
	/// </summary>
	/// <value> A SubjectArea </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Override of the subject matter area for this section."</para>
	/// <para>This null is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering nulls of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;SubjectArea&gt;</description></item>
	/// </list>
	/// <para>To remove the <c>SubjectArea</c>, set <c>SubjectArea</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public SubjectArea SubjectArea
	{
		get
		{
			return (SubjectArea)GetChild( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_SUBJECTAREA);
		}
		set
		{
			RemoveChild( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_SUBJECTAREA);
			if( value != null)
			{
				AddChild( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_SUBJECTAREA, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;CourseTitle&gt;</c> element.
	/// </summary>
	/// <value> The <c>CourseTitle</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Override of the course title for this section."</para>
	/// <para>This element is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering elements of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;CourseTitle&gt;</description></item>
	/// </list>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public string CourseTitle
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_COURSETITLE ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_COURSETITLE, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;InstructionalLevel&gt;</c> element.
	/// </summary>
	/// <value> An InstructionalLevel </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Override of the instructional level for this section."</para>
	/// <para>This null is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering nulls of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;InstructionalLevel&gt;</description></item>
	/// </list>
	/// <para>To remove the <c>InstructionalLevel</c>, set <c>InstructionalLevel</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public InstructionalLevel InstructionalLevel
	{
		get
		{
			return (InstructionalLevel)GetChild( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_INSTRUCTIONALLEVEL);
		}
		set
		{
			RemoveChild( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_INSTRUCTIONALLEVEL);
			if( value != null)
			{
				AddChild( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_INSTRUCTIONALLEVEL, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;CourseCredits&gt;</c> element.</summary>
	/// <param name="Type">The type of credit offered</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;CourseCredits&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setCourseCredits</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>CourseCredits</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetCourseCredits( CreditType Type, decimal? Value ) {
		RemoveChild( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_COURSECREDITS);
		AddChild( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_COURSECREDITS, new CourseCredits( Type, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;CourseCredits&gt;</c> element.
	/// </summary>
	/// <value> A CourseCredits </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Override of the course credits for this section."</para>
	/// <para>This null is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering nulls of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;CourseCredits&gt;</description></item>
	/// </list>
	/// <para>To remove the <c>CourseCredits</c>, set <c>CourseCredits</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public CourseCredits CourseCredits
	{
		get
		{
			return (CourseCredits)GetChild( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_COURSECREDITS);
		}
		set
		{
			RemoveChild( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_COURSECREDITS);
			if( value != null)
			{
				AddChild( StudentDTD.SCHOOLCOURSEINFOOVERRIDE_COURSECREDITS, value );
			}
		}
	}

		///<summary>Returns the value of the <c>Override</c> attribute</summary>
		public override string ToString() {
			return this.Override;
	}

}}
