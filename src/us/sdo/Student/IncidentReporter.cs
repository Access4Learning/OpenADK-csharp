// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Student{

/// <summary>An IncidentReporter</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 2.0</para>
/// </remarks>
[Serializable]
public class IncidentReporter : SifKeyedElement
{
	/// <summary>
	/// Creates an instance of an IncidentReporter
	/// </summary>
	public IncidentReporter() : base ( StudentDTD.INCIDENTREPORTER ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="type">A Type</param>
	///
	public IncidentReporter( ReporterDescriptionType type ) : base( StudentDTD.INCIDENTREPORTER )
	{
		this.SetType( type );
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected IncidentReporter( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { StudentDTD.INCIDENTREPORTER_TYPE }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>Type</c> attribute.
	/// </summary>
	/// <value> The <c>Type</c> attribute of this object.</value>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Type
	{
		get
		{ 
			return GetFieldValue( StudentDTD.INCIDENTREPORTER_TYPE );
		}
		set
		{
			SetField( StudentDTD.INCIDENTREPORTER_TYPE, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>Type</c> attribute.
	/// </summary>
	/// <param name="val">A ReporterDescriptionType object</param>
	/// <remarks>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetType( ReporterDescriptionType val )
	{
		SetField( StudentDTD.INCIDENTREPORTER_TYPE, val );
	}

	///<summary>Sets the value of the <c>&lt;Name&gt;</c> element.</summary>
	/// <param name="Type">Code that specifies what type of name this is.  If unsure, use 04.</param>
	/// <param name="LastName">The last name.</param>
	/// <param name="FirstName">The first name.</param>
	///<remarks>
	/// <para>This form of <c>setName</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Name</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetName( NameType Type, string LastName, string FirstName ) {
		RemoveChild( StudentDTD.INCIDENTREPORTER_NAME);
		AddChild( StudentDTD.INCIDENTREPORTER_NAME, new Name( Type, LastName, FirstName ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Name&gt;</c> element.
	/// </summary>
	/// <value> A Name </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The name of the individual reporting the incident."</para>
	/// <para>To remove the <c>Name</c>, set <c>Name</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public Name Name
	{
		get
		{
			return (Name)GetChild( StudentDTD.INCIDENTREPORTER_NAME);
		}
		set
		{
			RemoveChild( StudentDTD.INCIDENTREPORTER_NAME);
			if( value != null)
			{
				AddChild( StudentDTD.INCIDENTREPORTER_NAME, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;SIF_RefId&gt;</c> element.</summary>
	/// <param name="SifRefObject">A SIF_RefObject</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;SIF_RefId&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setSIF_RefId</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>SIF_RefId</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetSIF_RefId( string SifRefObject, string Value ) {
		RemoveChild( StudentDTD.INCIDENTREPORTER_SIF_REFID);
		AddChild( StudentDTD.INCIDENTREPORTER_SIF_REFID, new SIF_RefId( SifRefObject, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SIF_RefId&gt;</c> element.
	/// </summary>
	/// <value> A SIF_RefId </value>
	/// <remarks>
	/// <para>To remove the <c>SIF_RefId</c>, set <c>SIF_RefId</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public SIF_RefId SIF_RefId
	{
		get
		{
			return (SIF_RefId)GetChild( StudentDTD.INCIDENTREPORTER_SIF_REFID);
		}
		set
		{
			RemoveChild( StudentDTD.INCIDENTREPORTER_SIF_REFID);
			if( value != null)
			{
				AddChild( StudentDTD.INCIDENTREPORTER_SIF_REFID, value );
			}
		}
	}

}}
