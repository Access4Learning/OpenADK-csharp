// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Student{

/// <summary>A StudentAddress</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 1.1</para>
/// </remarks>
[Serializable]
public class StudentAddress : SifElement
{
	/// <summary>
	/// Creates an instance of a StudentAddress
	/// </summary>
	public StudentAddress() : base ( StudentDTD.STUDENTADDRESS ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="pickupOrDropoff">Specifies if this is a pickup or dropoff address. This property may be needed by a transportation application.</param>
	///<param name="dayOfWeek">This attribute indicates the days of the week for which the pickup or dropoff address is valid. The attribute if relevant only if the value of the PickupOrDropoff attribute is "Pickup," "Dropoff" or "Both."</param>
	///<param name="address">This is the actual address.</param>
	///
	public StudentAddress( string pickupOrDropoff, string dayOfWeek, Address address ) : base( StudentDTD.STUDENTADDRESS )
	{
		this.PickupOrDropoff = pickupOrDropoff;
		this.DayOfWeek = dayOfWeek;
		this.Address = address;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected StudentAddress( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public  IElementDef[] KeyFields {
		get { return new IElementDef[] { StudentDTD.STUDENTADDRESS_PICKUPORDROPOFF, StudentDTD.STUDENTADDRESS_DAYOFWEEK }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>PickupOrDropoff</c> attribute.
	/// </summary>
	/// <value> The <c>PickupOrDropoff</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "Specifies if this is a pickup or dropoff address. This property may be needed by a transportation application."</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public string PickupOrDropoff
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STUDENTADDRESS_PICKUPORDROPOFF ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTADDRESS_PICKUPORDROPOFF, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>DayOfWeek</c> attribute.
	/// </summary>
	/// <value> The <c>DayOfWeek</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "This attribute indicates the days of the week for which the pickup or dropoff address is valid. The attribute if relevant only if the value of the PickupOrDropoff attribute is "Pickup," "Dropoff" or "Both.""</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public string DayOfWeek
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STUDENTADDRESS_DAYOFWEEK ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STUDENTADDRESS_DAYOFWEEK, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;Address&gt;</c> element.</summary>
	/// <param name="Type">Code that defines the location of the address.  Note:  A subset of specific valid values for each instance in a data object may be listed in that object.</param>
	/// <param name="Street">The street part of the address</param>
	/// <param name="City">The city part of the address.</param>
	/// <param name="StateProvince">The state or province code.</param>
	/// <param name="Country">The country code.</param>
	/// <param name="PostalCode">The ZIP/postal code.</param>
	///<remarks>
	/// <para>This form of <c>setAddress</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Address</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public void SetAddress( AddressType Type, Street Street, string City, StatePrCode StateProvince, CountryCode Country, string PostalCode ) {
		RemoveChild( StudentDTD.STUDENTADDRESS_ADDRESS);
		AddChild( StudentDTD.STUDENTADDRESS_ADDRESS, new Address( Type, Street, City, StateProvince, Country, PostalCode ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Address&gt;</c> element.
	/// </summary>
	/// <value> An Address </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "This is the actual address."</para>
	/// <para>To remove the <c>Address</c>, set <c>Address</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.1</para>
	/// </remarks>
	public Address Address
	{
		get
		{
			return (Address)GetChild( StudentDTD.STUDENTADDRESS_ADDRESS);
		}
		set
		{
			RemoveChild( StudentDTD.STUDENTADDRESS_ADDRESS);
			if( value != null)
			{
				AddChild( StudentDTD.STUDENTADDRESS_ADDRESS, value );
			}
		}
	}

}}
