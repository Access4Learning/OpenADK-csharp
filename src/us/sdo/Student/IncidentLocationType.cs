// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using OpenADK.Library;

namespace OpenADK.Library.us.Student
{
	///<summary>
	/// Defines the set of values that can be specified whenever an IncidentLocationType
	/// is used as a parameter to a method or constructor. 
	///</summary>
	/// <remarks>
	/// Alternatively, the static
	///  <see cref="Wrap"/> method can be called to encapsulate any string value in
	///  an IncidentLocationType object.
	/// <para>Author: Generated by adkgen</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	[Serializable]
	public class IncidentLocationType : SifEnum
	{
	/// <summary>Auditorium ("3020")</summary>
	public static readonly IncidentLocationType AUDITORIUM = new IncidentLocationType("3020");

	/// <summary>Restroom ("3017")</summary>
	public static readonly IncidentLocationType RESTROOM = new IncidentLocationType("3017");

	/// <summary>Other school ("3030")</summary>
	public static readonly IncidentLocationType OTHER_SCHOOL = new IncidentLocationType("3030");

	/// <summary>Bus stop ("3027")</summary>
	public static readonly IncidentLocationType BUS_STOP = new IncidentLocationType("3027");

	/// <summary>School bus ("3028")</summary>
	public static readonly IncidentLocationType SCHOOL_BUS = new IncidentLocationType("3028");

	/// <summary>Other outside area ("3025")</summary>
	public static readonly IncidentLocationType OTHER_OUTSIDE = new IncidentLocationType("3025");

	/// <summary>Library/media center ("3018")</summary>
	public static readonly IncidentLocationType LIBRARY = new IncidentLocationType("3018");

	/// <summary>Locker room or gym areas ("3016")</summary>
	public static readonly IncidentLocationType LOCKER_ROOM_GYM = new IncidentLocationType("3016");

	/// <summary>Off campus ("3026")</summary>
	public static readonly IncidentLocationType OFF_CAMPUS = new IncidentLocationType("3026");

	/// <summary>Other inside area ("3021")</summary>
	public static readonly IncidentLocationType OTHER_INSIDE = new IncidentLocationType("3021");

	/// <summary>Athletic field or playground ("3022")</summary>
	public static readonly IncidentLocationType FIELD_PLAYGROUND = new IncidentLocationType("3022");

	/// <summary>Hallway or stairs ("3015")</summary>
	public static readonly IncidentLocationType HALLWAY_STAIRS = new IncidentLocationType("3015");

	/// <summary>Stadium ("3023")</summary>
	public static readonly IncidentLocationType STADIUM = new IncidentLocationType("3023");

	/// <summary>Walking to or from school ("3029")</summary>
	public static readonly IncidentLocationType TO_FROM_SCHOOL = new IncidentLocationType("3029");

	/// <summary>Cafeteria area ("3013")</summary>
	public static readonly IncidentLocationType CAFETERIA = new IncidentLocationType("3013");

	/// <summary>On campus ("3011")</summary>
	public static readonly IncidentLocationType ON_CAMPUS = new IncidentLocationType("3011");

	/// <summary>Other school district facility ("3031")</summary>
	public static readonly IncidentLocationType OTHER_DISTRICT_FACILITY = new IncidentLocationType("3031");

	/// <summary>Classroom ("3014")</summary>
	public static readonly IncidentLocationType CLASSROOM = new IncidentLocationType("3014");

	/// <summary>Parking lot ("3024")</summary>
	public static readonly IncidentLocationType PARKING_LOT = new IncidentLocationType("3024");

	/// <summary>Computer lab ("3019")</summary>
	public static readonly IncidentLocationType COMPUTER_LAB = new IncidentLocationType("3019");

	/// <summary>Administrative offices area ("3012")</summary>
	public static readonly IncidentLocationType ADMIN_OFFICES = new IncidentLocationType("3012");

	/// <summary>Unknown ("9997")</summary>
	public static readonly IncidentLocationType UNKNOWN = new IncidentLocationType("9997");

	///<summary>Wrap an arbitrary string value in an IncidentLocationType object.</summary>
	///<param name="wrappedValue">The element/attribute value.</param>
	///<remarks>This method does not verify
	///that the value is valid according to the SIF Specification</remarks>
	public static IncidentLocationType Wrap( String wrappedValue ) {
		return new IncidentLocationType( wrappedValue );
	}

	private IncidentLocationType( string enumDefValue ) : base( enumDefValue ) {}
	}
}
