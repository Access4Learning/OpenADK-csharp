// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Student{

/// <summary>This object defines information related to a staff member's assignment(s); commonly, this will be a school assignment.  SIF_Events are reported.</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 1.5r1</para>
/// </remarks>
[Serializable]
public class StaffAssignment : SifDataObject
{
	/// <summary>
	/// Creates an instance of a StaffAssignment
	/// </summary>
	public StaffAssignment() : base( Adk.SifVersion, StudentDTD.STAFFASSIGNMENT ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="refId">The GUID that uniquely identifies a particular staff assignment.</param>
	///<param name="schoolInfoRefId">The ID (GUID) that identifies the school where the staff member is assigned.</param>
	///<param name="schoolYear">School year for which the information is applicable, expressed as the four-digit year in which the school year ends (e.g., 2007 for the 2006-07 school year).</param>
	///<param name="staffPersonalRefId">ID (GUID) of this staff member, as represented in the StaffPersonal object. </param>
	///<param name="primaryAssignment">Is this the staff member's primary assignment?  Note: There must be one and only one instance of the object with a Yes value in this element per school year.</param>
	///
	public StaffAssignment( string refId, string schoolInfoRefId, int? schoolYear, string staffPersonalRefId, YesNo primaryAssignment ) : base( Adk.SifVersion, StudentDTD.STAFFASSIGNMENT )
	{
		this.RefId = refId;
		this.SchoolInfoRefId = schoolInfoRefId;
		this.SchoolYear = schoolYear;
		this.StaffPersonalRefId = staffPersonalRefId;
		this.SetPrimaryAssignment( primaryAssignment );
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected StaffAssignment( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { StudentDTD.STAFFASSIGNMENT_REFID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>RefId</c> attribute.
	/// </summary>
	/// <value> The <c>RefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The GUID that uniquely identifies a particular staff assignment."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public override string RefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STAFFASSIGNMENT_REFID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STAFFASSIGNMENT_REFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>SchoolInfoRefId</c> attribute.
	/// </summary>
	/// <value> The <c>SchoolInfoRefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The ID (GUID) that identifies the school where the staff member is assigned."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string SchoolInfoRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STAFFASSIGNMENT_SCHOOLINFOREFID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STAFFASSIGNMENT_SCHOOLINFOREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>SchoolYear</c> attribute.
	/// </summary>
	/// <value> The <c>SchoolYear</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "School year for which the information is applicable, expressed as the four-digit year in which the school year ends (e.g., 2007 for the 2006-07 school year)."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public int? SchoolYear
	{
		get
		{
			return (int?) GetSifSimpleFieldValue( StudentDTD.STAFFASSIGNMENT_SCHOOLYEAR ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STAFFASSIGNMENT_SCHOOLYEAR, new SifInt( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>StaffPersonalRefId</c> attribute.
	/// </summary>
	/// <value> The <c>StaffPersonalRefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "ID (GUID) of this staff member, as represented in the StaffPersonal object. "</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string StaffPersonalRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STAFFASSIGNMENT_STAFFPERSONALREFID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STAFFASSIGNMENT_STAFFPERSONALREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Description&gt;</c> element.
	/// </summary>
	/// <value> The <c>Description</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Short assignment description"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string Description
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STAFFASSIGNMENT_DESCRIPTION ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STAFFASSIGNMENT_DESCRIPTION, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PrimaryAssignment&gt;</c> element.
	/// </summary>
	/// <value> The <c>PrimaryAssignment</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Is this the staff member's primary assignment?  Note: There must be one and only one instance of the object with a Yes value in this element per school year."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string PrimaryAssignment
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STAFFASSIGNMENT_PRIMARYASSIGNMENT );
		}
		set
		{
			SetField( StudentDTD.STAFFASSIGNMENT_PRIMARYASSIGNMENT, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;PrimaryAssignment&gt;</c> element.
	/// </summary>
	/// <param name="val">A YesNo object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Is this the staff member's primary assignment?  Note: There must be one and only one instance of the object with a Yes value in this element per school year."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetPrimaryAssignment( YesNo val )
	{
		SetField( StudentDTD.STAFFASSIGNMENT_PRIMARYASSIGNMENT, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;JobStartDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>JobStartDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "This is the date from which the staff assignment is valid (inclusive)."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public DateTime? JobStartDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( StudentDTD.STAFFASSIGNMENT_JOBSTARTDATE ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STAFFASSIGNMENT_JOBSTARTDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;JobEndDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>JobEndDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "This is the date through which the staff assignment is valid (inclusive)."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public DateTime? JobEndDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( StudentDTD.STAFFASSIGNMENT_JOBENDDATE ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STAFFASSIGNMENT_JOBENDDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;JobFTE&gt;</c> element.
	/// </summary>
	/// <value> The <c>JobFTE</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Full-time job equivalent ratio for this assignment. (Format is x.xx; an employee who is full-time and who is 50% of their time on this assignment would be represented as 0.50)"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public decimal? JobFTE
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( StudentDTD.STAFFASSIGNMENT_JOBFTE ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STAFFASSIGNMENT_JOBFTE, new SifDecimal( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;JobFunction&gt;</c> element.</summary>
	/// <param name="Code">Code representing the type of job function.</param>
	///<remarks>
	/// <para>This form of <c>setJobFunction</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>JobFunction</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetJobFunction( JobFunctionCode Code ) {
		RemoveChild( StudentDTD.STAFFASSIGNMENT_JOBFUNCTION);
		AddChild( StudentDTD.STAFFASSIGNMENT_JOBFUNCTION, new JobFunction( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;JobFunction&gt;</c> element.
	/// </summary>
	/// <value> A JobFunction </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The purpose of the activities as related to students"</para>
	/// <para>To remove the <c>JobFunction</c>, set <c>JobFunction</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public JobFunction JobFunction
	{
		get
		{
			return (JobFunction)GetChild( StudentDTD.STAFFASSIGNMENT_JOBFUNCTION);
		}
		set
		{
			RemoveChild( StudentDTD.STAFFASSIGNMENT_JOBFUNCTION);
			if( value != null)
			{
				AddChild( StudentDTD.STAFFASSIGNMENT_JOBFUNCTION, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;TeachingAssignment&gt;</c> element.</summary>
	/// <param name="Code">Code representing the type of teaching assignment.</param>
	///<remarks>
	/// <para>This form of <c>setTeachingAssignment</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>TeachingAssignment</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetTeachingAssignment( TeachingArea Code ) {
		RemoveChild( StudentDTD.STAFFASSIGNMENT_TEACHINGASSIGNMENT);
		AddChild( StudentDTD.STAFFASSIGNMENT_TEACHINGASSIGNMENT, new TeachingAssignment( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;TeachingAssignment&gt;</c> element.
	/// </summary>
	/// <value> A TeachingAssignment </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The teacher field taught by the individual"</para>
	/// <para>To remove the <c>TeachingAssignment</c>, set <c>TeachingAssignment</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public TeachingAssignment TeachingAssignment
	{
		get
		{
			return (TeachingAssignment)GetChild( StudentDTD.STAFFASSIGNMENT_TEACHINGASSIGNMENT);
		}
		set
		{
			RemoveChild( StudentDTD.STAFFASSIGNMENT_TEACHINGASSIGNMENT);
			if( value != null)
			{
				AddChild( StudentDTD.STAFFASSIGNMENT_TEACHINGASSIGNMENT, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;GradeClassification&gt;</c> element.</summary>
	/// <param name="Code">The type of school grade level classification this is. Source: 0038 (Applicable Grades) [NCES Handbooks]</param>
	///<remarks>
	/// <para>This form of <c>setGradeClassification</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>GradeClassification</c></para>
	/// <para>Version: 1.5r1</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetGradeClassification( GradeClassificationCode Code ) {
		RemoveChild( StudentDTD.STAFFASSIGNMENT_GRADECLASSIFICATION);
		AddChild( StudentDTD.STAFFASSIGNMENT_GRADECLASSIFICATION, new GradeClassification( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;GradeClassification&gt;</c> element.
	/// </summary>
	/// <value> A GradeClassification </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "An indication of the grade level(s) the individual is assigned"</para>
	/// <para>To remove the <c>GradeClassification</c>, set <c>GradeClassification</c> to <c>null</c></para>
	/// <para>Version: 1.5r1</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public GradeClassification GradeClassification
	{
		get
		{
			return (GradeClassification)GetChild( StudentDTD.STAFFASSIGNMENT_GRADECLASSIFICATION);
		}
		set
		{
			RemoveChild( StudentDTD.STAFFASSIGNMENT_GRADECLASSIFICATION);
			if( value != null)
			{
				AddChild( StudentDTD.STAFFASSIGNMENT_GRADECLASSIFICATION, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;GradeLevels&gt;</c> element.
	/// </summary>
	/// <value> A GradeLevels </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "An indication of the grade level(s) the individual is assigned"</para>
	/// <para>To remove the <c>GradeLevels</c>, set <c>GradeLevels</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public GradeLevels GradeLevels
	{
		get
		{
			return (GradeLevels)GetChild( StudentDTD.STAFFASSIGNMENT_GRADELEVELS);
		}
		set
		{
			RemoveChild( StudentDTD.STAFFASSIGNMENT_GRADELEVELS);
			if( value != null)
			{
				AddChild( StudentDTD.STAFFASSIGNMENT_GRADELEVELS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ItinerantTeacher&gt;</c> element.
	/// </summary>
	/// <value> The <c>ItinerantTeacher</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Is this staff itinerant for this assignment?"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string ItinerantTeacher
	{
		get
		{ 
			return GetFieldValue( StudentDTD.STAFFASSIGNMENT_ITINERANTTEACHER );
		}
		set
		{
			SetField( StudentDTD.STAFFASSIGNMENT_ITINERANTTEACHER, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>&lt;ItinerantTeacher&gt;</c> element.
	/// </summary>
	/// <param name="val">A YesNo object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Is this staff itinerant for this assignment?"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetItinerantTeacher( YesNo val )
	{
		SetField( StudentDTD.STAFFASSIGNMENT_ITINERANTTEACHER, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;InstructionalLevel&gt;</c> element.
	/// </summary>
	/// <value> An InstructionalLevel </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "An indication of the general nature of instruction provided throughout a course."</para>
	/// <para>This null is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering nulls of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;InstructionalLevel&gt;</description></item>
	/// </list>
	/// <para>To remove the <c>InstructionalLevel</c>, set <c>InstructionalLevel</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public InstructionalLevel InstructionalLevel
	{
		get
		{
			return (InstructionalLevel)GetChild( StudentDTD.STAFFASSIGNMENT_INSTRUCTIONALLEVEL);
		}
		set
		{
			RemoveChild( StudentDTD.STAFFASSIGNMENT_INSTRUCTIONALLEVEL);
			if( value != null)
			{
				AddChild( StudentDTD.STAFFASSIGNMENT_INSTRUCTIONALLEVEL, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EmployeePersonalRefId&gt;</c> element.
	/// </summary>
	/// <value> The <c>EmployeePersonalRefId</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "A GUID referencing an EmployeePersonal object to be able to establish a link between HR employee objects and SIS staff objects."</para>
	/// <para>This element is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering elements of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;EmployeePersonalRefId&gt;</description></item>
	/// </list>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string EmployeePersonalRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( StudentDTD.STAFFASSIGNMENT_EMPLOYEEPERSONALREFID ) ;
		}
		set
		{
			SetFieldValue( StudentDTD.STAFFASSIGNMENT_EMPLOYEEPERSONALREFID, new SifString( value ), value );
		}
	}

}}
