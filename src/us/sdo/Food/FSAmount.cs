// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Food{

/// <summary>Amount</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 1.5r1</para>
/// </remarks>
[Serializable]
public class FSAmount : SifKeyedElement
{
	/// <summary>
	/// Creates an instance of a FSAmount
	/// </summary>
	public FSAmount() : base ( FoodDTD.FSAMOUNT ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="type">
	///         Type of amount. The currency unit is implied; namely USD. Note that when this common element is used not all of the following values apply. There are notes to indicate values that are applicable.
	///       </param>
	///<param name="credits">
	///         Number of credits. This attribute does not apply to Cash or Value
	///         and hence has a value 0. It only applies to types BreakfastCredit and LunchCredit.
	///       </param>
	///<param name="value">Gets or sets the content value of the &amp;lt;FSAmount&amp;gt; element</param>
	///
	public FSAmount( FSAmountType type, decimal? credits, decimal? value ) : base( FoodDTD.FSAMOUNT )
	{
		this.SetType( type );
		this.Credits = credits;
		this.Value = value;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected FSAmount( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { FoodDTD.FSAMOUNT }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;FSAmount&gt;</c> element.
	/// </summary>
	/// <value> The <c>Value</c> of the content of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this of the content as: "Gets or sets the content value of the &amp;lt;FSAmount&amp;gt; element"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public decimal? Value
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( FoodDTD.FSAMOUNT ) ;
		}
		set
		{
			SetFieldValue( FoodDTD.FSAMOUNT, new SifDecimal( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>Type</c> attribute.
	/// </summary>
	/// <value> The <c>Type</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "
	///         Type of amount. The currency unit is implied; namely USD. Note that when this common element is used not all of the following values apply. There are notes to indicate values that are applicable.
	///       "</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string Type
	{
		get
		{ 
			return GetFieldValue( FoodDTD.FSAMOUNT_TYPE );
		}
		set
		{
			SetField( FoodDTD.FSAMOUNT_TYPE, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>Type</c> attribute.
	/// </summary>
	/// <param name="val">A FSAmountType object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "
	///         Type of amount. The currency unit is implied; namely USD. Note that when this common element is used not all of the following values apply. There are notes to indicate values that are applicable.
	///       "</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetType( FSAmountType val )
	{
		SetField( FoodDTD.FSAMOUNT_TYPE, val );
	}

	/// <summary>
	/// Gets or sets the value of the <c>Credits</c> attribute.
	/// </summary>
	/// <value> The <c>Credits</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "
	///         Number of credits. This attribute does not apply to Cash or Value
	///         and hence has a value 0. It only applies to types BreakfastCredit and LunchCredit.
	///       "</para>
	/// <para>This attribute is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering attributes of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;Credits&gt;</description></item>
	/// </list>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public decimal? Credits
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( FoodDTD.FSAMOUNT_CREDITS ) ;
		}
		set
		{
			SetFieldValue( FoodDTD.FSAMOUNT_CREDITS, new SifDecimal( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>Currency</c> attribute.
	/// </summary>
	/// <value> The <c>Currency</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "Currency code. Where omitted, defaults to implementation-defined local currency, typically USD in the United States. "</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string Currency
	{
		get
		{ 
			return GetFieldValue( FoodDTD.FSAMOUNT_CURRENCY );
		}
		set
		{
			SetField( FoodDTD.FSAMOUNT_CURRENCY, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>Currency</c> attribute.
	/// </summary>
	/// <param name="val">A CurrencyNames object</param>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "Currency code. Where omitted, defaults to implementation-defined local currency, typically USD in the United States. "</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetCurrency( CurrencyNames val )
	{
		SetField( FoodDTD.FSAMOUNT_CURRENCY, val );
	}

}}
