// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using OpenADK.Library;

namespace OpenADK.Library.us.Food
{
	///<summary>
	/// Defines the set of values that can be specified whenever a FoodCategoryName
	/// is used as a parameter to a method or constructor. 
	///</summary>
	/// <remarks>
	/// Alternatively, the static
	///  <see cref="Wrap"/> method can be called to encapsulate any string value in
	///  a FoodCategoryName object.
	/// <para>Author: Generated by adkgen</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	[Serializable]
	public class FoodCategoryName : SifEnum
	{
	/// <summary>Sauce and gravy recipes ("36")</summary>
	public static readonly FoodCategoryName SAUCE_AND_GRAVY_RECIPES = new FoodCategoryName("36");

	/// <summary>Breakfast Cereals ("8")</summary>
	public static readonly FoodCategoryName BREAKFAST_CEREALS = new FoodCategoryName("8");

	/// <summary>Fast Foods ("21")</summary>
	public static readonly FoodCategoryName FAST_FOODS = new FoodCategoryName("21");

	/// <summary>Snacks and sweets ("19")</summary>
	public static readonly FoodCategoryName SNACKS = new FoodCategoryName("19");

	/// <summary>Grains ("20")</summary>
	public static readonly FoodCategoryName GRAINS = new FoodCategoryName("20");

	/// <summary>Luncheon meat and sausage ("7")</summary>
	public static readonly FoodCategoryName LUNCHEON_MEAT = new FoodCategoryName("7");

	/// <summary>Babyfood ("3")</summary>
	public static readonly FoodCategoryName BABYFOOD = new FoodCategoryName("3");

	/// <summary>Pork Products ("10")</summary>
	public static readonly FoodCategoryName PORK = new FoodCategoryName("10");

	/// <summary>Soup recipes ("37")</summary>
	public static readonly FoodCategoryName SOUP_RECIPES = new FoodCategoryName("37");

	/// <summary>Lamb, Veal and Game Products ("17")</summary>
	public static readonly FoodCategoryName LAMB_VEAL_GAME = new FoodCategoryName("17");

	/// <summary>Nuts and seeds ("12")</summary>
	public static readonly FoodCategoryName NUTS_AND_SEEDS = new FoodCategoryName("12");

	/// <summary>Bread and cereal recipes ("31")</summary>
	public static readonly FoodCategoryName BREAD_AND_CEREAL = new FoodCategoryName("31");

	/// <summary>Breakfast recipes ("39")</summary>
	public static readonly FoodCategoryName BREAKFAST_RECIPES = new FoodCategoryName("39");

	/// <summary>Fish ("15")</summary>
	public static readonly FoodCategoryName FISH = new FoodCategoryName("15");

	/// <summary>Condiments: catsup, mustard, relish ("16")</summary>
	public static readonly FoodCategoryName CONDIMENTS = new FoodCategoryName("16");

	/// <summary>Vegetables (includes beans and legumes) ("11")</summary>
	public static readonly FoodCategoryName VEGETABLES = new FoodCategoryName("11");

	/// <summary>Poultry Products ("5")</summary>
	public static readonly FoodCategoryName POULTRY = new FoodCategoryName("5");

	/// <summary>General recipes ("30")</summary>
	public static readonly FoodCategoryName GENERAL_RECIPES = new FoodCategoryName("30");

	/// <summary>Salad and dressing recipes ("34")</summary>
	public static readonly FoodCategoryName SALAD_AND_DRESSING_RECIPES = new FoodCategoryName("34");

	/// <summary>Purchased mixed dishes – breakfast entrees/main dishes ("44")</summary>
	public static readonly FoodCategoryName PURCHASED_BREAKFAST = new FoodCategoryName("44");

	/// <summary>Sandwich recipes ("35")</summary>
	public static readonly FoodCategoryName SANDWICH_RECIPES = new FoodCategoryName("35");

	/// <summary>Baked goods: breads, cakes, cookies, crackers, pies, rolls ("18")</summary>
	public static readonly FoodCategoryName BAKED = new FoodCategoryName("18");

	/// <summary>Miscellaneous ("29")</summary>
	public static readonly FoodCategoryName MISCELLANEOUS = new FoodCategoryName("29");

	/// <summary>Spices, seasonings, flavorings, leavening agents ("2")</summary>
	public static readonly FoodCategoryName SPICES = new FoodCategoryName("2");

	/// <summary>Fruits and fruit juices ("9")</summary>
	public static readonly FoodCategoryName FRUITS = new FoodCategoryName("9");

	/// <summary>Meals, Entrees, and Sidedishes ("22")</summary>
	public static readonly FoodCategoryName MEALS_ENTREES = new FoodCategoryName("22");

	/// <summary>Meat substitutes/Vegetable proteins ("45")</summary>
	public static readonly FoodCategoryName MEAT_SUBSTITUTES = new FoodCategoryName("45");

	/// <summary>Beef ("13")</summary>
	public static readonly FoodCategoryName BEEF = new FoodCategoryName("13");

	/// <summary>Purchased mixed dishes – lunch entrees/main dishes (pizza, etc) ("43")</summary>
	public static readonly FoodCategoryName PURCHASED_LUNCH = new FoodCategoryName("43");

	/// <summary>Soups, sauces and gravies ("6")</summary>
	public static readonly FoodCategoryName SOUPS = new FoodCategoryName("6");

	/// <summary>Fats and oils: margarine, shortening, mayonnaise, salad dressings ("4")</summary>
	public static readonly FoodCategoryName FATS = new FoodCategoryName("4");

	/// <summary>Dairy: butter, cheese, eggs, milk, yogurt ("1")</summary>
	public static readonly FoodCategoryName DAIRY = new FoodCategoryName("1");

	/// <summary>Main dish recipes ("33")</summary>
	public static readonly FoodCategoryName MAIN_DISH_RECIPES = new FoodCategoryName("33");

	/// <summary>Beverages ("14")</summary>
	public static readonly FoodCategoryName BEVERAGES = new FoodCategoryName("14");

	/// <summary>Vegetable recipes ("38")</summary>
	public static readonly FoodCategoryName VEGETABLE_RECIPES = new FoodCategoryName("38");

	/// <summary>Dessert recipes ("32")</summary>
	public static readonly FoodCategoryName DESSERT_RECIPES = new FoodCategoryName("32");

	///<summary>Wrap an arbitrary string value in a FoodCategoryName object.</summary>
	///<param name="wrappedValue">The element/attribute value.</param>
	///<remarks>This method does not verify
	///that the value is valid according to the SIF Specification</remarks>
	public static FoodCategoryName Wrap( String wrappedValue ) {
		return new FoodCategoryName( wrappedValue );
	}

	private FoodCategoryName( string enumDefValue ) : base( enumDefValue ) {}
	}
}
