// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Food{

/// <summary>A FoodserviceStudentEnrollmentCount</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 2.0</para>
/// </remarks>
[Serializable]
public class FoodserviceStudentEnrollmentCount : SifDataObject
{
	/// <summary>
	/// Creates an instance of a FoodserviceStudentEnrollmentCount
	/// </summary>
	public FoodserviceStudentEnrollmentCount() : base( Adk.SifVersion, FoodDTD.FOODSERVICESTUDENTENROLLMENTCOUNT ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="schoolInfoRefId">Reference to SchoolInfo</param>
	///<param name="date">Date the count is taken.</param>
	///<param name="program">A Program</param>
	///<param name="counts">A Counts</param>
	///
	public FoodserviceStudentEnrollmentCount( string schoolInfoRefId, DateTime? date, Program program, Counts counts ) : base( Adk.SifVersion, FoodDTD.FOODSERVICESTUDENTENROLLMENTCOUNT )
	{
		this.SchoolInfoRefId = schoolInfoRefId;
		this.Date = date;
		this.Program = program;
		this.Counts = counts;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected FoodserviceStudentEnrollmentCount( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { FoodDTD.FOODSERVICESTUDENTENROLLMENTCOUNT_SCHOOLINFOREFID, FoodDTD.FOODSERVICESTUDENTENROLLMENTCOUNT_DATE }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>SchoolInfoRefId</c> attribute.
	/// </summary>
	/// <value> The <c>SchoolInfoRefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "Reference to SchoolInfo"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string SchoolInfoRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( FoodDTD.FOODSERVICESTUDENTENROLLMENTCOUNT_SCHOOLINFOREFID ) ;
		}
		set
		{
			SetFieldValue( FoodDTD.FOODSERVICESTUDENTENROLLMENTCOUNT_SCHOOLINFOREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>Date</c> attribute.
	/// </summary>
	/// <value> The <c>Date</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "Date the count is taken."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public DateTime? Date
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( FoodDTD.FOODSERVICESTUDENTENROLLMENTCOUNT_DATE ) ;
		}
		set
		{
			SetFieldValue( FoodDTD.FOODSERVICESTUDENTENROLLMENTCOUNT_DATE, new SifDate( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;Program&gt;</c> element.</summary>
	/// <param name="Type">The type of the program. Type identifies the list of values.</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;Program&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setProgram</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>Program</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetProgram( FinancialProgram Type, string Value ) {
		RemoveChild( FoodDTD.FOODSERVICESTUDENTENROLLMENTCOUNT_PROGRAM);
		AddChild( FoodDTD.FOODSERVICESTUDENTENROLLMENTCOUNT_PROGRAM, new Program( Type, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Program&gt;</c> element.
	/// </summary>
	/// <value> A Program </value>
	/// <remarks>
	/// <para>To remove the <c>Program</c>, set <c>Program</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public Program Program
	{
		get
		{
			return (Program)GetChild( FoodDTD.FOODSERVICESTUDENTENROLLMENTCOUNT_PROGRAM);
		}
		set
		{
			RemoveChild( FoodDTD.FOODSERVICESTUDENTENROLLMENTCOUNT_PROGRAM);
			if( value != null)
			{
				AddChild( FoodDTD.FOODSERVICESTUDENTENROLLMENTCOUNT_PROGRAM, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;Counts&gt;</c> element.
	/// </summary>
	/// <value> A Counts </value>
	/// <remarks>
	/// <para>To remove the <c>Counts</c>, set <c>Counts</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public Counts Counts
	{
		get
		{
			return (Counts)GetChild( FoodDTD.FOODSERVICESTUDENTENROLLMENTCOUNT_COUNTS);
		}
		set
		{
			RemoveChild( FoodDTD.FOODSERVICESTUDENTENROLLMENTCOUNT_COUNTS);
			if( value != null)
			{
				AddChild( FoodDTD.FOODSERVICESTUDENTENROLLMENTCOUNT_COUNTS, value );
			}
		}
	}

}}
