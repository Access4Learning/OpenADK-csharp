// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Food{

/// <summary>A SaleQuantity</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.6</para>
/// <para>Since: 2.0</para>
/// </remarks>
[Serializable]
public class SaleQuantity : SifElement
{
	/// <summary>
	/// Creates an instance of a SaleQuantity
	/// </summary>
	public SaleQuantity() : base ( FoodDTD.SALEQUANTITY ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="value">The value of sale quantity</param>
	///<param name="mealStatus">A MealStatus</param>
	///<param name="saleUnit">Unit of Sale</param>
	///<param name="chargeToChild">Charge to child per unit</param>
	///
	public SaleQuantity( decimal? value, MealStatus mealStatus, string saleUnit, MonetaryAmount chargeToChild ) : base( FoodDTD.SALEQUANTITY )
	{
		this.Value = value;
		this.MealStatus = mealStatus;
		this.SaleUnit = saleUnit;
		this.ChargeToChild = chargeToChild;
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected SaleQuantity( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets or sets the value of the <c>&lt;Value&gt;</c> element.
	/// </summary>
	/// <value> The <c>Value</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The value of sale quantity"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public decimal? Value
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( FoodDTD.SALEQUANTITY_VALUE ) ;
		}
		set
		{
			SetFieldValue( FoodDTD.SALEQUANTITY_VALUE, new SifDecimal( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;MealStatus&gt;</c> element.</summary>
	/// <param name="Type">Meal status type.</param>
	///<remarks>
	/// <para>This form of <c>setMealStatus</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>MealStatus</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetMealStatus( FreeReducedStatus Type ) {
		RemoveChild( FoodDTD.SALEQUANTITY_MEALSTATUS);
		AddChild( FoodDTD.SALEQUANTITY_MEALSTATUS, new MealStatus( Type ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;MealStatus&gt;</c> element.
	/// </summary>
	/// <value> A MealStatus </value>
	/// <remarks>
	/// <para>To remove the <c>MealStatus</c>, set <c>MealStatus</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public MealStatus MealStatus
	{
		get
		{
			return (MealStatus)GetChild( FoodDTD.SALEQUANTITY_MEALSTATUS);
		}
		set
		{
			RemoveChild( FoodDTD.SALEQUANTITY_MEALSTATUS);
			if( value != null)
			{
				AddChild( FoodDTD.SALEQUANTITY_MEALSTATUS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;SaleUnit&gt;</c> element.
	/// </summary>
	/// <value> The <c>SaleUnit</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Unit of Sale"</para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string SaleUnit
	{
		get
		{
			return (string) GetSifSimpleFieldValue( FoodDTD.SALEQUANTITY_SALEUNIT ) ;
		}
		set
		{
			SetFieldValue( FoodDTD.SALEQUANTITY_SALEUNIT, new SifString( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;ChargeToChild&gt;</c> element.</summary>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;MonetaryAmount&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setChargeToChild</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ChargeToChild</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetChargeToChild( decimal? Value ) {
		RemoveChild( FoodDTD.SALEQUANTITY_CHARGETOCHILD);
		AddChild( FoodDTD.SALEQUANTITY_CHARGETOCHILD, new MonetaryAmount( Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ChargeToChild&gt;</c> element.
	/// </summary>
	/// <value> A MonetaryAmount </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Charge to child per unit"</para>
	/// <para>To remove the <c>MonetaryAmount</c>, set <c>ChargeToChild</c> to <c>null</c></para>
	/// <para>Version: 2.6</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public MonetaryAmount ChargeToChild
	{
		get
		{
			return (MonetaryAmount)GetChild( FoodDTD.SALEQUANTITY_CHARGETOCHILD);
		}
		set
		{
			RemoveChild( FoodDTD.SALEQUANTITY_CHARGETOCHILD);
			if( value != null)
			{
				AddChild( FoodDTD.SALEQUANTITY_CHARGETOCHILD, value );
			}
		}
	}

}}
