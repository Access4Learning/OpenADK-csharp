// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

using System;
using System.Text;
using System.Security.Permissions;
using System.Runtime.Serialization;
using OpenADK.Library;
using OpenADK.Library.Global;
using OpenADK.Library.us.Common;

namespace OpenADK.Library.us.Programs{

/// <summary>This object contains information pertaining to student eligibility for and participation in support programs.  SIF_Events are reported.</summary>
/// <remarks>
///
/// <para>Author: Generated by adkgen</para>
/// <para>Version: 2.5</para>
/// <para>Since: 1.5r1</para>
/// </remarks>
[Serializable]
public class StudentParticipation : SifDataObject
{
	/// <summary>
	/// Creates an instance of a StudentParticipation
	/// </summary>
	public StudentParticipation() : base( Adk.SifVersion, ProgramsDTD.STUDENTPARTICIPATION ){}

	/// <summary>
	/// Constructor that accepts values for all mandatory fields
	/// </summary>
	///<param name="refId">This is the unique identification code</param>
	///<param name="studentPersonalRefId">The GUID of the student that this object is linked to.</param>
	///<param name="type">A Type</param>
	///
	public StudentParticipation( string refId, string studentPersonalRefId, StudentParticipationType type ) : base( Adk.SifVersion, ProgramsDTD.STUDENTPARTICIPATION )
	{
		this.RefId = refId;
		this.StudentPersonalRefId = studentPersonalRefId;
		this.SetType( type );
	}

	/// <summary>
	/// Constructor used by the .Net Serialization formatter
	/// </summary>
	[SecurityPermission( SecurityAction.Demand, SerializationFormatter=true )] 
	protected StudentParticipation( SerializationInfo info, StreamingContext context ) : base( info, context ) {} 
	/// <summary>
	/// Gets the metadata fields that make up the key of this object
	/// </summary>
	/// <value>
	/// an array of metadata fields that make up the object's key
	/// </value>
	public override IElementDef[] KeyFields {
		get { return new IElementDef[] { ProgramsDTD.STUDENTPARTICIPATION_REFID }; }
	}

	/// <summary>
	/// Gets or sets the value of the <c>RefId</c> attribute.
	/// </summary>
	/// <value> The <c>RefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "This is the unique identification code"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public override string RefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_REFID ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_REFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>StudentPersonalRefId</c> attribute.
	/// </summary>
	/// <value> The <c>StudentPersonalRefId</c> attribute of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this attribute as: "The GUID of the student that this object is linked to."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string StudentPersonalRefId
	{
		get
		{
			return (string) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_STUDENTPERSONALREFID ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_STUDENTPERSONALREFID, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StudentParticipationAsOfDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>StudentParticipationAsOfDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "
	///         Effective date (NOT the entry date) of this StudentParticipation instance for the identified student and program.
	///         Each time there is a change to the student's program participation profile, a new instance of this object is to be generated with
	///         the appropriate StudentParticipationAsOfDate and a new RefId.
	///       "</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public DateTime? StudentParticipationAsOfDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_STUDENTPARTICIPATIONASOFDATE ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_STUDENTPARTICIPATIONASOFDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>Type</c> attribute.
	/// </summary>
	/// <value> The <c>Type</c> attribute of this object.</value>
	/// <remarks>
	/// <para>Version: 1.5r1</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string Type
	{
		get
		{ 
			return GetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_TYPE );
		}
		set
		{
			SetField( ProgramsDTD.STUDENTPARTICIPATION_TYPE, value );
		}
	}

	/// <summary>
	/// Sets the value of the <c>Type</c> attribute.
	/// </summary>
	/// <param name="val">A StudentParticipationType object</param>
	/// <remarks>
	/// <para>Version: 1.5r1</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetType( StudentParticipationType val )
	{
		SetField( ProgramsDTD.STUDENTPARTICIPATION_TYPE, val );
	}

	///<summary>Sets the value of the <c>&lt;ProgramType&gt;</c> element.</summary>
	/// <param name="Code">The type of the program. Type identifies the list of values.</param>
	///<remarks>
	/// <para>This form of <c>setProgramType</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ProgramType</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetProgramType( StudentFamilyProgramType Code ) {
		RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMTYPE);
		AddChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMTYPE, new ProgramType( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ProgramType&gt;</c> element.
	/// </summary>
	/// <value> A ProgramType </value>
	/// <remarks>
	/// <para>To remove the <c>ProgramType</c>, set <c>ProgramType</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public ProgramType ProgramType
	{
		get
		{
			return (ProgramType)GetChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMTYPE);
		}
		set
		{
			RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMTYPE);
			if( value != null)
			{
				AddChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMTYPE, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ReferralDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>ReferralDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Date student was referred for evaluation/program participation."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public DateTime? ReferralDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_REFERRALDATE ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_REFERRALDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EvaluationDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>EvaluationDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Date the evaluation/assessment process for student was completed."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public DateTime? EvaluationDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_EVALUATIONDATE ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_EVALUATIONDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ProgramFundingSources&gt;</c> element.
	/// </summary>
	/// <value> A ProgramFundingSources </value>
	/// <remarks>
	/// <para>To remove the <c>ProgramFundingSources</c>, set <c>ProgramFundingSources</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public ProgramFundingSources ProgramFundingSources
	{
		get
		{
			return (ProgramFundingSources)GetChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMFUNDINGSOURCES);
		}
		set
		{
			RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMFUNDINGSOURCES);
			if( value != null)
			{
				AddChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMFUNDINGSOURCES, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;ManagingPublicAgency&gt;</c> element.</summary>
	/// <param name="SifRefObject">A SIF_RefObject</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;SIF_RefId&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setManagingPublicAgency</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ManagingPublicAgency</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetManagingPublicAgency( string SifRefObject, string Value ) {
		RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_MANAGINGPUBLICAGENCY);
		AddChild( ProgramsDTD.STUDENTPARTICIPATION_MANAGINGPUBLICAGENCY, new SIF_RefId( SifRefObject, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ManagingPublicAgency&gt;</c> element.
	/// </summary>
	/// <value> A SIF_RefId </value>
	/// <remarks>
	/// <para>To remove the <c>SIF_RefId</c>, set <c>ManagingPublicAgency</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public SIF_RefId ManagingPublicAgency
	{
		get
		{
			return (SIF_RefId)GetChild( ProgramsDTD.STUDENTPARTICIPATION_MANAGINGPUBLICAGENCY);
		}
		set
		{
			RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_MANAGINGPUBLICAGENCY);
			if( value != null)
			{
				AddChild( ProgramsDTD.STUDENTPARTICIPATION_MANAGINGPUBLICAGENCY, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ReevaluationDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>ReevaluationDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Date students will be reevaluated for continued placement in a support program(s)."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public DateTime? ReevaluationDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_REEVALUATIONDATE ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_REEVALUATIONDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ExceptionalityCategories&gt;</c> element.
	/// </summary>
	/// <value> An ExceptionalityCategories </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Exceptionality description/code which will identify the exceptionality of the student.  Not all programs require identification of an exceptionality.  If required for this program type, must have at least one element with Type attribute = "Primary"."</para>
	/// <para>To remove the <c>ExceptionalityCategories</c>, set <c>ExceptionalityCategories</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public ExceptionalityCategories ExceptionalityCategories
	{
		get
		{
			return (ExceptionalityCategories)GetChild( ProgramsDTD.STUDENTPARTICIPATION_EXCEPTIONALITYCATEGORIES);
		}
		set
		{
			RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_EXCEPTIONALITYCATEGORIES);
			if( value != null)
			{
				AddChild( ProgramsDTD.STUDENTPARTICIPATION_EXCEPTIONALITYCATEGORIES, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;ManagingSchool&gt;</c> element.</summary>
	/// <param name="SifRefObject">A SIF_RefObject</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;SIF_RefId&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setManagingSchool</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ManagingSchool</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetManagingSchool( string SifRefObject, string Value ) {
		RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_MANAGINGSCHOOL);
		AddChild( ProgramsDTD.STUDENTPARTICIPATION_MANAGINGSCHOOL, new SIF_RefId( SifRefObject, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ManagingSchool&gt;</c> element.
	/// </summary>
	/// <value> A SIF_RefId </value>
	/// <remarks>
	/// <para>To remove the <c>SIF_RefId</c>, set <c>ManagingSchool</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public SIF_RefId ManagingSchool
	{
		get
		{
			return (SIF_RefId)GetChild( ProgramsDTD.STUDENTPARTICIPATION_MANAGINGSCHOOL);
		}
		set
		{
			RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_MANAGINGSCHOOL);
			if( value != null)
			{
				AddChild( ProgramsDTD.STUDENTPARTICIPATION_MANAGINGSCHOOL, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ProgramEligibilityDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>ProgramEligibilityDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Date student is eligible for beginning the support program(s)."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public DateTime? ProgramEligibilityDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMELIGIBILITYDATE ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMELIGIBILITYDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PartCTransitionMeetingNotHeldReasons&gt;</c> element.
	/// </summary>
	/// <value> A PartCTransitionMeetingNotHeldReasons </value>
	/// <remarks>
	/// <para>To remove the <c>PartCTransitionMeetingNotHeldReasons</c>, set <c>PartCTransitionMeetingNotHeldReasons</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public PartCTransitionMeetingNotHeldReasons PartCTransitionMeetingNotHeldReasons
	{
		get
		{
			return (PartCTransitionMeetingNotHeldReasons)GetChild( ProgramsDTD.STUDENTPARTICIPATION_PARTCTRANSITIONMEETINGNOTHELDREASONS);
		}
		set
		{
			RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_PARTCTRANSITIONMEETINGNOTHELDREASONS);
			if( value != null)
			{
				AddChild( ProgramsDTD.STUDENTPARTICIPATION_PARTCTRANSITIONMEETINGNOTHELDREASONS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ProgramPlanType&gt;</c> element.
	/// </summary>
	/// <value> A ProgramPlanType </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The document that outlines the student program/plan as approved by parents, guardians, and staff.  Values"IFSP" - Individualized Family Service Plan"IEP" - Individualized Education Plan"ILP" - Individualized Learning Plan"LIT" - Literacy Plan"SP" - Services Plan"ITP"-Individualized Transition Plan"Other""</para>
	/// <para>This null is known by more than one tag name depending on the version of SIF in use. 
	/// The ADK will use the tag names shown below when parsing and rendering nulls of this kind.</para>
	/// <list type="table"><listheader><term>Version</term><description>Tag</description></listheader>;
	/// <item><term>2.0 (and greater)</term><description>&lt;ProgramPlanType&gt;</description></item>
	/// </list>
	/// <para>To remove the <c>ProgramPlanType</c>, set <c>ProgramPlanType</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public ProgramPlanType ProgramPlanType
	{
		get
		{
			return (ProgramPlanType)GetChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMPLANTYPE);
		}
		set
		{
			RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMPLANTYPE);
			if( value != null)
			{
				AddChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMPLANTYPE, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PartCTransitionMeetingDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>PartCTransitionMeetingDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Date the transition meeting was held for a Part C child."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public DateTime? PartCTransitionMeetingDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PARTCTRANSITIONMEETINGDATE ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PARTCTRANSITIONMEETINGDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ProgramPlanDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>ProgramPlanDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Date the most recent program plan was completed and approved by the team responsible for developing it.  The date the parent consented to placement is NOREPDate."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public DateTime? ProgramPlanDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMPLANDATE ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMPLANDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PartCTransitionMeetingOutcomes&gt;</c> element.
	/// </summary>
	/// <value> A PartCTransitionMeetingOutcomes </value>
	/// <remarks>
	/// <para>To remove the <c>PartCTransitionMeetingOutcomes</c>, set <c>PartCTransitionMeetingOutcomes</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public PartCTransitionMeetingOutcomes PartCTransitionMeetingOutcomes
	{
		get
		{
			return (PartCTransitionMeetingOutcomes)GetChild( ProgramsDTD.STUDENTPARTICIPATION_PARTCTRANSITIONMEETINGOUTCOMES);
		}
		set
		{
			RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_PARTCTRANSITIONMEETINGOUTCOMES);
			if( value != null)
			{
				AddChild( ProgramsDTD.STUDENTPARTICIPATION_PARTCTRANSITIONMEETINGOUTCOMES, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ProgramPlacementDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>ProgramPlacementDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Date student began the support program."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public DateTime? ProgramPlacementDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMPLACEMENTDATE ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMPLACEMENTDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ReferralSource&gt;</c> element.
	/// </summary>
	/// <value> A ReferralSource </value>
	/// <remarks>
	/// <para>To remove the <c>ReferralSource</c>, set <c>ReferralSource</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public ReferralSource ReferralSource
	{
		get
		{
			return (ReferralSource)GetChild( ProgramsDTD.STUDENTPARTICIPATION_REFERRALSOURCE);
		}
		set
		{
			RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_REFERRALSOURCE);
			if( value != null)
			{
				AddChild( ProgramsDTD.STUDENTPARTICIPATION_REFERRALSOURCE, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;LeastRestrictiveEnvironment&gt;</c> element.</summary>
	/// <param name="CodeType">If CodeType = "NCES" Then use Code set 0307 Service Setting [NCES Handbooks]</param>
	/// <param name="Code">Setting where service is provided (Regular Class, Resource Room, Homebound, Detention Center, etc.).</param>
	///<remarks>
	/// <para>This form of <c>setLeastRestrictiveEnvironment</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>LeastRestrictiveEnvironment</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetLeastRestrictiveEnvironment( string CodeType, ServiceSettingCode Code ) {
		RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_LEASTRESTRICTIVEENVIRONMENT);
		AddChild( ProgramsDTD.STUDENTPARTICIPATION_LEASTRESTRICTIVEENVIRONMENT, new ServiceSetting( CodeType, Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;LeastRestrictiveEnvironment&gt;</c> element.
	/// </summary>
	/// <value> A ServiceSetting </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Category represents the educational setting in which children with disabilities have been placed (setting where child has most desirable learning environment).  Primarily used for IDEA federal reporting."</para>
	/// <para>To remove the <c>ServiceSetting</c>, set <c>LeastRestrictiveEnvironment</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public ServiceSetting LeastRestrictiveEnvironment
	{
		get
		{
			return (ServiceSetting)GetChild( ProgramsDTD.STUDENTPARTICIPATION_LEASTRESTRICTIVEENVIRONMENT);
		}
		set
		{
			RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_LEASTRESTRICTIVEENVIRONMENT);
			if( value != null)
			{
				AddChild( ProgramsDTD.STUDENTPARTICIPATION_LEASTRESTRICTIVEENVIRONMENT, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ExtendedSchoolYear&gt;</c> element.
	/// </summary>
	/// <value> The <c>ExtendedSchoolYear</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "For special education, indicates whether Extended School Year (ESY) / summer  services have been determined as necessary"</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public bool? ExtendedSchoolYear
	{
		get
		{
			return (bool?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_EXTENDEDSCHOOLYEAR ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_EXTENDEDSCHOOLYEAR, new SifBoolean( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ProgramStatus&gt;</c> element.
	/// </summary>
	/// <value> A ProgramStatus </value>
	/// <remarks>
	/// <para>To remove the <c>ProgramStatus</c>, set <c>ProgramStatus</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public ProgramStatus ProgramStatus
	{
		get
		{
			return (ProgramStatus)GetChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMSTATUS);
		}
		set
		{
			RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMSTATUS);
			if( value != null)
			{
				AddChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMSTATUS, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;GiftedEligibilityCriteria&gt;</c> element.
	/// </summary>
	/// <value> The <c>GiftedEligibilityCriteria</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "State / local code used to determine eligibility for Gifted / Talented program."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string GiftedEligibilityCriteria
	{
		get
		{
			return (string) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_GIFTEDELIGIBILITYCRITERIA ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_GIFTEDELIGIBILITYCRITERIA, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PrivateNotPlacedByPublic&gt;</c> element.
	/// </summary>
	/// <value> The <c>PrivateNotPlacedByPublic</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Indicates whether the student is enrolled by a parent/guardian in a private school and has special education/services provided at public expense.  Necessary for the OSEP federal IDEA reports.."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public bool? PrivateNotPlacedByPublic
	{
		get
		{
			return (bool?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PRIVATENOTPLACEDBYPUBLIC ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PRIVATENOTPLACEDBYPUBLIC, new SifBoolean( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ProgramReviewDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>ProgramReviewDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Projected date of the program plan review (for IDEA, the projected annual IEP review date)."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public DateTime? ProgramReviewDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMREVIEWDATE ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMREVIEWDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EvaluationParentalConsentDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>EvaluationParentalConsentDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Date parent(s) consented to completion of evaluation of child for program participation."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public DateTime? EvaluationParentalConsentDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_EVALUATIONPARENTALCONSENTDATE ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_EVALUATIONPARENTALCONSENTDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ProgramExitDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>ProgramExitDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Date student exited support program(s)."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public DateTime? ProgramExitDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMEXITDATE ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMEXITDATE, new SifDate( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;ProgramExitReason&gt;</c> element.</summary>
	/// <param name="CodeType">If value="NCES" then use code set 0815 Program Exit Reason [NCES Handbooks]</param>
	///<remarks>
	/// <para>This form of <c>setProgramExitReason</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ProgramExitReason</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public void SetProgramExitReason( ProgramExitReasonCode CodeType ) {
		RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMEXITREASON);
		AddChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMEXITREASON, new ProgramExitReason( CodeType ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ProgramExitReason&gt;</c> element.
	/// </summary>
	/// <value> A ProgramExitReason </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Required if student has exited the program."</para>
	/// <para>To remove the <c>ProgramExitReason</c>, set <c>ProgramExitReason</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public ProgramExitReason ProgramExitReason
	{
		get
		{
			return (ProgramExitReason)GetChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMEXITREASON);
		}
		set
		{
			RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMEXITREASON);
			if( value != null)
			{
				AddChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMEXITREASON, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EvaluationExtensionDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>EvaluationExtensionDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Actual date by which evaluation must be completed (for state use in determining timeliness in event that parent and LEA agreed to an extension beyond normal state deadline)."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public DateTime? EvaluationExtensionDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_EVALUATIONEXTENSIONDATE ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_EVALUATIONEXTENSIONDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ExtensionComments&gt;</c> element.
	/// </summary>
	/// <value> The <c>ExtensionComments</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Contains any comments on the extension.  Optional even if an EvaluationExtensionDate is present."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string ExtensionComments
	{
		get
		{
			return (string) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_EXTENSIONCOMMENTS ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_EXTENSIONCOMMENTS, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ParticipationContact&gt;</c> element.
	/// </summary>
	/// <value> The <c>ParticipationContact</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Primary contact for this record."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 1.5r1</para>
	/// </remarks>
	public string ParticipationContact
	{
		get
		{
			return (string) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PARTICIPATIONCONTACT ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PARTICIPATIONCONTACT, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ProgramPlanEffectiveDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>ProgramPlanEffectiveDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Date by which the plan must be implemented for the student."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public DateTime? ProgramPlanEffectiveDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMPLANEFFECTIVEDATE ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMPLANEFFECTIVEDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;NOREPDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>NOREPDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Date the Notice of Recommended Educational Placement was signed and approved by the parent / guardian of the student."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public DateTime? NOREPDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_NOREPDATE ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_NOREPDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PlacementParentalConsentDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>PlacementParentalConsentDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Date the parent(s) consented to the proposed placement."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public DateTime? PlacementParentalConsentDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PLACEMENTPARENTALCONSENTDATE ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PLACEMENTPARENTALCONSENTDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ExtendedDay&gt;</c> element.
	/// </summary>
	/// <value> The <c>ExtendedDay</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "For special education, indicates whether Extended School Day (ESD) services have been determined as necessary."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public bool? ExtendedDay
	{
		get
		{
			return (bool?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_EXTENDEDDAY ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_EXTENDEDDAY, new SifBoolean( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;ProgramAvailability&gt;</c> element.</summary>
	/// <param name="Code">Describes the availability of the program.</param>
	///<remarks>
	/// <para>This form of <c>setProgramAvailability</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ProgramAvailability</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetProgramAvailability( ProgramAvailabilityCode Code ) {
		RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMAVAILABILITY);
		AddChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMAVAILABILITY, new ProgramAvailability( Code ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ProgramAvailability&gt;</c> element.
	/// </summary>
	/// <value> A ProgramAvailability </value>
	/// <remarks>
	/// <para>To remove the <c>ProgramAvailability</c>, set <c>ProgramAvailability</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public ProgramAvailability ProgramAvailability
	{
		get
		{
			return (ProgramAvailability)GetChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMAVAILABILITY);
		}
		set
		{
			RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMAVAILABILITY);
			if( value != null)
			{
				AddChild( ProgramsDTD.STUDENTPARTICIPATION_PROGRAMAVAILABILITY, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;FBADate&gt;</c> element.
	/// </summary>
	/// <value> The <c>FBADate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The most recent date on which the IEP Team completed a full and comprehensive review of all functional behavioral assessment materials."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public DateTime? FBADate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_FBADATE ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_FBADATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;BIPDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>BIPDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The most recent date on which the IEP Team approved a behavioral intervention plan."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public DateTime? BIPDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_BIPDATE ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_BIPDATE, new SifDate( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ProjectedExitDate&gt;</c> element.
	/// </summary>
	/// <value> The <c>ProjectedExitDate</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The date on which it is projected that a student will exit program.  Has typically been provided when student turns 14; under new IDEA, may change to 16."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public DateTime? ProjectedExitDate
	{
		get
		{
			return (DateTime?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PROJECTEDEXITDATE ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_PROJECTEDEXITDATE, new SifDate( value ), value );
		}
	}

	///<summary>Sets the value of the <c>&lt;ProjectedExitReason&gt;</c> element.</summary>
	/// <param name="Codeset">Identifies source of value provided.</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;ProjectedExitReason&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setProjectedExitReason</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>ProjectedExitReason</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetProjectedExitReason( Codeset Codeset, string Value ) {
		RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_PROJECTEDEXITREASON);
		AddChild( ProgramsDTD.STUDENTPARTICIPATION_PROJECTEDEXITREASON, new ProjectedExitReason( Codeset, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;ProjectedExitReason&gt;</c> element.
	/// </summary>
	/// <value> A ProjectedExitReason </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Review by program / state.  May be required if a ProjectedExitDate is present.  The projected reason for a student's exit from program."</para>
	/// <para>To remove the <c>ProjectedExitReason</c>, set <c>ProjectedExitReason</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public ProjectedExitReason ProjectedExitReason
	{
		get
		{
			return (ProjectedExitReason)GetChild( ProgramsDTD.STUDENTPARTICIPATION_PROJECTEDEXITREASON);
		}
		set
		{
			RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_PROJECTEDEXITREASON);
			if( value != null)
			{
				AddChild( ProgramsDTD.STUDENTPARTICIPATION_PROJECTEDEXITREASON, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;PlannedAssessmentParticipation&gt;</c> element.</summary>
	/// <param name="Codeset">Identifies source of value provided.</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;PlannedAssessmentParticipation&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setPlannedAssessmentParticipation</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>PlannedAssessmentParticipation</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetPlannedAssessmentParticipation( Codeset Codeset, string Value ) {
		RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_PLANNEDASSESSMENTPARTICIPATION);
		AddChild( ProgramsDTD.STUDENTPARTICIPATION_PLANNEDASSESSMENTPARTICIPATION, new PlannedAssessmentParticipation( Codeset, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;PlannedAssessmentParticipation&gt;</c> element.
	/// </summary>
	/// <value> A PlannedAssessmentParticipation </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "The student's planned level of participation in statewide assessments."</para>
	/// <para>To remove the <c>PlannedAssessmentParticipation</c>, set <c>PlannedAssessmentParticipation</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public PlannedAssessmentParticipation PlannedAssessmentParticipation
	{
		get
		{
			return (PlannedAssessmentParticipation)GetChild( ProgramsDTD.STUDENTPARTICIPATION_PLANNEDASSESSMENTPARTICIPATION);
		}
		set
		{
			RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_PLANNEDASSESSMENTPARTICIPATION);
			if( value != null)
			{
				AddChild( ProgramsDTD.STUDENTPARTICIPATION_PLANNEDASSESSMENTPARTICIPATION, value );
			}
		}
	}

	///<summary>Sets the value of the <c>&lt;TransitionPlanning&gt;</c> element.</summary>
	/// <param name="Codeset">Identifies source of value provided.</param>
	/// <param name="Value">Gets or sets the content value of the &amp;lt;TransitionPlanning&amp;gt; element</param>
	///<remarks>
	/// <para>This form of <c>setTransitionPlanning</c> is provided as a convenience method
	/// that is functionally equivalent to the <c>TransitionPlanning</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public void SetTransitionPlanning( Codeset Codeset, string Value ) {
		RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_TRANSITIONPLANNING);
		AddChild( ProgramsDTD.STUDENTPARTICIPATION_TRANSITIONPLANNING, new TransitionPlanning( Codeset, Value ) );
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;TransitionPlanning&gt;</c> element.
	/// </summary>
	/// <value> A TransitionPlanning </value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this null as: "Purpose / goal for recommended transition planning services."</para>
	/// <para>To remove the <c>TransitionPlanning</c>, set <c>TransitionPlanning</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public TransitionPlanning TransitionPlanning
	{
		get
		{
			return (TransitionPlanning)GetChild( ProgramsDTD.STUDENTPARTICIPATION_TRANSITIONPLANNING);
		}
		set
		{
			RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_TRANSITIONPLANNING);
			if( value != null)
			{
				AddChild( ProgramsDTD.STUDENTPARTICIPATION_TRANSITIONPLANNING, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;StudentSpecialEducationFTE&gt;</c> element.
	/// </summary>
	/// <value> The <c>StudentSpecialEducationFTE</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Calculated ratio of time the student is in a special ed setting.  Values range from 0.00 to 1.00.  If the student is in a special ed setting 25% of the time, the value is .25; if 100% of the time, the value is 1.00."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public decimal? StudentSpecialEducationFTE
	{
		get
		{
			return (decimal?) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_STUDENTSPECIALEDUCATIONFTE ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_STUDENTSPECIALEDUCATIONFTE, new SifDecimal( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;EntryPerson&gt;</c> element.
	/// </summary>
	/// <value> The <c>EntryPerson</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "Identification / name of the person who created the transaction that led to the creation of this instance of the object."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.0</para>
	/// </remarks>
	public string EntryPerson
	{
		get
		{
			return (string) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_ENTRYPERSON ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_ENTRYPERSON, new SifString( value ), value );
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;AdditionalProgramAvailabilityList&gt;</c> element.
	/// </summary>
	/// <value> An AdditionalProgramAvailabilityList </value>
	/// <remarks>
	/// <para>To remove the <c>AdditionalProgramAvailabilityList</c>, set <c>AdditionalProgramAvailabilityList</c> to <c>null</c></para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public AdditionalProgramAvailabilityList AdditionalProgramAvailabilityList
	{
		get
		{
			return (AdditionalProgramAvailabilityList)GetChild( ProgramsDTD.STUDENTPARTICIPATION_ADDITIONALPROGRAMAVAILABILITYLIST);
		}
		set
		{
			RemoveChild( ProgramsDTD.STUDENTPARTICIPATION_ADDITIONALPROGRAMAVAILABILITYLIST);
			if( value != null)
			{
				AddChild( ProgramsDTD.STUDENTPARTICIPATION_ADDITIONALPROGRAMAVAILABILITYLIST, value );
			}
		}
	}

	/// <summary>
	/// Gets or sets the value of the <c>&lt;CaseManager&gt;</c> element.
	/// </summary>
	/// <value> The <c>CaseManager</c> element of this object.</value>
	/// <remarks>
	/// <para>The SIF specification defines the meaning of this element as: "The name of the case manager responsible for the academic plans of this student."</para>
	/// <para>Version: 2.5</para>
	/// <para>Since: 2.4</para>
	/// </remarks>
	public string CaseManager
	{
		get
		{
			return (string) GetSifSimpleFieldValue( ProgramsDTD.STUDENTPARTICIPATION_CASEMANAGER ) ;
		}
		set
		{
			SetFieldValue( ProgramsDTD.STUDENTPARTICIPATION_CASEMANAGER, new SifString( value ), value );
		}
	}

}}
